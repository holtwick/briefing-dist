{"version":3,"file":"lazy-sentry.0a849caa.js","sources":["../../node_modules/.pnpm/@sentry+utils@7.14.0/node_modules/@sentry/utils/esm/global.js","../../node_modules/.pnpm/@sentry+utils@7.14.0/node_modules/@sentry/utils/esm/is.js","../../node_modules/.pnpm/@sentry+utils@7.14.0/node_modules/@sentry/utils/esm/browser.js","../../node_modules/.pnpm/@sentry+utils@7.14.0/node_modules/@sentry/utils/esm/error.js","../../node_modules/.pnpm/@sentry+utils@7.14.0/node_modules/@sentry/utils/esm/dsn.js","../../node_modules/.pnpm/@sentry+utils@7.14.0/node_modules/@sentry/utils/esm/logger.js","../../node_modules/.pnpm/@sentry+utils@7.14.0/node_modules/@sentry/utils/esm/string.js","../../node_modules/.pnpm/@sentry+utils@7.14.0/node_modules/@sentry/utils/esm/object.js","../../node_modules/.pnpm/@sentry+utils@7.14.0/node_modules/@sentry/utils/esm/buildPolyfills/_nullishCoalesce.js","../../node_modules/.pnpm/@sentry+utils@7.14.0/node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js","../../node_modules/.pnpm/@sentry+utils@7.14.0/node_modules/@sentry/utils/esm/stacktrace.js","../../node_modules/.pnpm/@sentry+utils@7.14.0/node_modules/@sentry/utils/esm/supports.js","../../node_modules/.pnpm/@sentry+utils@7.14.0/node_modules/@sentry/utils/esm/instrument.js","../../node_modules/.pnpm/@sentry+utils@7.14.0/node_modules/@sentry/utils/esm/memo.js","../../node_modules/.pnpm/@sentry+utils@7.14.0/node_modules/@sentry/utils/esm/misc.js","../../node_modules/.pnpm/@sentry+utils@7.14.0/node_modules/@sentry/utils/esm/env.js","../../node_modules/.pnpm/@sentry+utils@7.14.0/node_modules/@sentry/utils/esm/node.js","../../node_modules/.pnpm/@sentry+utils@7.14.0/node_modules/@sentry/utils/esm/normalize.js","../../node_modules/.pnpm/@sentry+utils@7.14.0/node_modules/@sentry/utils/esm/syncpromise.js","../../node_modules/.pnpm/@sentry+utils@7.14.0/node_modules/@sentry/utils/esm/promisebuffer.js","../../node_modules/.pnpm/@sentry+utils@7.14.0/node_modules/@sentry/utils/esm/url.js","../../node_modules/.pnpm/@sentry+utils@7.14.0/node_modules/@sentry/utils/esm/severity.js","../../node_modules/.pnpm/@sentry+utils@7.14.0/node_modules/@sentry/utils/esm/time.js","../../node_modules/.pnpm/@sentry+utils@7.14.0/node_modules/@sentry/utils/esm/tracing.js","../../node_modules/.pnpm/@sentry+utils@7.14.0/node_modules/@sentry/utils/esm/envelope.js","../../node_modules/.pnpm/@sentry+utils@7.14.0/node_modules/@sentry/utils/esm/clientreport.js","../../node_modules/.pnpm/@sentry+utils@7.14.0/node_modules/@sentry/utils/esm/ratelimit.js","../../node_modules/.pnpm/@sentry+utils@7.14.0/node_modules/@sentry/utils/esm/baggage.js","../../node_modules/.pnpm/@sentry+hub@7.14.0/node_modules/@sentry/hub/esm/session.js","../../node_modules/.pnpm/@sentry+hub@7.14.0/node_modules/@sentry/hub/esm/scope.js","../../node_modules/.pnpm/@sentry+hub@7.14.0/node_modules/@sentry/hub/esm/hub.js","../../node_modules/.pnpm/@sentry+hub@7.14.0/node_modules/@sentry/hub/esm/exports.js","../../node_modules/.pnpm/@sentry+core@7.14.0/node_modules/@sentry/core/esm/api.js","../../node_modules/.pnpm/@sentry+core@7.14.0/node_modules/@sentry/core/esm/envelope.js","../../node_modules/.pnpm/@sentry+core@7.14.0/node_modules/@sentry/core/esm/integration.js","../../node_modules/.pnpm/@sentry+core@7.14.0/node_modules/@sentry/core/esm/baseclient.js","../../node_modules/.pnpm/@sentry+core@7.14.0/node_modules/@sentry/core/esm/sdk.js","../../node_modules/.pnpm/@sentry+core@7.14.0/node_modules/@sentry/core/esm/transports/base.js","../../node_modules/.pnpm/@sentry+core@7.14.0/node_modules/@sentry/core/esm/version.js","../../node_modules/.pnpm/@sentry+core@7.14.0/node_modules/@sentry/core/esm/integrations/functiontostring.js","../../node_modules/.pnpm/@sentry+core@7.14.0/node_modules/@sentry/core/esm/integrations/inboundfilters.js","../../node_modules/.pnpm/@sentry+browser@7.14.0/node_modules/@sentry/browser/esm/eventbuilder.js","../../node_modules/.pnpm/@sentry+browser@7.14.0/node_modules/@sentry/browser/esm/integrations/breadcrumbs.js","../../node_modules/.pnpm/@sentry+browser@7.14.0/node_modules/@sentry/browser/esm/client.js","../../node_modules/.pnpm/@sentry+browser@7.14.0/node_modules/@sentry/browser/esm/transports/utils.js","../../node_modules/.pnpm/@sentry+browser@7.14.0/node_modules/@sentry/browser/esm/transports/fetch.js","../../node_modules/.pnpm/@sentry+browser@7.14.0/node_modules/@sentry/browser/esm/transports/xhr.js","../../node_modules/.pnpm/@sentry+browser@7.14.0/node_modules/@sentry/browser/esm/stack-parsers.js","../../node_modules/.pnpm/@sentry+browser@7.14.0/node_modules/@sentry/browser/esm/helpers.js","../../node_modules/.pnpm/@sentry+browser@7.14.0/node_modules/@sentry/browser/esm/integrations/globalhandlers.js","../../node_modules/.pnpm/@sentry+browser@7.14.0/node_modules/@sentry/browser/esm/integrations/trycatch.js","../../node_modules/.pnpm/@sentry+browser@7.14.0/node_modules/@sentry/browser/esm/integrations/linkederrors.js","../../node_modules/.pnpm/@sentry+browser@7.14.0/node_modules/@sentry/browser/esm/integrations/httpcontext.js","../../node_modules/.pnpm/@sentry+browser@7.14.0/node_modules/@sentry/browser/esm/integrations/dedupe.js","../../node_modules/.pnpm/@sentry+browser@7.14.0/node_modules/@sentry/browser/esm/sdk.js","../../node_modules/.pnpm/@sentry+browser@7.14.0/node_modules/@sentry/browser/esm/index.js","../../node_modules/.pnpm/@sentry+tracing@7.14.0/node_modules/@sentry/tracing/esm/utils.js","../../node_modules/.pnpm/@sentry+tracing@7.14.0/node_modules/@sentry/tracing/esm/errors.js","../../node_modules/.pnpm/@sentry+tracing@7.14.0/node_modules/@sentry/tracing/esm/span.js","../../node_modules/.pnpm/@sentry+tracing@7.14.0/node_modules/@sentry/tracing/esm/transaction.js","../../node_modules/.pnpm/@sentry+tracing@7.14.0/node_modules/@sentry/tracing/esm/idletransaction.js","../../node_modules/.pnpm/@sentry+tracing@7.14.0/node_modules/@sentry/tracing/esm/hubextensions.js","../../node_modules/.pnpm/@sentry+tracing@7.14.0/node_modules/@sentry/tracing/esm/browser/backgroundtab.js","../../node_modules/.pnpm/@sentry+tracing@7.14.0/node_modules/@sentry/tracing/esm/browser/web-vitals/lib/bindReporter.js","../../node_modules/.pnpm/@sentry+tracing@7.14.0/node_modules/@sentry/tracing/esm/browser/web-vitals/lib/generateUniqueID.js","../../node_modules/.pnpm/@sentry+tracing@7.14.0/node_modules/@sentry/tracing/esm/browser/web-vitals/lib/initMetric.js","../../node_modules/.pnpm/@sentry+tracing@7.14.0/node_modules/@sentry/tracing/esm/browser/web-vitals/lib/observe.js","../../node_modules/.pnpm/@sentry+tracing@7.14.0/node_modules/@sentry/tracing/esm/browser/web-vitals/lib/onHidden.js","../../node_modules/.pnpm/@sentry+tracing@7.14.0/node_modules/@sentry/tracing/esm/browser/web-vitals/getCLS.js","../../node_modules/.pnpm/@sentry+tracing@7.14.0/node_modules/@sentry/tracing/esm/browser/web-vitals/lib/getVisibilityWatcher.js","../../node_modules/.pnpm/@sentry+tracing@7.14.0/node_modules/@sentry/tracing/esm/browser/web-vitals/getFID.js","../../node_modules/.pnpm/@sentry+tracing@7.14.0/node_modules/@sentry/tracing/esm/browser/web-vitals/getLCP.js","../../node_modules/.pnpm/@sentry+tracing@7.14.0/node_modules/@sentry/tracing/esm/browser/metrics/utils.js","../../node_modules/.pnpm/@sentry+tracing@7.14.0/node_modules/@sentry/tracing/esm/browser/metrics/index.js","../../node_modules/.pnpm/@sentry+tracing@7.14.0/node_modules/@sentry/tracing/esm/browser/request.js","../../node_modules/.pnpm/@sentry+tracing@7.14.0/node_modules/@sentry/tracing/esm/browser/router.js","../../node_modules/.pnpm/@sentry+tracing@7.14.0/node_modules/@sentry/tracing/esm/browser/browsertracing.js","../../node_modules/.pnpm/@sentry+tracing@7.14.0/node_modules/@sentry/tracing/esm/index.js","../../src/bugs/lazy-sentry.js"],"sourcesContent":["/** Internal */\n\n// The code below for 'isGlobalObj' and 'GLOBAL' was copied from core-js before modification\n// https://github.com/zloirock/core-js/blob/1b944df55282cdc99c90db5f49eb0b6eda2cc0a3/packages/core-js/internals/global.js\n// core-js has the following licence:\n//\n// Copyright (c) 2014-2022 Denis Pushkarev\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/** Returns 'obj' if it's the global object, otherwise returns undefined */\nfunction isGlobalObj(obj) {\n  return obj && obj.Math == Math ? obj : undefined;\n}\n\nvar GLOBAL =\n  (typeof globalThis == 'object' && isGlobalObj(globalThis)) ||\n  // eslint-disable-next-line no-restricted-globals\n  (typeof window == 'object' && isGlobalObj(window)) ||\n  (typeof self == 'object' && isGlobalObj(self)) ||\n  (typeof global == 'object' && isGlobalObj(global)) ||\n  (function () {\n    return this;\n  })() ||\n  {};\n\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\nfunction getGlobalObject() {\n  return GLOBAL ;\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `getGlobalObject`'s return value\n * @returns the singleton\n */\nfunction getGlobalSingleton(name, creator, obj) {\n  var global = (obj || GLOBAL) ;\n  var __SENTRY__ = (global.__SENTRY__ = global.__SENTRY__ || {});\n  var singleton = __SENTRY__[name] || (__SENTRY__[name] = creator());\n  return singleton;\n}\n\nexport { getGlobalObject, getGlobalSingleton };\n//# sourceMappingURL=global.js.map\n","// eslint-disable-next-line @typescript-eslint/unbound-method\nvar objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isError(wat) {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat, className) {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isErrorEvent(wat) {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMError(wat) {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMException(wat) {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isString(wat) {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPrimitive(wat) {\n  return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPlainObject(wat) {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isEvent(wat) {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isElement(wat) {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isRegExp(wat) {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nfunction isThenable(wat) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isSyntheticEvent(wat) {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isNaN(wat) {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nfunction isInstanceOf(wat, base) {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n\nexport { isDOMError, isDOMException, isElement, isError, isErrorEvent, isEvent, isInstanceOf, isNaN, isPlainObject, isPrimitive, isRegExp, isString, isSyntheticEvent, isThenable };\n//# sourceMappingURL=is.js.map\n","import { getGlobalObject } from './global.js';\nimport { isString } from './is.js';\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction htmlTreeAsString(elem, keyAttrs) {\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem ;\n    var MAX_TRAVERSE_HEIGHT = 5;\n    var MAX_OUTPUT_LEN = 80;\n    var out = [];\n    let height = 0;\n    let len = 0;\n    var separator = ' > ';\n    var sepLength = separator.length;\n    let nextStr;\n\n    // eslint-disable-next-line no-plusplus\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el, keyAttrs) {\n  var elem = el\n\n;\n\n  var out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  var keyAttrPairs =\n    keyAttrs && keyAttrs.length\n      ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n      : null;\n\n  if (keyAttrPairs && keyAttrPairs.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n    // eslint-disable-next-line prefer-const\n    className = elem.className;\n    if (className && isString(className)) {\n      classes = className.split(/\\s+/);\n      for (i = 0; i < classes.length; i++) {\n        out.push(`.${classes[i]}`);\n      }\n    }\n  }\n  var allowedAttrs = ['type', 'name', 'title', 'alt'];\n  for (i = 0; i < allowedAttrs.length; i++) {\n    key = allowedAttrs[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nfunction getLocationHref() {\n  var global = getGlobalObject();\n  try {\n    return global.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n/**\n * Gets a DOM element by using document.querySelector.\n *\n * This wrapper will first check for the existance of the function before\n * actually calling it so that we don't have to take care of this check,\n * every time we want to access the DOM.\n *\n * Reason: DOM/querySelector is not available in all environments.\n *\n * We have to cast to any because utils can be consumed by a variety of environments,\n * and we don't want to break TS users. If you know what element will be selected by\n * `document.querySelector`, specify it as part of the generic call. For example,\n * `var element = getDomElement<Element>('selector');`\n *\n * @param selector the selector string passed on to document.querySelector\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction getDomElement(selector) {\n  var global = getGlobalObject();\n  if (global.document && global.document.querySelector) {\n    return global.document.querySelector(selector) ;\n  }\n  return null;\n}\n\nexport { getDomElement, getLocationHref, htmlTreeAsString };\n//# sourceMappingURL=browser.js.map\n","/** An error emitted by Sentry SDKs and related utilities. */\nclass SentryError extends Error {\n  /** Display name of this error instance. */\n\n   constructor( message, logLevel = 'warn') {\n    super(message);this.message = message;;\n\n    this.name = new.target.prototype.constructor.name;\n    // This sets the prototype to be `Error`, not `SentryError`. It's unclear why we do this, but commenting this line\n    // out causes various (seemingly totally unrelated) playwright tests consistently time out. FYI, this makes\n    // instances of `SentryError` fail `obj instanceof SentryError` checks.\n    Object.setPrototypeOf(this, new.target.prototype);\n    this.logLevel = logLevel;\n  }\n}\n\nexport { SentryError };\n//# sourceMappingURL=error.js.map\n","import { SentryError } from './error.js';\n\n/** Regular expression used to parse a Dsn. */\nvar DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+))?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol) {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nfunction dsnToString(dsn, withPassword = false) {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents\n */\nfunction dsnFromString(str) {\n  var match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    throw new SentryError(`Invalid Sentry Dsn: ${str}`);\n  }\n\n  const [protocol, publicKey, pass = '', host, port = '', lastPath] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  var split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() ;\n  }\n\n  if (projectId) {\n    var projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol , publicKey });\n}\n\nfunction dsnFromComponents(components) {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn) {\n  if (!(typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n    return;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  var requiredComponents = ['protocol', 'publicKey', 'host', 'projectId'];\n  requiredComponents.forEach(component => {\n    if (!dsn[component]) {\n      throw new SentryError(`Invalid Sentry Dsn: ${component} missing`);\n    }\n  });\n\n  if (!projectId.match(/^\\d+$/)) {\n    throw new SentryError(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n  }\n\n  if (!isValidProtocol(protocol)) {\n    throw new SentryError(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    throw new SentryError(`Invalid Sentry Dsn: Invalid port ${port}`);\n  }\n\n  return true;\n}\n\n/** The Sentry Dsn, identifying a Sentry instance and project. */\nfunction makeDsn(from) {\n  var components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  validateDsn(components);\n  return components;\n}\n\nexport { dsnFromString, dsnToString, makeDsn };\n//# sourceMappingURL=dsn.js.map\n","import { getGlobalObject, getGlobalSingleton } from './global.js';\n\n// TODO: Implement different loggers for different environments\nvar global = getGlobalObject();\n\n/** Prefix for logging strings */\nvar PREFIX = 'Sentry Logger ';\n\nvar CONSOLE_LEVELS = ['debug', 'info', 'warn', 'error', 'log', 'assert', 'trace'] ;\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nfunction consoleSandbox(callback) {\n  var global = getGlobalObject();\n\n  if (!('console' in global)) {\n    return callback();\n  }\n\n  var originalConsole = global.console ;\n  var wrappedLevels = {};\n\n  // Restore all wrapped console methods\n  CONSOLE_LEVELS.forEach(level => {\n    // TODO(v7): Remove this check as it's only needed for Node 6\n    var originalWrappedFunc =\n      originalConsole[level] && (originalConsole[level] ).__sentry_original__;\n    if (level in global.console && originalWrappedFunc) {\n      wrappedLevels[level] = originalConsole[level] ;\n      originalConsole[level] = originalWrappedFunc ;\n    }\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    Object.keys(wrappedLevels).forEach(level => {\n      originalConsole[level] = wrappedLevels[level ];\n    });\n  }\n}\n\nfunction makeLogger() {\n  let enabled = false;\n  var logger = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n  };\n\n  if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n    CONSOLE_LEVELS.forEach(name => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      logger[name] = (...args) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            global.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger ;\n}\n\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nlet logger;\nif ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n  logger = getGlobalSingleton('logger', makeLogger);\n} else {\n  logger = makeLogger();\n}\n\nexport { CONSOLE_LEVELS, consoleSandbox, logger };\n//# sourceMappingURL=logger.js.map\n","import { isString, isRegExp } from './is.js';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nfunction truncate(str, max = 0) {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.substr(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nfunction snipLine(line, colno) {\n  let newLine = line;\n  var lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n    // eslint-disable-next-line no-param-reassign\n    colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction safeJoin(input, delimiter) {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  var output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    var value = input[i];\n    try {\n      output.push(String(value));\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the value matches a regex or includes the string\n * @param value The string value to be checked against\n * @param pattern Either a regex or a string that must be contained in value\n */\nfunction isMatchingPattern(value, pattern) {\n  if (!isString(value)) {\n    return false;\n  }\n\n  if (isRegExp(pattern)) {\n    return pattern.test(value);\n  }\n  if (typeof pattern === 'string') {\n    return value.indexOf(pattern) !== -1;\n  }\n  return false;\n}\n\n/**\n * Given a string, escape characters which have meaning in the regex grammar, such that the result is safe to feed to\n * `new RegExp()`.\n *\n * Based on https://github.com/sindresorhus/escape-string-regexp. Vendored to a) reduce the size by skipping the runtime\n * type-checking, and b) ensure it gets down-compiled for old versions of Node (the published package only supports Node\n * 12+).\n *\n * @param regexString The string to escape\n * @returns An version of the string with all special regex characters escaped\n */\nfunction escapeStringForRegex(regexString) {\n  // escape the hyphen separately so we can also replace it with a unicode literal hyphen, to avoid the problems\n  // discussed in https://github.com/sindresorhus/escape-string-regexp/issues/20.\n  return regexString.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&').replace(/-/g, '\\\\x2d');\n}\n\nexport { escapeStringForRegex, isMatchingPattern, safeJoin, snipLine, truncate };\n//# sourceMappingURL=string.js.map\n","import { htmlTreeAsString } from './browser.js';\nimport { isError, isEvent, isInstanceOf, isElement, isPlainObject, isPrimitive } from './is.js';\nimport { truncate } from './string.js';\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nfunction fill(source, name, replacementFactory) {\n  if (!(name in source)) {\n    return;\n  }\n\n  var original = source[name] ;\n  var wrapped = replacementFactory(original) ;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    try {\n      markFunctionWrapped(wrapped, original);\n    } catch (_Oo) {\n      // This can throw if multiple fill happens on a global object like XMLHttpRequest\n      // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n    }\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nfunction addNonEnumerableProperty(obj, name, value) {\n  Object.defineProperty(obj, name, {\n    // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n    value: value,\n    writable: true,\n    configurable: true,\n  });\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nfunction markFunctionWrapped(wrapped, original) {\n  var proto = original.prototype || {};\n  wrapped.prototype = original.prototype = proto;\n  addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nfunction getOriginalFunction(func) {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nfunction urlEncode(object) {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argurment itself, when value is neither an Event nor\n *  an Error.\n */\nfunction convertToPlainObject(\n  value,\n)\n\n {\n  if (isError(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if (isEvent(value)) {\n    var newObj\n\n = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target) {\n  try {\n    return isElement(target) ? htmlTreeAsString(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj) {\n  if (typeof obj === 'object' && obj !== null) {\n    var extractedProps = {};\n    for (var property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj )[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nfunction extractExceptionKeysForMessage(exception, maxLength = 40) {\n  var keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    var serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n */\nfunction dropUndefinedKeys(inputValue) {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  var memoizationMap = new Map();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys(inputValue, memoizationMap) {\n  if (isPlainObject(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the object it was mapped to in the new object\n    var memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    var returnValue = {};\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    for (var key of Object.keys(inputValue)) {\n      if (typeof inputValue[key] !== 'undefined') {\n        returnValue[key] = _dropUndefinedKeys(inputValue[key], memoizationMap);\n      }\n    }\n\n    return returnValue ;\n  }\n\n  if (Array.isArray(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the array it was mapped to in the new object\n    var memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    var returnValue = [];\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach((item) => {\n      returnValue.push(_dropUndefinedKeys(item, memoizationMap));\n    });\n\n    return returnValue ;\n  }\n\n  return inputValue;\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nfunction objectify(wat) {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case isPrimitive(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat ).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n\nexport { addNonEnumerableProperty, convertToPlainObject, dropUndefinedKeys, extractExceptionKeysForMessage, fill, getOriginalFunction, markFunctionWrapped, objectify, urlEncode };\n//# sourceMappingURL=object.js.map\n","/**\n * Polyfill for the nullish coalescing operator (`??`).\n *\n * Note that the RHS is wrapped in a function so that if it's a computed value, that evaluation won't happen unless the\n * LHS evaluates to a nullish value, to mimic the operator's short-circuiting behavior.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param lhs The value of the expression to the left of the `??`\n * @param rhsFn A function returning the value of the expression to the right of the `??`\n * @returns The LHS value, unless it's `null` or `undefined`, in which case, the RHS value\n */\nfunction _nullishCoalesce(lhs, rhsFn) {\n  // by checking for loose equality to `null`, we catch both `null` and `undefined`\n  return lhs != null ? lhs : rhsFn();\n}\n\n// Sucrase version:\n// function _nullishCoalesce(lhs, rhsFn) {\n//   if (lhs != null) {\n//     return lhs;\n//   } else {\n//     return rhsFn();\n//   }\n// }\n\nexport { _nullishCoalesce };\n//# sourceMappingURL=_nullishCoalesce.js.map\n","/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n * See https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The value of the expression\n */\nfunction _optionalChain(ops) {\n  let lastAccessLHS = undefined;\n  let value = ops[0];\n  let i = 1;\n  while (i < ops.length) {\n    var op = ops[i] ;\n    var fn = ops[i + 1] ;\n    i += 2;\n    // by checking for loose equality to `null`, we catch both `null` and `undefined`\n    if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n      // really we're meaning to return `undefined` as an actual value here, but it saves bytes not to write it\n      return;\n    }\n    if (op === 'access' || op === 'optionalAccess') {\n      lastAccessLHS = value;\n      value = fn(value);\n    } else if (op === 'call' || op === 'optionalCall') {\n      value = fn((...args) => (value ).call(lastAccessLHS, ...args));\n      lastAccessLHS = undefined;\n    }\n  }\n  return value;\n}\n\n// Sucrase version\n// function _optionalChain(ops) {\n//   let lastAccessLHS = undefined;\n//   let value = ops[0];\n//   let i = 1;\n//   while (i < ops.length) {\n//     var op = ops[i];\n//     var fn = ops[i + 1];\n//     i += 2;\n//     if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n//       return undefined;\n//     }\n//     if (op === 'access' || op === 'optionalAccess') {\n//       lastAccessLHS = value;\n//       value = fn(value);\n//     } else if (op === 'call' || op === 'optionalCall') {\n//       value = fn((...args) => value.call(lastAccessLHS, ...args));\n//       lastAccessLHS = undefined;\n//     }\n//   }\n//   return value;\n// }\n\nexport { _optionalChain };\n//# sourceMappingURL=_optionalChain.js.map\n","import { _optionalChain } from './buildPolyfills';\n\nvar STACKTRACE_LIMIT = 50;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nfunction createStackParser(...parsers) {\n  var sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack, skipFirst = 0) => {\n    var frames = [];\n\n    for (var line of stack.split('\\n').slice(skipFirst)) {\n      // https://github.com/getsentry/sentry-javascript/issues/5459\n      // Remove webpack (error: *) wrappers\n      var cleanedLine = line.replace(/\\(error: (.*)\\)/, '$1');\n\n      for (var parser of sortedParsers) {\n        var frame = parser(cleanedLine);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames);\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nfunction stackParserFromStackParserOptions(stackParser) {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * @hidden\n */\nfunction stripSentryFramesAndReverse(stack) {\n  if (!stack.length) {\n    return [];\n  }\n\n  let localStack = stack;\n\n  var firstFrameFunction = localStack[0].function || '';\n  var lastFrameFunction = localStack[localStack.length - 1].function || '';\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (firstFrameFunction.indexOf('captureMessage') !== -1 || firstFrameFunction.indexOf('captureException') !== -1) {\n    localStack = localStack.slice(1);\n  }\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (lastFrameFunction.indexOf('sentryWrapped') !== -1) {\n    localStack = localStack.slice(0, -1);\n  }\n\n  // The frame where the crash happened, should be the last entry in the array\n  return localStack\n    .slice(0, STACKTRACE_LIMIT)\n    .map(frame => ({\n      ...frame,\n      filename: frame.filename || localStack[0].filename,\n      function: frame.function || '?',\n    }))\n    .reverse();\n}\n\nvar defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nfunction getFunctionName(fn) {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\n// eslint-disable-next-line complexity\nfunction node(getModule) {\n  var FILENAME_MATCH = /^\\s*[-]{4,}$/;\n  var FULL_MATCH = /at (?:async )?(?:(.+?)\\s+\\()?(?:(.+):(\\d+):(\\d+)?|([^)]+))\\)?/;\n\n  // eslint-disable-next-line complexity\n  return (line) => {\n    if (line.match(FILENAME_MATCH)) {\n      return {\n        filename: line,\n      };\n    }\n\n    var lineMatch = line.match(FULL_MATCH);\n    if (!lineMatch) {\n      return undefined;\n    }\n\n    let object;\n    let method;\n    let functionName;\n    let typeName;\n    let methodName;\n\n    if (lineMatch[1]) {\n      functionName = lineMatch[1];\n\n      let methodStart = functionName.lastIndexOf('.');\n      if (functionName[methodStart - 1] === '.') {\n        // eslint-disable-next-line no-plusplus\n        methodStart--;\n      }\n\n      if (methodStart > 0) {\n        object = functionName.substr(0, methodStart);\n        method = functionName.substr(methodStart + 1);\n        var objectEnd = object.indexOf('.Module');\n        if (objectEnd > 0) {\n          functionName = functionName.substr(objectEnd + 1);\n          object = object.substr(0, objectEnd);\n        }\n      }\n      typeName = undefined;\n    }\n\n    if (method) {\n      typeName = object;\n      methodName = method;\n    }\n\n    if (method === '<anonymous>') {\n      methodName = undefined;\n      functionName = undefined;\n    }\n\n    if (functionName === undefined) {\n      methodName = methodName || '<anonymous>';\n      functionName = typeName ? `${typeName}.${methodName}` : methodName;\n    }\n\n    var filename = _optionalChain([lineMatch, 'access', _ => _[2], 'optionalAccess', _2 => _2.startsWith, 'call', _3 => _3('file://')]) ? lineMatch[2].substr(7) : lineMatch[2];\n    var isNative = lineMatch[5] === 'native';\n    var isInternal =\n      isNative || (filename && !filename.startsWith('/') && !filename.startsWith('.') && filename.indexOf(':\\\\') !== 1);\n\n    // in_app is all that's not an internal Node function or a module within node_modules\n    // note that isNative appears to return true even for node core libraries\n    // see https://github.com/getsentry/raven-node/issues/176\n    var in_app = !isInternal && filename !== undefined && !filename.includes('node_modules/');\n\n    return {\n      filename,\n      module: _optionalChain([getModule, 'optionalCall', _4 => _4(filename)]),\n      function: functionName,\n      lineno: parseInt(lineMatch[3], 10) || undefined,\n      colno: parseInt(lineMatch[4], 10) || undefined,\n      in_app,\n    };\n  };\n}\n\n/**\n * Node.js stack line parser\n *\n * This is in @sentry/utils so it can be used from the Electron SDK in the browser for when `nodeIntegration == true`.\n * This allows it to be used without referencing or importing any node specific code which causes bundlers to complain\n */\nfunction nodeStackLineParser(getModule) {\n  return [90, node(getModule)];\n}\n\nexport { createStackParser, getFunctionName, nodeStackLineParser, stackParserFromStackParserOptions, stripSentryFramesAndReverse };\n//# sourceMappingURL=stacktrace.js.map\n","import { getGlobalObject } from './global.js';\nimport { logger } from './logger.js';\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsErrorEvent() {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMError() {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-ignore It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMException() {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsFetch() {\n  if (!('fetch' in getGlobalObject())) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('http://www.example.com');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isNativeFetch(func) {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nfunction supportsNativeFetch() {\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  var global = getGlobalObject();\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFetch(global.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  var doc = global.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement ) === 'function') {\n    try {\n      var sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReportingObserver() {\n  return 'ReportingObserver' in getGlobalObject();\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReferrerPolicy() {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' ,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsHistory() {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  var global = getGlobalObject();\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  var chrome = (global ).chrome;\n  var isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n  var hasHistoryApi = 'history' in global && !!global.history.pushState && !!global.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n\nexport { isNativeFetch, supportsDOMError, supportsDOMException, supportsErrorEvent, supportsFetch, supportsHistory, supportsNativeFetch, supportsReferrerPolicy, supportsReportingObserver };\n//# sourceMappingURL=supports.js.map\n","import { getGlobalObject } from './global.js';\nimport { isInstanceOf, isString } from './is.js';\nimport { logger, CONSOLE_LEVELS } from './logger.js';\nimport { fill } from './object.js';\nimport { getFunctionName } from './stacktrace.js';\nimport { supportsNativeFetch, supportsHistory } from './supports.js';\n\nvar global = getGlobalObject();\n\n/**\n * Instrument native APIs to call handlers that can be used to create breadcrumbs, APM spans etc.\n *  - Console API\n *  - Fetch API\n *  - XHR API\n *  - History API\n *  - DOM API (click/typing)\n *  - Error API\n *  - UnhandledRejection API\n */\n\nvar handlers = {};\nvar instrumented = {};\n\n/** Instruments given API */\nfunction instrument(type) {\n  if (instrumented[type]) {\n    return;\n  }\n\n  instrumented[type] = true;\n\n  switch (type) {\n    case 'console':\n      instrumentConsole();\n      break;\n    case 'dom':\n      instrumentDOM();\n      break;\n    case 'xhr':\n      instrumentXHR();\n      break;\n    case 'fetch':\n      instrumentFetch();\n      break;\n    case 'history':\n      instrumentHistory();\n      break;\n    case 'error':\n      instrumentError();\n      break;\n    case 'unhandledrejection':\n      instrumentUnhandledRejection();\n      break;\n    default:\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('unknown instrumentation type:', type);\n      return;\n  }\n}\n\n/**\n * Add handler that will be called when given type of instrumentation triggers.\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addInstrumentationHandler(type, callback) {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] ).push(callback);\n  instrument(type);\n}\n\n/** JSDoc */\nfunction triggerHandlers(type, data) {\n  if (!type || !handlers[type]) {\n    return;\n  }\n\n  for (var handler of handlers[type] || []) {\n    try {\n      handler(data);\n    } catch (e) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\n/** JSDoc */\nfunction instrumentConsole() {\n  if (!('console' in global)) {\n    return;\n  }\n\n  CONSOLE_LEVELS.forEach(function (level) {\n    if (!(level in global.console)) {\n      return;\n    }\n\n    fill(global.console, level, function (originalConsoleMethod) {\n      return function (...args) {\n        triggerHandlers('console', { args, level });\n\n        // this fails for some browsers. :(\n        if (originalConsoleMethod) {\n          originalConsoleMethod.apply(global.console, args);\n        }\n      };\n    });\n  });\n}\n\n/** JSDoc */\nfunction instrumentFetch() {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  fill(global, 'fetch', function (originalFetch) {\n    return function (...args) {\n      var handlerData = {\n        args,\n        fetchData: {\n          method: getFetchMethod(args),\n          url: getFetchUrl(args),\n        },\n        startTimestamp: Date.now(),\n      };\n\n      triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(global, args).then(\n        (response) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            response,\n          });\n          return response;\n        },\n        (error) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            error,\n          });\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/** Extract `method` from fetch call arguments */\nfunction getFetchMethod(fetchArgs = []) {\n  if ('Request' in global && isInstanceOf(fetchArgs[0], Request) && fetchArgs[0].method) {\n    return String(fetchArgs[0].method).toUpperCase();\n  }\n  if (fetchArgs[1] && fetchArgs[1].method) {\n    return String(fetchArgs[1].method).toUpperCase();\n  }\n  return 'GET';\n}\n\n/** Extract `url` from fetch call arguments */\nfunction getFetchUrl(fetchArgs = []) {\n  if (typeof fetchArgs[0] === 'string') {\n    return fetchArgs[0];\n  }\n  if ('Request' in global && isInstanceOf(fetchArgs[0], Request)) {\n    return fetchArgs[0].url;\n  }\n  return String(fetchArgs[0]);\n}\n/* eslint-enable @typescript-eslint/no-unsafe-member-access */\n\n/** JSDoc */\nfunction instrumentXHR() {\n  if (!('XMLHttpRequest' in global)) {\n    return;\n  }\n\n  var xhrproto = XMLHttpRequest.prototype;\n\n  fill(xhrproto, 'open', function (originalOpen) {\n    return function ( ...args) {\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      var xhr = this;\n      var url = args[1];\n      var xhrInfo = (xhr.__sentry_xhr__ = {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        method: isString(args[0]) ? args[0].toUpperCase() : args[0],\n        url: args[1],\n      });\n\n      // if Sentry key appears in URL, don't capture it as a request\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      if (isString(url) && xhrInfo.method === 'POST' && url.match(/sentry_key/)) {\n        xhr.__sentry_own_request__ = true;\n      }\n\n      var onreadystatechangeHandler = function () {\n        if (xhr.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = xhr.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          triggerHandlers('xhr', {\n            args,\n            endTimestamp: Date.now(),\n            startTimestamp: Date.now(),\n            xhr,\n          });\n        }\n      };\n\n      if ('onreadystatechange' in xhr && typeof xhr.onreadystatechange === 'function') {\n        fill(xhr, 'onreadystatechange', function (original) {\n          return function (...readyStateArgs) {\n            onreadystatechangeHandler();\n            return original.apply(xhr, readyStateArgs);\n          };\n        });\n      } else {\n        xhr.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      return originalOpen.apply(xhr, args);\n    };\n  });\n\n  fill(xhrproto, 'send', function (originalSend) {\n    return function ( ...args) {\n      if (this.__sentry_xhr__ && args[0] !== undefined) {\n        this.__sentry_xhr__.body = args[0];\n      }\n\n      triggerHandlers('xhr', {\n        args,\n        startTimestamp: Date.now(),\n        xhr: this,\n      });\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nlet lastHref;\n\n/** JSDoc */\nfunction instrumentHistory() {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  var oldOnPopState = global.onpopstate;\n  global.onpopstate = function ( ...args) {\n    var to = global.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    var from = lastHref;\n    lastHref = to;\n    triggerHandlers('history', {\n      from,\n      to,\n    });\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  /** @hidden */\n  function historyReplacementFunction(originalHistoryFunction) {\n    return function ( ...args) {\n      var url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        var from = lastHref;\n        var to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        triggerHandlers('history', {\n          from,\n          to,\n        });\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(global.history, 'pushState', historyReplacementFunction);\n  fill(global.history, 'replaceState', historyReplacementFunction);\n}\n\nvar debounceDuration = 1000;\nlet debounceTimerID;\nlet lastCapturedEvent;\n\n/**\n * Decide whether the current event should finish the debounce of previously captured one.\n * @param previous previously captured event\n * @param current event to be captured\n */\nfunction shouldShortcircuitPreviousDebounce(previous, current) {\n  // If there was no previous event, it should always be swapped for the new one.\n  if (!previous) {\n    return true;\n  }\n\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (previous.type !== current.type) {\n    return true;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (previous.target !== current.target) {\n      return true;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return false;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(event) {\n  // We are only interested in filtering `keypress` events for now.\n  if (event.type !== 'keypress') {\n    return false;\n  }\n\n  try {\n    var target = event.target ;\n\n    if (!target || !target.tagName) {\n      return true;\n    }\n\n    // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n    // e.g.tabbing through elements, hotkeys, etc.\n    if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param handler function that will be triggered\n * @param globalListener indicates whether event was captured by the global event listener\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nfunction makeDOMEventHandler(handler, globalListener = false) {\n  return (event) => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || lastCapturedEvent === event) {\n      return;\n    }\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event)) {\n      return;\n    }\n\n    var name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no debounce timer, it means that we can safely capture the new event and store it for future comparisons.\n    if (debounceTimerID === undefined) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n    // If there is a debounce awaiting, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    else if (shouldShortcircuitPreviousDebounce(lastCapturedEvent, event)) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = global.setTimeout(() => {\n      debounceTimerID = undefined;\n    }, debounceDuration);\n  };\n}\n\n/** JSDoc */\nfunction instrumentDOM() {\n  if (!('document' in global)) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  var triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  var globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  global.document.addEventListener('click', globalDOMEventHandler, false);\n  global.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    var proto = (global )[target] && (global )[target].prototype;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function (originalAddEventListener) {\n      return function (\n\n        type,\n        listener,\n        options,\n      ) {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            var el = this ;\n            var handlers = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n            var handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              var handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount += 1;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener) {\n        return function (\n\n          type,\n          listener,\n          options,\n        ) {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              var el = this ;\n              var handlers = el.__sentry_instrumentation_handlers__ || {};\n              var handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount -= 1;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n                }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete el.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch (e) {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\nlet _oldOnErrorHandler = null;\n/** JSDoc */\nfunction instrumentError() {\n  _oldOnErrorHandler = global.onerror;\n\n  global.onerror = function (msg, url, line, column, error) {\n    triggerHandlers('error', {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    });\n\n    if (_oldOnErrorHandler) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n}\n\nlet _oldOnUnhandledRejectionHandler = null;\n/** JSDoc */\nfunction instrumentUnhandledRejection() {\n  _oldOnUnhandledRejectionHandler = global.onunhandledrejection;\n\n  global.onunhandledrejection = function (e) {\n    triggerHandlers('unhandledrejection', e);\n\n    if (_oldOnUnhandledRejectionHandler) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n}\n\nexport { addInstrumentationHandler };\n//# sourceMappingURL=instrument.js.map\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * Helper to decycle json objects\n */\nfunction memoBuilder() {\n  var hasWeakSet = typeof WeakSet === 'function';\n  var inner = hasWeakSet ? new WeakSet() : [];\n  function memoize(obj) {\n    if (hasWeakSet) {\n      if (inner.has(obj)) {\n        return true;\n      }\n      inner.add(obj);\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < inner.length; i++) {\n      var value = inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    inner.push(obj);\n    return false;\n  }\n\n  function unmemoize(obj) {\n    if (hasWeakSet) {\n      inner.delete(obj);\n    } else {\n      for (let i = 0; i < inner.length; i++) {\n        if (inner[i] === obj) {\n          inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n  return [memoize, unmemoize];\n}\n\nexport { memoBuilder };\n//# sourceMappingURL=memo.js.map\n","import { getGlobalObject } from './global.js';\nimport { addNonEnumerableProperty } from './object.js';\nimport { snipLine } from './string.js';\n\n/**\n * Extended Window interface that allows for Crypto API usage in IE browsers\n */\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nfunction uuid4() {\n  var global = getGlobalObject() ;\n  var crypto = (global.crypto || global.msCrypto) ;\n\n  if (crypto && crypto.randomUUID) {\n    return crypto.randomUUID().replace(/-/g, '');\n  }\n\n  var getRandomByte =\n    crypto && crypto.getRandomValues ? () => crypto.getRandomValues(new Uint8Array(1))[0] : () => Math.random() * 16;\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] ) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c ) ^ ((getRandomByte() & 15) >> ((c ) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event) {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nfunction getEventDescription(event) {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  var firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nfunction addExceptionTypeValue(event, value, type) {\n  var exception = (event.exception = event.exception || {});\n  var values = (exception.values = exception.values || []);\n  var firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nfunction addExceptionMechanism(event, newMechanism) {\n  var firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  var defaultMechanism = { type: 'generic', handled: true };\n  var currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    var mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nvar SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nfunction parseSemver(input) {\n  var match = input.match(SEMVER_REGEXP) || [];\n  var major = parseInt(match[1], 10);\n  var minor = parseInt(match[2], 10);\n  var patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nfunction addContextToFrame(lines, frame, linesOfContext = 5) {\n  var lineno = frame.lineno || 0;\n  var maxLines = lines.length;\n  var sourceLine = Math.max(Math.min(maxLines, lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line) => snipLine(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nfunction checkOrSetAlreadyCaught(exception) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (exception && (exception ).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception , '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\n/**\n * Checks whether the given input is already an array, and if it isn't, wraps it in one.\n *\n * @param maybeArray Input to turn into an array, if necessary\n * @returns The input, if already an array, or an array with the input as the only element, if not\n */\nfunction arrayify(maybeArray) {\n  return Array.isArray(maybeArray) ? maybeArray : [maybeArray];\n}\n\nexport { addContextToFrame, addExceptionMechanism, addExceptionTypeValue, arrayify, checkOrSetAlreadyCaught, getEventDescription, parseSemver, uuid4 };\n//# sourceMappingURL=misc.js.map\n","/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These fags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nfunction isBrowserBundle() {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\nexport { isBrowserBundle };\n//# sourceMappingURL=env.js.map\n","import { isBrowserBundle } from './env.js';\n\n/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nfunction isNodeEnv() {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !isBrowserBundle() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nfunction dynamicRequire(mod, request) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nfunction loadModule(moduleName) {\n  let mod;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) ;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n\nexport { dynamicRequire, isNodeEnv, loadModule };\n//# sourceMappingURL=node.js.map\n","import { isNaN, isSyntheticEvent } from './is.js';\nimport { memoBuilder } from './memo.js';\nimport { convertToPlainObject } from './object.js';\nimport { getFunctionName } from './stacktrace.js';\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normallized output.\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction normalize(input, depth = +Infinity, maxProperties = +Infinity) {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nfunction normalizeToSize(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  object,\n  // Default Node.js REPL depth\n  depth = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize = 100 * 1024,\n) {\n  var normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized ;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key,\n  value,\n  depth = +Infinity,\n  maxProperties = +Infinity,\n  memo = memoBuilder(),\n) {\n  const [memoize, unmemoize] = memo;\n\n  // Get the simple cases out of the way first\n  if (value === null || (['number', 'boolean', 'string'].includes(typeof value) && !isNaN(value))) {\n    return value ;\n  }\n\n  var stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value )['__sentry_skip_normalization__']) {\n    return value ;\n  }\n\n  // We're also done if we've reached the max depth\n  if (depth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // If the value has a `toJSON` method, we call it to extract more information\n  var valueWithToJSON = value ;\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      var jsonValue = valueWithToJSON.toJSON();\n      // We need to normalize the return value of `.toJSON()` in case it has circular references\n      return visit('', jsonValue, depth - 1, maxProperties, memo);\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  var normalized = (Array.isArray(value) ? [] : {}) ;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  var visitable = convertToPlainObject(value );\n\n  for (var visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    var visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, depth - 1, maxProperties, memo);\n\n    numAdded += 1;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value,\n) {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value )._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n\n    // this catches `undefined` (but not `null`, which is a primitive and can be serialized on its own)\n    if (value === void 0) {\n      return '[undefined]';\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${getFunctionName(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    return `[object ${(Object.getPrototypeOf(value) ).constructor.name}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value) {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction jsonSize(value) {\n  return utf8Length(JSON.stringify(value));\n}\n\nexport { normalize, normalizeToSize, visit as walk };\n//# sourceMappingURL=normalize.js.map\n","import { isThenable } from './is.js';\n\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n\n/** SyncPromise internal states */\nvar States; (function (States) {\n  /** Pending */\n  var PENDING = 0; States[States[\"PENDING\"] = PENDING] = \"PENDING\";\n  /** Resolved / OK */\n  var RESOLVED = 1; States[States[\"RESOLVED\"] = RESOLVED] = \"RESOLVED\";\n  /** Rejected / Error */\n  var REJECTED = 2; States[States[\"REJECTED\"] = REJECTED] = \"REJECTED\";\n})(States || (States = {}));\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nfunction resolvedSyncPromise(value) {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nfunction rejectedSyncPromise(reason) {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise {\n   __init() {this._state = States.PENDING;}\n   __init2() {this._handlers = [];}\n\n   constructor(\n    executor,\n  ) {;SyncPromise.prototype.__init.call(this);SyncPromise.prototype.__init2.call(this);SyncPromise.prototype.__init3.call(this);SyncPromise.prototype.__init4.call(this);SyncPromise.prototype.__init5.call(this);SyncPromise.prototype.__init6.call(this);\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n   then(\n    onfulfilled,\n    onrejected,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result );\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n   catch(\n    onrejected,\n  ) {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n   finally(onfinally) {\n    return new SyncPromise((resolve, reject) => {\n      let val;\n      let isRejected;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val );\n      });\n    });\n  }\n\n  /** JSDoc */\n    __init3() {this._resolve = (value) => {\n    this._setResult(States.RESOLVED, value);\n  };}\n\n  /** JSDoc */\n    __init4() {this._reject = (reason) => {\n    this._setResult(States.REJECTED, reason);\n  };}\n\n  /** JSDoc */\n    __init5() {this._setResult = (state, value) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      void (value ).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };}\n\n  /** JSDoc */\n    __init6() {this._executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    var cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        handler[1](this._value );\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };}\n}\n\nexport { SyncPromise, rejectedSyncPromise, resolvedSyncPromise };\n//# sourceMappingURL=syncpromise.js.map\n","import { SentryError } from './error.js';\nimport { rejectedSyncPromise, SyncPromise, resolvedSyncPromise } from './syncpromise.js';\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nfunction makePromiseBuffer(limit) {\n  var buffer = [];\n\n  function isReady() {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task) {\n    return buffer.splice(buffer.indexOf(task), 1)[0];\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer) {\n    if (!isReady()) {\n      return rejectedSyncPromise(new SentryError('Not adding Promise because buffer limit was reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    var task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout) {\n    return new SyncPromise((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      var capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void resolvedSyncPromise(item).then(() => {\n          // eslint-disable-next-line no-plusplus\n          if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n\nexport { makePromiseBuffer };\n//# sourceMappingURL=promisebuffer.js.map\n","/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nfunction parseUrl(url)\n\n {\n  if (!url) {\n    return {};\n  }\n\n  var match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  var query = match[6] || '';\n  var fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nfunction stripUrlQueryAndFragment(urlPath) {\n  // eslint-disable-next-line no-useless-escape\n  return urlPath.split(/[\\?#]/, 1)[0];\n}\n\n/**\n * Returns number of URL segments of a passed string URL.\n */\nfunction getNumberOfUrlSegments(url) {\n  // split at '/' or at '\\/' to split regex urls correctly\n  return url.split(/\\\\?\\//).filter(s => s.length > 0 && s !== ',').length;\n}\n\nexport { getNumberOfUrlSegments, parseUrl, stripUrlQueryAndFragment };\n//# sourceMappingURL=url.js.map\n","// Note: Ideally the `SeverityLevel` type would be derived from `validSeverityLevels`, but that would mean either\n//\n// a) moving `validSeverityLevels` to `@sentry/types`,\n// b) moving the`SeverityLevel` type here, or\n// c) importing `validSeverityLevels` from here into `@sentry/types`.\n//\n// Option A would make `@sentry/types` a runtime dependency of `@sentry/utils` (not good), and options B and C would\n// create a circular dependency between `@sentry/types` and `@sentry/utils` (also not good). So a TODO accompanying the\n// type, reminding anyone who changes it to change this list also, will have to do.\n\nvar validSeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug'];\n\n/**\n * Converts a string-based level into a member of the deprecated {@link Severity} enum.\n *\n * @deprecated `severityFromString` is deprecated. Please use `severityLevelFromString` instead.\n *\n * @param level String representation of Severity\n * @returns Severity\n */\nfunction severityFromString(level) {\n  return severityLevelFromString(level) ;\n}\n\n/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nfunction severityLevelFromString(level) {\n  return (level === 'warn' ? 'warning' : validSeverityLevels.includes(level) ? level : 'log') ;\n}\n\nexport { severityFromString, severityLevelFromString, validSeverityLevels };\n//# sourceMappingURL=severity.js.map\n","import { getGlobalObject } from './global.js';\nimport { dynamicRequire, isNodeEnv } from './node.js';\n\n/**\n * An object that can return the current timestamp in seconds since the UNIX epoch.\n */\n\n/**\n * A TimestampSource implementation for environments that do not support the Performance Web API natively.\n *\n * Note that this TimestampSource does not use a monotonic clock. A call to `nowSeconds` may return a timestamp earlier\n * than a previously returned value. We do not try to emulate a monotonic behavior in order to facilitate debugging. It\n * is more obvious to explain \"why does my span have negative duration\" than \"why my spans have zero duration\".\n */\nvar dateTimestampSource = {\n  nowSeconds: () => Date.now() / 1000,\n};\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction getBrowserPerformance() {\n  const { performance } = getGlobalObject();\n  if (!performance || !performance.now) {\n    return undefined;\n  }\n\n  // Replace performance.timeOrigin with our own timeOrigin based on Date.now().\n  //\n  // This is a partial workaround for browsers reporting performance.timeOrigin such that performance.timeOrigin +\n  // performance.now() gives a date arbitrarily in the past.\n  //\n  // Additionally, computing timeOrigin in this way fills the gap for browsers where performance.timeOrigin is\n  // undefined.\n  //\n  // The assumption that performance.timeOrigin + performance.now() ~= Date.now() is flawed, but we depend on it to\n  // interact with data coming out of performance entries.\n  //\n  // Note that despite recommendations against it in the spec, browsers implement the Performance API with a clock that\n  // might stop when the computer is asleep (and perhaps under other circumstances). Such behavior causes\n  // performance.timeOrigin + performance.now() to have an arbitrary skew over Date.now(). In laptop computers, we have\n  // observed skews that can be as long as days, weeks or months.\n  //\n  // See https://github.com/getsentry/sentry-javascript/issues/2590.\n  //\n  // BUG: despite our best intentions, this workaround has its limitations. It mostly addresses timings of pageload\n  // transactions, but ignores the skew built up over time that can aversely affect timestamps of navigation\n  // transactions of long-lived web pages.\n  var timeOrigin = Date.now() - performance.now();\n\n  return {\n    now: () => performance.now(),\n    timeOrigin,\n  };\n}\n\n/**\n * Returns the native Performance API implementation from Node.js. Returns undefined in old Node.js versions that don't\n * implement the API.\n */\nfunction getNodePerformance() {\n  try {\n    var perfHooks = dynamicRequire(module, 'perf_hooks') ;\n    return perfHooks.performance;\n  } catch (_) {\n    return undefined;\n  }\n}\n\n/**\n * The Performance API implementation for the current platform, if available.\n */\nvar platformPerformance = isNodeEnv() ? getNodePerformance() : getBrowserPerformance();\n\nvar timestampSource =\n  platformPerformance === undefined\n    ? dateTimestampSource\n    : {\n        nowSeconds: () => (platformPerformance.timeOrigin + platformPerformance.now()) / 1000,\n      };\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n */\nvar dateTimestampInSeconds = dateTimestampSource.nowSeconds.bind(dateTimestampSource);\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * See `usingPerformanceAPI` to test whether the Performance API is used.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nvar timestampInSeconds = timestampSource.nowSeconds.bind(timestampSource);\n\n// Re-exported with an old name for backwards-compatibility.\nvar timestampWithMs = timestampInSeconds;\n\n/**\n * A boolean that is true when timestampInSeconds uses the Performance API to produce monotonic timestamps.\n */\nvar usingPerformanceAPI = platformPerformance !== undefined;\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nlet _browserPerformanceTimeOriginMode;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nvar browserPerformanceTimeOrigin = (() => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = getGlobalObject();\n  if (!performance || !performance.now) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  var threshold = 3600 * 1000;\n  var performanceNow = performance.now();\n  var dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  var timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  var timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  var navigationStart = performance.timing && performance.timing.navigationStart;\n  var hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  var navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  var navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n\nexport { _browserPerformanceTimeOriginMode, browserPerformanceTimeOrigin, dateTimestampInSeconds, timestampInSeconds, timestampWithMs, usingPerformanceAPI };\n//# sourceMappingURL=time.js.map\n","var TRACEPARENT_REGEXP = new RegExp(\n  '^[ \\\\t]*' + // whitespace\n    '([0-9a-f]{32})?' + // trace_id\n    '-?([0-9a-f]{16})?' + // span_id\n    '-?([01])?' + // sampled\n    '[ \\\\t]*$', // whitespace\n);\n\n/**\n * Extract transaction context data from a `sentry-trace` header.\n *\n * @param traceparent Traceparent string\n *\n * @returns Object containing data from the header, or undefined if traceparent string is malformed\n */\nfunction extractTraceparentData(traceparent) {\n  var matches = traceparent.match(TRACEPARENT_REGEXP);\n\n  if (!traceparent || !matches) {\n    // empty string or no matches is invalid traceparent data\n    return undefined;\n  }\n\n  let parentSampled;\n  if (matches[3] === '1') {\n    parentSampled = true;\n  } else if (matches[3] === '0') {\n    parentSampled = false;\n  }\n\n  return {\n    traceId: matches[1],\n    parentSampled,\n    parentSpanId: matches[2],\n  };\n}\n\nexport { TRACEPARENT_REGEXP, extractTraceparentData };\n//# sourceMappingURL=tracing.js.map\n","import { dropUndefinedKeys } from './object.js';\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction createEnvelope(headers, items = []) {\n  return [headers, items] ;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction addItemToEnvelope(envelope, newItem) {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] ;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n */\nfunction forEachEnvelopeItem(\n  envelope,\n  callback,\n) {\n  var envelopeItems = envelope[1];\n  envelopeItems.forEach((envelopeItem) => {\n    var envelopeItemType = envelopeItem[0].type;\n    callback(envelopeItem, envelopeItemType);\n  });\n}\n\nfunction encodeUTF8(input, textEncoder) {\n  var utf8 = textEncoder || new TextEncoder();\n  return utf8.encode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nfunction serializeEnvelope(envelope, textEncoder) {\n  const [envHeaders, items] = envelope;\n\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts = JSON.stringify(envHeaders);\n\n  function append(next) {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts, textEncoder), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next, textEncoder) : next);\n    }\n  }\n\n  for (var item of items) {\n    const [itemHeaders, payload] = item ;\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n    append(typeof payload === 'string' || payload instanceof Uint8Array ? payload : JSON.stringify(payload));\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers) {\n  var totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  var merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (var buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\n/**\n * Creates attachment envelope items\n */\nfunction createAttachmentEnvelopeItem(\n  attachment,\n  textEncoder,\n) {\n  var buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data, textEncoder) : attachment.data;\n\n  return [\n    dropUndefinedKeys({\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    }),\n    buffer,\n  ];\n}\n\nvar ITEM_TYPE_TO_DATA_CATEGORY_MAP = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nfunction envelopeItemTypeToDataCategory(type) {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\nexport { addItemToEnvelope, createAttachmentEnvelopeItem, createEnvelope, envelopeItemTypeToDataCategory, forEachEnvelopeItem, serializeEnvelope };\n//# sourceMappingURL=envelope.js.map\n","import { createEnvelope } from './envelope.js';\nimport { dateTimestampInSeconds } from './time.js';\n\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nfunction createClientReportEnvelope(\n  discarded_events,\n  dsn,\n  timestamp,\n) {\n  var clientReportItem = [\n    { type: 'client_report' },\n    {\n      timestamp: timestamp || dateTimestampInSeconds(),\n      discarded_events,\n    },\n  ];\n  return createEnvelope(dsn ? { dsn } : {}, [clientReportItem]);\n}\n\nexport { createClientReportEnvelope };\n//# sourceMappingURL=clientreport.js.map\n","// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\n\nvar DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nfunction parseRetryAfterHeader(header, now = Date.now()) {\n  var headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  var headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that given category is disabled until for rate limiting\n */\nfunction disabledUntil(limits, category) {\n  return limits[category] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nfunction isRateLimited(limits, category, now = Date.now()) {\n  return disabledUntil(limits, category) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n * Returns true if headers contains a non-empty rate limiting header.\n */\nfunction updateRateLimits(\n  limits,\n  { statusCode, headers },\n  now = Date.now(),\n) {\n  var updatedRateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  var rateLimitHeader = headers && headers['x-sentry-rate-limits'];\n  var retryAfterHeader = headers && headers['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     */\n    for (var limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories] = limit.split(':', 2);\n      var headerDelay = parseInt(retryAfter, 10);\n      var delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (var category of categories.split(';')) {\n          updatedRateLimits[category] = now + delay;\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n\nexport { DEFAULT_RETRY_AFTER, disabledUntil, isRateLimited, parseRetryAfterHeader, updateRateLimits };\n//# sourceMappingURL=ratelimit.js.map\n","import { isString } from './is.js';\nimport { logger } from './logger.js';\n\nvar BAGGAGE_HEADER_NAME = 'baggage';\n\nvar SENTRY_BAGGAGE_KEY_PREFIX = 'sentry-';\n\nvar SENTRY_BAGGAGE_KEY_PREFIX_REGEX = /^sentry-/;\n\n/**\n * Max length of a serialized baggage string\n *\n * https://www.w3.org/TR/baggage/#limits\n */\nvar MAX_BAGGAGE_STRING_LENGTH = 8192;\n\n/**\n * Takes a baggage header and turns it into Dynamic Sampling Context, by extracting all the \"sentry-\" prefixed values\n * from it.\n *\n * @param baggageHeader A very bread definition of a baggage header as it might appear in various frameworks.\n * @returns The Dynamic Sampling Context that was found on `baggageHeader`, if there was any, `undefined` otherwise.\n */\nfunction baggageHeaderToDynamicSamplingContext(\n  // Very liberal definition of what any incoming header might look like\n  baggageHeader,\n) {\n  if (!isString(baggageHeader) && !Array.isArray(baggageHeader)) {\n    return undefined;\n  }\n\n  // Intermediary object to store baggage key value pairs of incoming baggage headers on.\n  // It is later used to read Sentry-DSC-values from.\n  let baggageObject = {};\n\n  if (Array.isArray(baggageHeader)) {\n    // Combine all baggage headers into one object containing the baggage values so we can later read the Sentry-DSC-values from it\n    baggageObject = baggageHeader.reduce((acc, curr) => {\n      var currBaggageObject = baggageHeaderToObject(curr);\n      return {\n        ...acc,\n        ...currBaggageObject,\n      };\n    }, {});\n  } else {\n    // Return undefined if baggage header is an empty string (technically an empty baggage header is not spec conform but\n    // this is how we choose to handle it)\n    if (!baggageHeader) {\n      return undefined;\n    }\n\n    baggageObject = baggageHeaderToObject(baggageHeader);\n  }\n\n  // Read all \"sentry-\" prefixed values out of the baggage object and put it onto a dynamic sampling context object.\n  var dynamicSamplingContext = Object.entries(baggageObject).reduce((acc, [key, value]) => {\n    if (key.match(SENTRY_BAGGAGE_KEY_PREFIX_REGEX)) {\n      var nonPrefixedKey = key.slice(SENTRY_BAGGAGE_KEY_PREFIX.length);\n      acc[nonPrefixedKey] = value;\n    }\n    return acc;\n  }, {});\n\n  // Only return a dynamic sampling context object if there are keys in it.\n  // A keyless object means there were no sentry values on the header, which means that there is no DSC.\n  if (Object.keys(dynamicSamplingContext).length > 0) {\n    return dynamicSamplingContext ;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Turns a Dynamic Sampling Object into a baggage header by prefixing all the keys on the object with \"sentry-\".\n *\n * @param dynamicSamplingContext The Dynamic Sampling Context to turn into a header. For convenience and compatibility\n * with the `getDynamicSamplingContext` method on the Transaction class ,this argument can also be `undefined`. If it is\n * `undefined` the function will return `undefined`.\n * @returns a baggage header, created from `dynamicSamplingContext`, or `undefined` either if `dynamicSamplingContext`\n * was `undefined`, or if `dynamicSamplingContext` didn't contain any values.\n */\nfunction dynamicSamplingContextToSentryBaggageHeader(\n  // this also takes undefined for convenience and bundle size in other places\n  dynamicSamplingContext,\n) {\n  // Prefix all DSC keys with \"sentry-\" and put them into a new object\n  var sentryPrefixedDSC = Object.entries(dynamicSamplingContext).reduce(\n    (acc, [dscKey, dscValue]) => {\n      if (dscValue) {\n        acc[`${SENTRY_BAGGAGE_KEY_PREFIX}${dscKey}`] = dscValue;\n      }\n      return acc;\n    },\n    {},\n  );\n\n  return objectToBaggageHeader(sentryPrefixedDSC);\n}\n\n/**\n * Will parse a baggage header, which is a simple key-value map, into a flat object.\n *\n * @param baggageHeader The baggage header to parse.\n * @returns a flat object containing all the key-value pairs from `baggageHeader`.\n */\nfunction baggageHeaderToObject(baggageHeader) {\n  return baggageHeader\n    .split(',')\n    .map(baggageEntry => baggageEntry.split('=').map(keyOrValue => decodeURIComponent(keyOrValue.trim())))\n    .reduce((acc, [key, value]) => {\n      acc[key] = value;\n      return acc;\n    }, {});\n}\n\n/**\n * Turns a flat object (key-value pairs) into a baggage header, which is also just key-value pairs.\n *\n * @param object The object to turn into a baggage header.\n * @returns a baggage header string, or `undefined` if the object didn't have any values, since an empty baggage header\n * is not spec compliant.\n */\nfunction objectToBaggageHeader(object) {\n  if (Object.keys(object).length === 0) {\n    // An empty baggage header is not spec compliant: We return undefined.\n    return undefined;\n  }\n\n  return Object.entries(object).reduce((baggageHeader, [objectKey, objectValue], currentIndex) => {\n    var baggageEntry = `${encodeURIComponent(objectKey)}=${encodeURIComponent(objectValue)}`;\n    var newBaggageHeader = currentIndex === 0 ? baggageEntry : `${baggageHeader},${baggageEntry}`;\n    if (newBaggageHeader.length > MAX_BAGGAGE_STRING_LENGTH) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn(\n          `Not adding key: ${objectKey} with val: ${objectValue} to baggage header due to exceeding baggage size limits.`,\n        );\n      return baggageHeader;\n    } else {\n      return newBaggageHeader;\n    }\n  }, '');\n}\n\nexport { BAGGAGE_HEADER_NAME, MAX_BAGGAGE_STRING_LENGTH, SENTRY_BAGGAGE_KEY_PREFIX, SENTRY_BAGGAGE_KEY_PREFIX_REGEX, baggageHeaderToDynamicSamplingContext, dynamicSamplingContextToSentryBaggageHeader };\n//# sourceMappingURL=baggage.js.map\n","import { timestampInSeconds, uuid4, dropUndefinedKeys } from '@sentry/utils';\n\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nfunction makeSession(context) {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  var startingTime = timestampInSeconds();\n\n  var session = {\n    sid: uuid4(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see BaseClient.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\n// eslint-disable-next-line complexity\nfunction updateSession(session, context = {}) {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || timestampInSeconds();\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. — Kamil\n    session.sid = context.sid.length === 32 ? context.sid : uuid4();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    var duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nfunction closeSession(session, status) {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session) {\n  return dropUndefinedKeys({\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  });\n}\n\nexport { closeSession, makeSession, updateSession };\n//# sourceMappingURL=session.js.map\n","import { isPlainObject, dateTimestampInSeconds, getGlobalSingleton, SyncPromise, logger, isThenable, arrayify } from '@sentry/utils';\nimport { updateSession } from './session.js';\n\n/**\n * Absolute maximum number of breadcrumbs added to an event.\n * The `maxBreadcrumbs` option cannot be higher than this value.\n */\nvar MAX_BREADCRUMBS = 100;\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nclass Scope  {\n  /** Flag if notifying is happening. */\n\n  /** Callback for client to receive scope changes. */\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n\n  /** Array of breadcrumbs. */\n\n  /** User */\n\n  /** Tags */\n\n  /** Extra */\n\n  /** Contexts */\n\n  /** Attachments */\n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n\n  /** Fingerprint */\n\n  /** Severity */\n  // eslint-disable-next-line deprecation/deprecation\n\n  /** Transaction Name */\n\n  /** Span */\n\n  /** Session */\n\n  /** Request Mode Session Status */\n\n   constructor() {\n    this._notifyingListeners = false;\n    this._scopeListeners = [];\n    this._eventProcessors = [];\n    this._breadcrumbs = [];\n    this._attachments = [];\n    this._user = {};\n    this._tags = {};\n    this._extra = {};\n    this._contexts = {};\n    this._sdkProcessingMetadata = {};\n  }\n\n  /**\n   * Inherit values from the parent scope.\n   * @param scope to clone.\n   */\n   static clone(scope) {\n    var newScope = new Scope();\n    if (scope) {\n      newScope._breadcrumbs = [...scope._breadcrumbs];\n      newScope._tags = { ...scope._tags };\n      newScope._extra = { ...scope._extra };\n      newScope._contexts = { ...scope._contexts };\n      newScope._user = scope._user;\n      newScope._level = scope._level;\n      newScope._span = scope._span;\n      newScope._session = scope._session;\n      newScope._transactionName = scope._transactionName;\n      newScope._fingerprint = scope._fingerprint;\n      newScope._eventProcessors = [...scope._eventProcessors];\n      newScope._requestSession = scope._requestSession;\n      newScope._attachments = [...scope._attachments];\n    }\n    return newScope;\n  }\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n   addScopeListener(callback) {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addEventProcessor(callback) {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    this._user = user || {};\n    if (this._session) {\n      updateSession(this._session, { user });\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getUser() {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getRequestSession() {\n    return this._requestSession;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setRequestSession(requestSession) {\n    this._requestSession = requestSession;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setFingerprint(fingerprint) {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setLevel(\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n  ) {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTransactionName(name) {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setContext(key, context) {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts = { ...this._contexts, [key]: context };\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSpan(span) {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSpan() {\n    return this._span;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransaction() {\n    // Often, this span (if it exists at all) will be a transaction, but it's not guaranteed to be. Regardless, it will\n    // have a pointer to the currently-active transaction.\n    var span = this.getSpan();\n    return span && span.transaction;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSession(session) {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSession() {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   update(captureContext) {\n    if (!captureContext) {\n      return this;\n    }\n\n    if (typeof captureContext === 'function') {\n      var updatedScope = (captureContext )(this);\n      return updatedScope instanceof Scope ? updatedScope : this;\n    }\n\n    if (captureContext instanceof Scope) {\n      this._tags = { ...this._tags, ...captureContext._tags };\n      this._extra = { ...this._extra, ...captureContext._extra };\n      this._contexts = { ...this._contexts, ...captureContext._contexts };\n      if (captureContext._user && Object.keys(captureContext._user).length) {\n        this._user = captureContext._user;\n      }\n      if (captureContext._level) {\n        this._level = captureContext._level;\n      }\n      if (captureContext._fingerprint) {\n        this._fingerprint = captureContext._fingerprint;\n      }\n      if (captureContext._requestSession) {\n        this._requestSession = captureContext._requestSession;\n      }\n    } else if (isPlainObject(captureContext)) {\n      // eslint-disable-next-line no-param-reassign\n      captureContext = captureContext ;\n      this._tags = { ...this._tags, ...captureContext.tags };\n      this._extra = { ...this._extra, ...captureContext.extra };\n      this._contexts = { ...this._contexts, ...captureContext.contexts };\n      if (captureContext.user) {\n        this._user = captureContext.user;\n      }\n      if (captureContext.level) {\n        this._level = captureContext.level;\n      }\n      if (captureContext.fingerprint) {\n        this._fingerprint = captureContext.fingerprint;\n      }\n      if (captureContext.requestSession) {\n        this._requestSession = captureContext.requestSession;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clear() {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._requestSession = undefined;\n    this._span = undefined;\n    this._session = undefined;\n    this._notifyScopeListeners();\n    this._attachments = [];\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, maxBreadcrumbs) {\n    var maxCrumbs = typeof maxBreadcrumbs === 'number' ? Math.min(maxBreadcrumbs, MAX_BREADCRUMBS) : MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    var mergedBreadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n    };\n    this._breadcrumbs = [...this._breadcrumbs, mergedBreadcrumb].slice(-maxCrumbs);\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearBreadcrumbs() {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addAttachment(attachment) {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getAttachments() {\n    return this._attachments;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearAttachments() {\n    this._attachments = [];\n    return this;\n  }\n\n  /**\n   * Applies data from the scope to the event and runs all event processors on it.\n   *\n   * @param event Event\n   * @param hint Object containing additional information about the original exception, for use by the event processors.\n   * @hidden\n   */\n   applyToEvent(event, hint = {}) {\n    if (this._extra && Object.keys(this._extra).length) {\n      event.extra = { ...this._extra, ...event.extra };\n    }\n    if (this._tags && Object.keys(this._tags).length) {\n      event.tags = { ...this._tags, ...event.tags };\n    }\n    if (this._user && Object.keys(this._user).length) {\n      event.user = { ...this._user, ...event.user };\n    }\n    if (this._contexts && Object.keys(this._contexts).length) {\n      event.contexts = { ...this._contexts, ...event.contexts };\n    }\n    if (this._level) {\n      event.level = this._level;\n    }\n    if (this._transactionName) {\n      event.transaction = this._transactionName;\n    }\n\n    // We want to set the trace context for normal events only if there isn't already\n    // a trace context on the event. There is a product feature in place where we link\n    // errors with transaction and it relies on that.\n    if (this._span) {\n      event.contexts = { trace: this._span.getTraceContext(), ...event.contexts };\n      var transactionName = this._span.transaction && this._span.transaction.name;\n      if (transactionName) {\n        event.tags = { transaction: transactionName, ...event.tags };\n      }\n    }\n\n    this._applyFingerprint(event);\n\n    event.breadcrumbs = [...(event.breadcrumbs || []), ...this._breadcrumbs];\n    event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n\n    event.sdkProcessingMetadata = { ...event.sdkProcessingMetadata, ...this._sdkProcessingMetadata };\n\n    return this._notifyEventProcessors([...getGlobalEventProcessors(), ...this._eventProcessors], event, hint);\n  }\n\n  /**\n   * Add data which will be accessible during event processing but won't get sent to Sentry\n   */\n   setSDKProcessingMetadata(newData) {\n    this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...newData };\n\n    return this;\n  }\n\n  /**\n   * This will be called after {@link applyToEvent} is finished.\n   */\n   _notifyEventProcessors(\n    processors,\n    event,\n    hint,\n    index = 0,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      var processor = processors[index];\n      if (event === null || typeof processor !== 'function') {\n        resolve(event);\n      } else {\n        var result = processor({ ...event }, hint) ;\n\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n          processor.id &&\n          result === null &&\n          logger.log(`Event processor \"${processor.id}\" dropped event`);\n\n        if (isThenable(result)) {\n          void result\n            .then(final => this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n            .then(null, reject);\n        } else {\n          void this._notifyEventProcessors(processors, result, hint, index + 1)\n            .then(resolve)\n            .then(null, reject);\n        }\n      }\n    });\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n   _notifyScopeListeners() {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n\n  /**\n   * Applies fingerprint from the scope to the event if there's one,\n   * uses message if there's one instead or get rid of empty fingerprint\n   */\n   _applyFingerprint(event) {\n    // Make sure it's an array first and we actually have something in place\n    event.fingerprint = event.fingerprint ? arrayify(event.fingerprint) : [];\n\n    // If we have something on the scope, then merge it with event\n    if (this._fingerprint) {\n      event.fingerprint = event.fingerprint.concat(this._fingerprint);\n    }\n\n    // If we have no data at all, remove empty array default\n    if (event.fingerprint && !event.fingerprint.length) {\n      delete event.fingerprint;\n    }\n  }\n}\n\n/**\n * Returns the global event processors.\n */\nfunction getGlobalEventProcessors() {\n  return getGlobalSingleton('globalEventProcessors', () => []);\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nfunction addGlobalEventProcessor(callback) {\n  getGlobalEventProcessors().push(callback);\n}\n\nexport { Scope, addGlobalEventProcessor };\n//# sourceMappingURL=scope.js.map\n","import { uuid4, dateTimestampInSeconds, consoleSandbox, logger, getGlobalObject, getGlobalSingleton, isNodeEnv } from '@sentry/utils';\nimport { Scope } from './scope.js';\nimport { closeSession, makeSession, updateSession } from './session.js';\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nvar API_VERSION = 4;\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nvar DEFAULT_BREADCRUMBS = 100;\n\n/**\n * A layer in the process stack.\n * @hidden\n */\n\n/**\n * @inheritDoc\n */\nclass Hub  {\n  /** Is a {@link Layer}[] containing the client and scope */\n    __init() {this._stack = [{}];}\n\n  /** Contains the last event id of a captured event.  */\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n   constructor(client, scope = new Scope(),   _version = API_VERSION) {;this._version = _version;Hub.prototype.__init.call(this);\n    this.getStackTop().scope = scope;\n    if (client) {\n      this.bindClient(client);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   isOlderThan(version) {\n    return this._version < version;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   bindClient(client) {\n    var top = this.getStackTop();\n    top.client = client;\n    if (client && client.setupIntegrations) {\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   pushScope() {\n    // We want to clone the content of prev scope\n    var scope = Scope.clone(this.getScope());\n    this.getStack().push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   popScope() {\n    if (this.getStack().length <= 1) return false;\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   withScope(callback) {\n    var scope = this.pushScope();\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getClient() {\n    return this.getStackTop().client ;\n  }\n\n  /** Returns the scope of the top stack. */\n   getScope() {\n    return this.getStackTop().scope;\n  }\n\n  /** Returns the scope stack for domains or the process. */\n   getStack() {\n    return this._stack;\n  }\n\n  /** Returns the topmost scope layer in the order domain > local > process. */\n   getStackTop() {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n   captureException(exception, hint) {\n    var eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    var syntheticException = new Error('Sentry syntheticException');\n    this._withClient((client, scope) => {\n      client.captureException(\n        exception,\n        {\n          originalException: exception,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n    hint,\n  ) {\n    var eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    var syntheticException = new Error(message);\n    this._withClient((client, scope) => {\n      client.captureMessage(\n        message,\n        level,\n        {\n          originalException: message,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint) {\n    var eventId = hint && hint.event_id ? hint.event_id : uuid4();\n    if (event.type !== 'transaction') {\n      this._lastEventId = eventId;\n    }\n\n    this._withClient((client, scope) => {\n      client.captureEvent(event, { ...hint, event_id: eventId }, scope);\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   lastEventId() {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, hint) {\n    const { scope, client } = this.getStackTop();\n\n    if (!scope || !client) return;\n\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    var timestamp = dateTimestampInSeconds();\n    var mergedBreadcrumb = { timestamp, ...breadcrumb };\n    var finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) )\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    var scope = this.getScope();\n    if (scope) scope.setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    var scope = this.getScope();\n    if (scope) scope.setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    var scope = this.getScope();\n    if (scope) scope.setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    var scope = this.getScope();\n    if (scope) scope.setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    var scope = this.getScope();\n    if (scope) scope.setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   setContext(name, context) {\n    var scope = this.getScope();\n    if (scope) scope.setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   configureScope(callback) {\n    const { scope, client } = this.getStackTop();\n    if (scope && client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   run(callback) {\n    var oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getIntegration(integration) {\n    var client = this.getClient();\n    if (!client) return null;\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startTransaction(context, customSamplingContext) {\n    return this._callExtensionMethod('startTransaction', context, customSamplingContext);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   traceHeaders() {\n    return this._callExtensionMethod('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(endSession = false) {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   endSession() {\n    var layer = this.getStackTop();\n    var scope = layer && layer.scope;\n    var session = scope && scope.getSession();\n    if (session) {\n      closeSession(session);\n    }\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    if (scope) {\n      scope.setSession();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startSession(context) {\n    const { scope, client } = this.getStackTop();\n    const { release, environment } = (client && client.getOptions()) || {};\n\n    // Will fetch userAgent if called from browser sdk\n    var global = getGlobalObject();\n    const { userAgent } = global.navigator || {};\n\n    var session = makeSession({\n      release,\n      environment,\n      ...(scope && { user: scope.getUser() }),\n      ...(userAgent && { userAgent }),\n      ...context,\n    });\n\n    if (scope) {\n      // End existing session if there's one\n      var currentSession = scope.getSession && scope.getSession();\n      if (currentSession && currentSession.status === 'ok') {\n        updateSession(currentSession, { status: 'exited' });\n      }\n      this.endSession();\n\n      // Afterwards we set the new session on the scope\n      scope.setSession(session);\n    }\n\n    return session;\n  }\n\n  /**\n   * Returns if default PII should be sent to Sentry and propagated in ourgoing requests\n   * when Tracing is used.\n   */\n   shouldSendDefaultPii() {\n    var client = this.getClient();\n    var options = client && client.getOptions();\n    return Boolean(options && options.sendDefaultPii);\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n   _sendSessionUpdate() {\n    const { scope, client } = this.getStackTop();\n    if (!scope) return;\n\n    var session = scope.getSession();\n    if (session) {\n      if (client && client.captureSession) {\n        client.captureSession(session);\n      }\n    }\n  }\n\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n   _withClient(callback) {\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(client, scope);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-ignore Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   _callExtensionMethod(method, ...args) {\n    var carrier = getMainCarrier();\n    var sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nfunction getMainCarrier() {\n  var carrier = getGlobalObject();\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return carrier;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nfunction makeMain(hub) {\n  var registry = getMainCarrier();\n  var oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nfunction getCurrentHub() {\n  // Get main carrier (global for every environment)\n  var registry = getMainCarrier();\n\n  // If there's no hub, or its an old API, assign a new one\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Prefer domains over global if they are there (applicable only to Node environment)\n  if (isNodeEnv()) {\n    return getHubFromActiveDomain(registry);\n  }\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * Try to read the hub from an active domain, and fallback to the registry if one doesn't exist\n * @returns discovered hub\n */\nfunction getHubFromActiveDomain(registry) {\n  try {\n    var sentry = getMainCarrier().__SENTRY__;\n    var activeDomain = sentry && sentry.extensions && sentry.extensions.domain && sentry.extensions.domain.active;\n\n    // If there's no active domain, just return global hub\n    if (!activeDomain) {\n      return getHubFromCarrier(registry);\n    }\n\n    // If there's no hub on current domain, or it's an old API, assign a new one\n    if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n      var registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n      setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n    }\n\n    // Return hub that lives on a domain\n    return getHubFromCarrier(activeDomain);\n  } catch (_Oo) {\n    // Return hub that lives on a global object\n    return getHubFromCarrier(registry);\n  }\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier) {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nfunction getHubFromCarrier(carrier) {\n  return getGlobalSingleton('hub', () => new Hub(), carrier);\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\nfunction setHubOnCarrier(carrier, hub) {\n  if (!carrier) return false;\n  var __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n  __SENTRY__.hub = hub;\n  return true;\n}\n\nexport { API_VERSION, Hub, getCurrentHub, getHubFromCarrier, getMainCarrier, makeMain, setHubOnCarrier };\n//# sourceMappingURL=hub.js.map\n","import { getCurrentHub } from './hub.js';\n\n// Note: All functions in this file are typed with a return value of `ReturnType<Hub[HUB_FUNCTION]>`,\n// where HUB_FUNCTION is some method on the Hub class.\n//\n// This is done to make sure the top level SDK methods stay in sync with the hub methods.\n// Although every method here has an explicit return type, some of them (that map to void returns) do not\n// contain `return` keywords. This is done to save on bundle size, as `return` is not minifiable.\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception An exception-like object.\n * @param captureContext Additional scope data to apply to exception event.\n * @returns The generated eventId.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nfunction captureException(exception, captureContext) {\n  return getCurrentHub().captureException(exception, { captureContext });\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param Severity Define the level of the message.\n * @returns The generated eventId.\n */\nfunction captureMessage(\n  message,\n  // eslint-disable-next-line deprecation/deprecation\n  captureContext,\n) {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  var level = typeof captureContext === 'string' ? captureContext : undefined;\n  var context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  return getCurrentHub().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @returns The generated eventId.\n */\nfunction captureEvent(event, hint) {\n  return getCurrentHub().captureEvent(event, hint);\n}\n\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n */\nfunction configureScope(callback) {\n  getCurrentHub().configureScope(callback);\n}\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\nfunction addBreadcrumb(breadcrumb) {\n  getCurrentHub().addBreadcrumb(breadcrumb);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setContext(name, context) {\n  getCurrentHub().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nfunction setExtras(extras) {\n  getCurrentHub().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\nfunction setExtra(key, extra) {\n  getCurrentHub().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nfunction setTags(tags) {\n  getCurrentHub().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\nfunction setTag(key, value) {\n  getCurrentHub().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nfunction setUser(user) {\n  getCurrentHub().setUser(user);\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n *\n * @param callback that will be enclosed into push/popScope.\n */\nfunction withScope(callback) {\n  getCurrentHub().withScope(callback);\n}\n\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n * new child span within the transaction or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.finish()` method, at which point the transaction with all its\n * finished child spans will be sent to Sentry.\n *\n * NOTE: This function should only be used for *manual* instrumentation. Auto-instrumentation should call\n * `startTransaction` directly on the hub.\n *\n * @param context Properties of the new `Transaction`.\n * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n * default values). See {@link Options.tracesSampler}.\n *\n * @returns The transaction which was just started\n */\nfunction startTransaction(\n  context,\n  customSamplingContext,\n) {\n  return getCurrentHub().startTransaction({ ...context }, customSamplingContext);\n}\n\nexport { addBreadcrumb, captureEvent, captureException, captureMessage, configureScope, setContext, setExtra, setExtras, setTag, setTags, setUser, startTransaction, withScope };\n//# sourceMappingURL=exports.js.map\n","import { urlEncode, makeDsn, dsnToString } from '@sentry/utils';\n\nvar SENTRY_API_VERSION = '7';\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn) {\n  var protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  var port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn) {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn, sdkInfo) {\n  return urlEncode({\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    sentry_key: dsn.publicKey,\n    sentry_version: SENTRY_API_VERSION,\n    ...(sdkInfo && { sentry_client: `${sdkInfo.name}/${sdkInfo.version}` }),\n  });\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nfunction getEnvelopeEndpointWithUrlEncodedAuth(\n  dsn,\n  // TODO (v8): Remove `tunnelOrOptions` in favor of `options`, and use the substitute code below\n  // options: ClientOptions = {} as ClientOptions,\n  tunnelOrOptions = {} ,\n) {\n  // TODO (v8): Use this code instead\n  // const { tunnel, _metadata = {} } = options;\n  // return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, _metadata.sdk)}`;\n\n  var tunnel = typeof tunnelOrOptions === 'string' ? tunnelOrOptions : tunnelOrOptions.tunnel;\n  var sdkInfo =\n    typeof tunnelOrOptions === 'string' || !tunnelOrOptions._metadata ? undefined : tunnelOrOptions._metadata.sdk;\n\n  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, sdkInfo)}`;\n}\n\n/** Returns the url to the report dialog endpoint. */\nfunction getReportDialogEndpoint(\n  dsnLike,\n  dialogOptions\n\n,\n) {\n  var dsn = makeDsn(dsnLike);\n  var endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${dsnToString(dsn)}`;\n  for (var key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'user') {\n      var user = dialogOptions.user;\n      if (!user) {\n        continue;\n      }\n      if (user.name) {\n        encodedOptions += `&name=${encodeURIComponent(user.name)}`;\n      }\n      if (user.email) {\n        encodedOptions += `&email=${encodeURIComponent(user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] )}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n\nexport { getEnvelopeEndpointWithUrlEncodedAuth, getReportDialogEndpoint };\n//# sourceMappingURL=api.js.map\n","import { dsnToString, createEnvelope, dropUndefinedKeys } from '@sentry/utils';\n\n/** Extract sdk info from from the API metadata */\nfunction getSdkMetadataForEnvelopeHeader(metadata) {\n  if (!metadata || !metadata.sdk) {\n    return;\n  }\n  const { name, version } = metadata.sdk;\n  return { name, version };\n}\n\n/**\n * Apply SdkInfo (name, version, packages, integrations) to the corresponding event key.\n * Merge with existing data if any.\n **/\nfunction enhanceEventWithSdkInfo(event, sdkInfo) {\n  if (!sdkInfo) {\n    return event;\n  }\n  event.sdk = event.sdk || {};\n  event.sdk.name = event.sdk.name || sdkInfo.name;\n  event.sdk.version = event.sdk.version || sdkInfo.version;\n  event.sdk.integrations = [...(event.sdk.integrations || []), ...(sdkInfo.integrations || [])];\n  event.sdk.packages = [...(event.sdk.packages || []), ...(sdkInfo.packages || [])];\n  return event;\n}\n\n/** Creates an envelope from a Session */\nfunction createSessionEnvelope(\n  session,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  var sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n  var envelopeHeaders = {\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && { dsn: dsnToString(dsn) }),\n  };\n\n  var envelopeItem =\n    'aggregates' in session ? [{ type: 'sessions' }, session] : [{ type: 'session' }, session];\n\n  return createEnvelope(envelopeHeaders, [envelopeItem]);\n}\n\n/**\n * Create an Envelope from an event.\n */\nfunction createEventEnvelope(\n  event,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  var sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n  var eventType = event.type || 'event';\n\n  enhanceEventWithSdkInfo(event, metadata && metadata.sdk);\n\n  var envelopeHeaders = createEventEnvelopeHeaders(event, sdkInfo, tunnel, dsn);\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete event.sdkProcessingMetadata;\n\n  var eventItem = [{ type: eventType }, event];\n  return createEnvelope(envelopeHeaders, [eventItem]);\n}\n\nfunction createEventEnvelopeHeaders(\n  event,\n  sdkInfo,\n  tunnel,\n  dsn,\n) {\n  var dynamicSamplingContext = event.sdkProcessingMetadata && event.sdkProcessingMetadata.dynamicSamplingContext;\n\n  return {\n    event_id: event.event_id ,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && { dsn: dsnToString(dsn) }),\n    ...(event.type === 'transaction' &&\n      dynamicSamplingContext && {\n        trace: dropUndefinedKeys({ ...dynamicSamplingContext }),\n      }),\n  };\n}\n\nexport { createEventEnvelope, createSessionEnvelope };\n//# sourceMappingURL=envelope.js.map\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { arrayify, logger } from '@sentry/utils';\n\nvar installedIntegrations = [];\n\n/** Map of integrations assigned to a client */\n\n/**\n * Remove duplicates from the given array, preferring the last instance of any duplicate. Not guaranteed to\n * preseve the order of integrations in the array.\n *\n * @private\n */\nfunction filterDuplicates(integrations) {\n  var integrationsByName = {};\n\n  integrations.forEach(currentInstance => {\n    const { name } = currentInstance;\n\n    var existingInstance = integrationsByName[name];\n\n    // We want integrations later in the array to overwrite earlier ones of the same type, except that we never want a\n    // default instance to overwrite an existing user instance\n    if (existingInstance && !existingInstance.isDefaultInstance && currentInstance.isDefaultInstance) {\n      return;\n    }\n\n    integrationsByName[name] = currentInstance;\n  });\n\n  return Object.values(integrationsByName);\n}\n\n/** Gets integrations to install */\nfunction getIntegrationsToSetup(options) {\n  var defaultIntegrations = options.defaultIntegrations || [];\n  var userIntegrations = options.integrations;\n\n  // We flag default instances, so that later we can tell them apart from any user-created instances of the same class\n  defaultIntegrations.forEach(integration => {\n    integration.isDefaultInstance = true;\n  });\n\n  let integrations;\n\n  if (Array.isArray(userIntegrations)) {\n    integrations = [...defaultIntegrations, ...userIntegrations];\n  } else if (typeof userIntegrations === 'function') {\n    integrations = arrayify(userIntegrations(defaultIntegrations));\n  } else {\n    integrations = defaultIntegrations;\n  }\n\n  var finalIntegrations = filterDuplicates(integrations);\n\n  // The `Debug` integration prints copies of the `event` and `hint` which will be passed to `beforeSend`. It therefore\n  // has to run after all other integrations, so that the changes of all event processors will be reflected in the\n  // printed values. For lack of a more elegant way to guarantee that, we therefore locate it and, assuming it exists,\n  // pop it out of its current spot and shove it onto the end of the array.\n  var debugIndex = finalIntegrations.findIndex(integration => integration.name === 'Debug');\n  if (debugIndex !== -1) {\n    const [debugInstance] = finalIntegrations.splice(debugIndex, 1);\n    finalIntegrations.push(debugInstance);\n  }\n\n  return finalIntegrations;\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nfunction setupIntegrations(integrations) {\n  var integrationIndex = {};\n\n  integrations.forEach(integration => {\n    integrationIndex[integration.name] = integration;\n\n    if (installedIntegrations.indexOf(integration.name) === -1) {\n      integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n      installedIntegrations.push(integration.name);\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`Integration installed: ${integration.name}`);\n    }\n  });\n\n  return integrationIndex;\n}\n\nexport { getIntegrationsToSetup, installedIntegrations, setupIntegrations };\n//# sourceMappingURL=integration.js.map\n","import { updateSession, Scope } from '@sentry/hub';\nimport { makeDsn, logger, checkOrSetAlreadyCaught, isPrimitive, resolvedSyncPromise, addItemToEnvelope, createAttachmentEnvelopeItem, SyncPromise, uuid4, dateTimestampInSeconds, normalize, truncate, rejectedSyncPromise, SentryError, isThenable, isPlainObject } from '@sentry/utils';\nimport { getEnvelopeEndpointWithUrlEncodedAuth } from './api.js';\nimport { createEventEnvelope, createSessionEnvelope } from './envelope.js';\nimport { setupIntegrations } from './integration.js';\n\n/* eslint-disable max-lines */\n\nvar ALREADY_SEEN_ERROR = \"Not capturing exception because it's already been captured.\";\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event, it is passed through\n * {@link BaseClient._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(options);\n *   }\n *\n *   // ...\n * }\n */\nclass BaseClient {\n  /** Options passed to the SDK. */\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n\n  /** Array of set up integrations. */\n   __init() {this._integrations = {};}\n\n  /** Indicates whether this client's integrations have been set up. */\n   __init2() {this._integrationsInitialized = false;}\n\n  /** Number of calls being processed */\n   __init3() {this._numProcessing = 0;}\n\n  /** Holds flushable  */\n   __init4() {this._outcomes = {};}\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param options Options for the client.\n   */\n   constructor(options) {;BaseClient.prototype.__init.call(this);BaseClient.prototype.__init2.call(this);BaseClient.prototype.__init3.call(this);BaseClient.prototype.__init4.call(this);\n    this._options = options;\n    if (options.dsn) {\n      this._dsn = makeDsn(options.dsn);\n      var url = getEnvelopeEndpointWithUrlEncodedAuth(this._dsn, options);\n      this._transport = options.transport({\n        recordDroppedEvent: this.recordDroppedEvent.bind(this),\n        ...options.transportOptions,\n        url,\n      });\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('No DSN provided, client will not do anything.');\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n   captureException(exception, hint, scope) {\n    // ensure we haven't captured this very object before\n    if (checkOrSetAlreadyCaught(exception)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId = hint && hint.event_id;\n\n    this._process(\n      this.eventFromException(exception, hint)\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n    hint,\n    scope,\n  ) {\n    let eventId = hint && hint.event_id;\n\n    var promisedEvent = isPrimitive(message)\n      ? this.eventFromMessage(String(message), level, hint)\n      : this.eventFromException(message, hint);\n\n    this._process(\n      promisedEvent\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint, scope) {\n    // ensure we haven't captured this very object before\n    if (hint && hint.originalException && checkOrSetAlreadyCaught(hint.originalException)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId = hint && hint.event_id;\n\n    this._process(\n      this._captureEvent(event, hint, scope).then(result => {\n        eventId = result;\n      }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(session) {\n    if (!this._isEnabled()) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('SDK not enabled, will not capture session.');\n      return;\n    }\n\n    if (!(typeof session.release === 'string')) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Discarded session because of missing or non-string release');\n    } else {\n      this.sendSession(session);\n      // After sending, we set init false to indicate it's not the first occurrence\n      updateSession(session, { init: false });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getDsn() {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getOptions() {\n    return this._options;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransport() {\n    return this._transport;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   flush(timeout) {\n    var transport = this._transport;\n    if (transport) {\n      return this._isClientDoneProcessing(timeout).then(clientFinished => {\n        return transport.flush(timeout).then(transportFlushed => clientFinished && transportFlushed);\n      });\n    } else {\n      return resolvedSyncPromise(true);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   close(timeout) {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      return result;\n    });\n  }\n\n  /**\n   * Sets up the integrations\n   */\n   setupIntegrations() {\n    if (this._isEnabled() && !this._integrationsInitialized) {\n      this._integrations = setupIntegrations(this._options.integrations);\n      this._integrationsInitialized = true;\n    }\n  }\n\n  /**\n   * Gets an installed integration by its `id`.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `id` was installed.\n   */\n   getIntegrationById(integrationId) {\n    return this._integrations[integrationId];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getIntegration(integration) {\n    try {\n      return (this._integrations[integration.id] ) || null;\n    } catch (_oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Cannot retrieve integration ${integration.id} from the current Client`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendEvent(event, hint = {}) {\n    if (this._dsn) {\n      let env = createEventEnvelope(event, this._dsn, this._options._metadata, this._options.tunnel);\n\n      for (var attachment of hint.attachments || []) {\n        env = addItemToEnvelope(\n          env,\n          createAttachmentEnvelopeItem(\n            attachment,\n            this._options.transportOptions && this._options.transportOptions.textEncoder,\n          ),\n        );\n      }\n\n      this._sendEnvelope(env);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendSession(session) {\n    if (this._dsn) {\n      var env = createSessionEnvelope(session, this._dsn, this._options._metadata, this._options.tunnel);\n      this._sendEnvelope(env);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   recordDroppedEvent(reason, category) {\n    if (this._options.sendClientReports) {\n      // We want to track each category (error, transaction, session) separately\n      // but still keep the distinction between different type of outcomes.\n      // We could use nested maps, but it's much easier to read and type this way.\n      // A correct type for map-based implementation if we want to go that route\n      // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n      // With typescript 4.1 we could even use template literal types\n      var key = `${reason}:${category}`;\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`Adding outcome: \"${key}\"`);\n\n      // The following works because undefined + 1 === NaN and NaN is falsy\n      this._outcomes[key] = this._outcomes[key] + 1 || 1;\n    }\n  }\n\n  /** Updates existing session based on the provided event */\n   _updateSessionFromEvent(session, event) {\n    let crashed = false;\n    let errored = false;\n    var exceptions = event.exception && event.exception.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (var ex of exceptions) {\n        var mechanism = ex.mechanism;\n        if (mechanism && mechanism.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    // A session is updated and that session update is sent in only one of the two following scenarios:\n    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n    var sessionNonTerminal = session.status === 'ok';\n    var shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n\n    if (shouldUpdateAndSend) {\n      updateSession(session, {\n        ...(crashed && { status: 'crashed' }),\n        errors: session.errors || Number(errored || crashed),\n      });\n      this.captureSession(session);\n    }\n  }\n\n  /**\n   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n   * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n   * `false` otherwise\n   */\n   _isClientDoneProcessing(timeout) {\n    return new SyncPromise(resolve => {\n      let ticked = 0;\n      var tick = 1;\n\n      var interval = setInterval(() => {\n        if (this._numProcessing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Determines whether this SDK is enabled and a valid Dsn is present. */\n   _isEnabled() {\n    return this.getOptions().enabled !== false && this._dsn !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n   _prepareEvent(event, hint, scope) {\n    const { normalizeDepth = 3, normalizeMaxBreadth = 1000 } = this.getOptions();\n    var prepared = {\n      ...event,\n      event_id: event.event_id || hint.event_id || uuid4(),\n      timestamp: event.timestamp || dateTimestampInSeconds(),\n    };\n\n    this._applyClientOptions(prepared);\n    this._applyIntegrationsMetadata(prepared);\n\n    // If we have scope given to us, use it as the base for further modifications.\n    // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n    let finalScope = scope;\n    if (hint.captureContext) {\n      finalScope = Scope.clone(finalScope).update(hint.captureContext);\n    }\n\n    // We prepare the result here with a resolved Event.\n    let result = resolvedSyncPromise(prepared);\n\n    // This should be the last thing called, since we want that\n    // {@link Hub.addEventProcessor} gets the finished prepared event.\n    if (finalScope) {\n      // Collect attachments from the hint and scope\n      var attachments = [...(hint.attachments || []), ...finalScope.getAttachments()];\n\n      if (attachments.length) {\n        hint.attachments = attachments;\n      }\n\n      // In case we have a hub we reassign it.\n      result = finalScope.applyToEvent(prepared, hint);\n    }\n\n    return result.then(evt => {\n      if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n        return this._normalizeEvent(evt, normalizeDepth, normalizeMaxBreadth);\n      }\n      return evt;\n    });\n  }\n\n  /**\n   * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n   * Normalized keys:\n   * - `breadcrumbs.data`\n   * - `user`\n   * - `contexts`\n   * - `extra`\n   * @param event Event\n   * @returns Normalized event\n   */\n   _normalizeEvent(event, depth, maxBreadth) {\n    if (!event) {\n      return null;\n    }\n\n    var normalized = {\n      ...event,\n      ...(event.breadcrumbs && {\n        breadcrumbs: event.breadcrumbs.map(b => ({\n          ...b,\n          ...(b.data && {\n            data: normalize(b.data, depth, maxBreadth),\n          }),\n        })),\n      }),\n      ...(event.user && {\n        user: normalize(event.user, depth, maxBreadth),\n      }),\n      ...(event.contexts && {\n        contexts: normalize(event.contexts, depth, maxBreadth),\n      }),\n      ...(event.extra && {\n        extra: normalize(event.extra, depth, maxBreadth),\n      }),\n    };\n\n    // event.contexts.trace stores information about a Transaction. Similarly,\n    // event.spans[] stores information about child Spans. Given that a\n    // Transaction is conceptually a Span, normalization should apply to both\n    // Transactions and Spans consistently.\n    // For now the decision is to skip normalization of Transactions and Spans,\n    // so this block overwrites the normalized event to add back the original\n    // Transaction information prior to normalization.\n    if (event.contexts && event.contexts.trace && normalized.contexts) {\n      normalized.contexts.trace = event.contexts.trace;\n\n      // event.contexts.trace.data may contain circular/dangerous data so we need to normalize it\n      if (event.contexts.trace.data) {\n        normalized.contexts.trace.data = normalize(event.contexts.trace.data, depth, maxBreadth);\n      }\n    }\n\n    // event.spans[].data may contain circular/dangerous data so we need to normalize it\n    if (event.spans) {\n      normalized.spans = event.spans.map(span => {\n        // We cannot use the spread operator here because `toJSON` on `span` is non-enumerable\n        if (span.data) {\n          span.data = normalize(span.data, depth, maxBreadth);\n        }\n        return span;\n      });\n    }\n\n    return normalized;\n  }\n\n  /**\n   *  Enhances event using the client configuration.\n   *  It takes care of all \"static\" values like environment, release and `dist`,\n   *  as well as truncating overly long values.\n   * @param event event instance to be enhanced\n   */\n   _applyClientOptions(event) {\n    var options = this.getOptions();\n    const { environment, release, dist, maxValueLength = 250 } = options;\n\n    if (!('environment' in event)) {\n      event.environment = 'environment' in options ? environment : 'production';\n    }\n\n    if (event.release === undefined && release !== undefined) {\n      event.release = release;\n    }\n\n    if (event.dist === undefined && dist !== undefined) {\n      event.dist = dist;\n    }\n\n    if (event.message) {\n      event.message = truncate(event.message, maxValueLength);\n    }\n\n    var exception = event.exception && event.exception.values && event.exception.values[0];\n    if (exception && exception.value) {\n      exception.value = truncate(exception.value, maxValueLength);\n    }\n\n    var request = event.request;\n    if (request && request.url) {\n      request.url = truncate(request.url, maxValueLength);\n    }\n  }\n\n  /**\n   * This function adds all used integrations to the SDK info in the event.\n   * @param event The event that will be filled with all integrations.\n   */\n   _applyIntegrationsMetadata(event) {\n    var integrationsArray = Object.keys(this._integrations);\n    if (integrationsArray.length > 0) {\n      event.sdk = event.sdk || {};\n      event.sdk.integrations = [...(event.sdk.integrations || []), ...integrationsArray];\n    }\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n   _captureEvent(event, hint = {}, scope) {\n    return this._processEvent(event, hint, scope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n          // If something's gone wrong, log the error as a warning. If it's just us having used a `SentryError` for\n          // control flow, log just the message (no stack) as a log-level log.\n          var sentryError = reason ;\n          if (sentryError.logLevel === 'log') {\n            logger.log(sentryError.message);\n          } else {\n            logger.warn(sentryError);\n          }\n        }\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n   _processEvent(event, hint, scope) {\n    const { beforeSend, sampleRate } = this.getOptions();\n\n    if (!this._isEnabled()) {\n      return rejectedSyncPromise(new SentryError('SDK not enabled, will not capture event.', 'log'));\n    }\n\n    var isTransaction = event.type === 'transaction';\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    if (!isTransaction && typeof sampleRate === 'number' && Math.random() > sampleRate) {\n      this.recordDroppedEvent('sample_rate', 'error');\n      return rejectedSyncPromise(\n        new SentryError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n          'log',\n        ),\n      );\n    }\n\n    return this._prepareEvent(event, hint, scope)\n      .then(prepared => {\n        if (prepared === null) {\n          this.recordDroppedEvent('event_processor', event.type || 'error');\n          throw new SentryError('An event processor returned null, will not send event.', 'log');\n        }\n\n        var isInternalException = hint.data && (hint.data ).__sentry__ === true;\n        if (isInternalException || isTransaction || !beforeSend) {\n          return prepared;\n        }\n\n        var beforeSendResult = beforeSend(prepared, hint);\n        return _ensureBeforeSendRv(beforeSendResult);\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          this.recordDroppedEvent('before_send', event.type || 'error');\n          throw new SentryError('`beforeSend` returned `null`, will not send event.', 'log');\n        }\n\n        var session = scope && scope.getSession();\n        if (!isTransaction && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        // None of the Sentry built event processor will update transaction name,\n        // so if the transaction name has been changed by an event processor, we know\n        // it has to come from custom event processor added by a user\n        var transactionInfo = processedEvent.transaction_info;\n        if (isTransaction && transactionInfo && processedEvent.transaction !== event.transaction) {\n          var source = 'custom';\n          processedEvent.transaction_info = {\n            ...transactionInfo,\n            source,\n            changes: [\n              ...transactionInfo.changes,\n              {\n                source,\n                // use the same timestamp as the processed event.\n                timestamp: processedEvent.timestamp ,\n                propagations: transactionInfo.propagations,\n              },\n            ],\n          };\n        }\n\n        this.sendEvent(processedEvent, hint);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (reason instanceof SentryError) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason ,\n        });\n        throw new SentryError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n   _process(promise) {\n    this._numProcessing += 1;\n    void promise.then(\n      value => {\n        this._numProcessing -= 1;\n        return value;\n      },\n      reason => {\n        this._numProcessing -= 1;\n        return reason;\n      },\n    );\n  }\n\n  /**\n   * @inheritdoc\n   */\n   _sendEnvelope(envelope) {\n    if (this._transport && this._dsn) {\n      this._transport.send(envelope).then(null, reason => {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Error while sending event:', reason);\n      });\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Transport disabled');\n    }\n  }\n\n  /**\n   * Clears outcomes on this client and returns them.\n   */\n   _clearOutcomes() {\n    var outcomes = this._outcomes;\n    this._outcomes = {};\n    return Object.keys(outcomes).map(key => {\n      const [reason, category] = key.split(':') ;\n      return {\n        reason,\n        category,\n        quantity: outcomes[key],\n      };\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n\n}\n\n/**\n * Verifies that return value of configured `beforeSend` is of expected type.\n */\nfunction _ensureBeforeSendRv(rv) {\n  var nullErr = '`beforeSend` method has to return `null` or a valid event.';\n  if (isThenable(rv)) {\n    return rv.then(\n      event => {\n        if (!(isPlainObject(event) || event === null)) {\n          throw new SentryError(nullErr);\n        }\n        return event;\n      },\n      e => {\n        throw new SentryError(`beforeSend rejected with ${e}`);\n      },\n    );\n  } else if (!(isPlainObject(rv) || rv === null)) {\n    throw new SentryError(nullErr);\n  }\n  return rv;\n}\n\nexport { BaseClient };\n//# sourceMappingURL=baseclient.js.map\n","import { getCurrentHub } from '@sentry/hub';\nimport { logger } from '@sentry/utils';\n\n/** A class object that can instantiate Client objects. */\n\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instantiate.\n * @param options Options to pass to the client.\n */\nfunction initAndBind(\n  clientClass,\n  options,\n) {\n  if (options.debug === true) {\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n      logger.enable();\n    } else {\n      // use `console.warn` rather than `logger.warn` since by non-debug bundles have all `logger.x` statements stripped\n      // eslint-disable-next-line no-console\n      console.warn('[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.');\n    }\n  }\n  var hub = getCurrentHub();\n  var scope = hub.getScope();\n  if (scope) {\n    scope.update(options.initialScope);\n  }\n\n  var client = new clientClass(options);\n  hub.bindClient(client);\n}\n\nexport { initAndBind };\n//# sourceMappingURL=sdk.js.map\n","import { makePromiseBuffer, forEachEnvelopeItem, envelopeItemTypeToDataCategory, isRateLimited, resolvedSyncPromise, createEnvelope, serializeEnvelope, logger, updateRateLimits, SentryError } from '@sentry/utils';\n\nvar DEFAULT_TRANSPORT_BUFFER_SIZE = 30;\n\n/**\n * Creates an instance of a Sentry `Transport`\n *\n * @param options\n * @param makeRequest\n */\nfunction createTransport(\n  options,\n  makeRequest,\n  buffer = makePromiseBuffer(options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE),\n) {\n  let rateLimits = {};\n\n  var flush = (timeout) => buffer.drain(timeout);\n\n  function send(envelope) {\n    var filteredEnvelopeItems = [];\n\n    // Drop rate limited items from envelope\n    forEachEnvelopeItem(envelope, (item, type) => {\n      var envelopeItemDataCategory = envelopeItemTypeToDataCategory(type);\n      if (isRateLimited(rateLimits, envelopeItemDataCategory)) {\n        options.recordDroppedEvent('ratelimit_backoff', envelopeItemDataCategory);\n      } else {\n        filteredEnvelopeItems.push(item);\n      }\n    });\n\n    // Skip sending if envelope is empty after filtering out rate limited events\n    if (filteredEnvelopeItems.length === 0) {\n      return resolvedSyncPromise();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var filteredEnvelope = createEnvelope(envelope[0], filteredEnvelopeItems );\n\n    // Creates client report for each item in an envelope\n    var recordEnvelopeLoss = (reason) => {\n      forEachEnvelopeItem(filteredEnvelope, (_, type) => {\n        options.recordDroppedEvent(reason, envelopeItemTypeToDataCategory(type));\n      });\n    };\n\n    var requestTask = () =>\n      makeRequest({ body: serializeEnvelope(filteredEnvelope, options.textEncoder) }).then(\n        response => {\n          // We don't want to throw on NOK responses, but we want to at least log them\n          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);\n          }\n\n          rateLimits = updateRateLimits(rateLimits, response);\n        },\n        error => {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Failed while sending event:', error);\n          recordEnvelopeLoss('network_error');\n        },\n      );\n\n    return buffer.add(requestTask).then(\n      result => result,\n      error => {\n        if (error instanceof SentryError) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Skipped sending event because buffer is full.');\n          recordEnvelopeLoss('queue_overflow');\n          return resolvedSyncPromise();\n        } else {\n          throw error;\n        }\n      },\n    );\n  }\n\n  return {\n    send,\n    flush,\n  };\n}\n\nexport { DEFAULT_TRANSPORT_BUFFER_SIZE, createTransport };\n//# sourceMappingURL=base.js.map\n","var SDK_VERSION = '7.14.0';\n\nexport { SDK_VERSION };\n//# sourceMappingURL=version.js.map\n","import { getOriginalFunction } from '@sentry/utils';\n\nlet originalFunctionToString;\n\n/** Patch toString calls to return proper name for wrapped functions */\nclass FunctionToString  {constructor() { FunctionToString.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'FunctionToString';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = FunctionToString.id;}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    originalFunctionToString = Function.prototype.toString;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Function.prototype.toString = function ( ...args) {\n      var context = getOriginalFunction(this) || this;\n      return originalFunctionToString.apply(context, args);\n    };\n  }\n} FunctionToString.__initStatic();\n\nexport { FunctionToString };\n//# sourceMappingURL=functiontostring.js.map\n","import { logger, getEventDescription, isMatchingPattern } from '@sentry/utils';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nvar DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n\n/** Options for the InboundFilters integration */\n\n/** Inbound filters configurable by the user */\nclass InboundFilters  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'InboundFilters';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = InboundFilters.id;}\n\n   constructor(  _options = {}) {;this._options = _options;InboundFilters.prototype.__init.call(this);}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    var eventProcess = (event) => {\n      var hub = getCurrentHub();\n      if (hub) {\n        var self = hub.getIntegration(InboundFilters);\n        if (self) {\n          var client = hub.getClient();\n          var clientOptions = client ? client.getOptions() : {};\n          var options = _mergeOptions(self._options, clientOptions);\n          return _shouldDropEvent(event, options) ? null : event;\n        }\n      }\n      return event;\n    };\n\n    eventProcess.id = this.name;\n    addGlobalEventProcessor(eventProcess);\n  }\n} InboundFilters.__initStatic();\n\n/** JSDoc */\nfunction _mergeOptions(\n  internalOptions = {},\n  clientOptions = {},\n) {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...DEFAULT_IGNORE_ERRORS,\n    ],\n    ignoreInternal: internalOptions.ignoreInternal !== undefined ? internalOptions.ignoreInternal : true,\n  };\n}\n\n/** JSDoc */\nfunction _shouldDropEvent(event, options) {\n  if (options.ignoreInternal && _isSentryError(event)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n    return true;\n  }\n  if (_isIgnoredError(event, options.ignoreErrors)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isDeniedUrl(event, options.denyUrls)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  if (!_isAllowedUrl(event, options.allowUrls)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event, ignoreErrors) {\n  if (!ignoreErrors || !ignoreErrors.length) {\n    return false;\n  }\n\n  return _getPossibleEventMessages(event).some(message =>\n    ignoreErrors.some(pattern => isMatchingPattern(message, pattern)),\n  );\n}\n\nfunction _isDeniedUrl(event, denyUrls) {\n  // TODO: Use Glob instead?\n  if (!denyUrls || !denyUrls.length) {\n    return false;\n  }\n  var url = _getEventFilterUrl(event);\n  return !url ? false : denyUrls.some(pattern => isMatchingPattern(url, pattern));\n}\n\nfunction _isAllowedUrl(event, allowUrls) {\n  // TODO: Use Glob instead?\n  if (!allowUrls || !allowUrls.length) {\n    return true;\n  }\n  var url = _getEventFilterUrl(event);\n  return !url ? true : allowUrls.some(pattern => isMatchingPattern(url, pattern));\n}\n\nfunction _getPossibleEventMessages(event) {\n  if (event.message) {\n    return [event.message];\n  }\n  if (event.exception) {\n    try {\n      const { type = '', value = '' } = (event.exception.values && event.exception.values[0]) || {};\n      return [`${value}`, `${type}: ${value}`];\n    } catch (oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error(`Cannot extract message for event ${getEventDescription(event)}`);\n      return [];\n    }\n  }\n  return [];\n}\n\nfunction _isSentryError(event) {\n  try {\n    // @ts-ignore can't be a sentry error if undefined\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return event.exception.values[0].type === 'SentryError';\n  } catch (e) {\n    // ignore\n  }\n  return false;\n}\n\nfunction _getLastValidUrl(frames = []) {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    var frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event) {\n  try {\n    let frames;\n    try {\n      // @ts-ignore we only care about frames if the whole thing here is defined\n      frames = event.exception.values[0].stacktrace.frames;\n    } catch (e) {\n      // ignore\n    }\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch (oO) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n    return null;\n  }\n}\n\nexport { InboundFilters, _mergeOptions, _shouldDropEvent };\n//# sourceMappingURL=inboundfilters.js.map\n","import { getCurrentHub } from '@sentry/core';\nimport { isEvent, extractExceptionKeysForMessage, normalizeToSize, addExceptionMechanism, resolvedSyncPromise, isErrorEvent, isDOMError, isDOMException, addExceptionTypeValue, isError, isPlainObject } from '@sentry/utils';\n\n/**\n * This function creates an exception from a JavaScript Error\n */\nfunction exceptionFromError(stackParser, ex) {\n  // Get the frames first since Opera can lose the stack if we touch anything else first\n  var frames = parseStackFrames(stackParser, ex);\n\n  var exception = {\n    type: ex && ex.name,\n    value: extractMessage(ex),\n  };\n\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\n/**\n * @hidden\n */\nfunction eventFromPlainObject(\n  stackParser,\n  exception,\n  syntheticException,\n  isUnhandledRejection,\n) {\n  var hub = getCurrentHub();\n  var client = hub.getClient();\n  var normalizeDepth = client && client.getOptions().normalizeDepth;\n\n  var event = {\n    exception: {\n      values: [\n        {\n          type: isEvent(exception) ? exception.constructor.name : isUnhandledRejection ? 'UnhandledRejection' : 'Error',\n          value: `Non-Error ${\n            isUnhandledRejection ? 'promise rejection' : 'exception'\n          } captured with keys: ${extractExceptionKeysForMessage(exception)}`,\n        },\n      ],\n    },\n    extra: {\n      __serialized__: normalizeToSize(exception, normalizeDepth),\n    },\n  };\n\n  if (syntheticException) {\n    var frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      // event.exception.values[0] has been set above\n      (event.exception ).values[0].stacktrace = { frames };\n    }\n  }\n\n  return event;\n}\n\n/**\n * @hidden\n */\nfunction eventFromError(stackParser, ex) {\n  return {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n}\n\n/** Parses stack frames from an error */\nfunction parseStackFrames(\n  stackParser,\n  ex,\n) {\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  var stacktrace = ex.stacktrace || ex.stack || '';\n\n  var popSize = getPopSize(ex);\n\n  try {\n    return stackParser(stacktrace, popSize);\n  } catch (e) {\n    // no-empty\n  }\n\n  return [];\n}\n\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nvar reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\nfunction getPopSize(ex) {\n  if (ex) {\n    if (typeof ex.framesToPop === 'number') {\n      return ex.framesToPop;\n    }\n\n    if (reactMinifiedRegexp.test(ex.message)) {\n      return 1;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nfunction extractMessage(ex) {\n  var message = ex && ex.message;\n  if (!message) {\n    return 'No error message';\n  }\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n  return message;\n}\n\n/**\n * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.\n * @hidden\n */\nfunction eventFromException(\n  stackParser,\n  exception,\n  hint,\n  attachStacktrace,\n) {\n  var syntheticException = (hint && hint.syntheticException) || undefined;\n  var event = eventFromUnknownInput(stackParser, exception, syntheticException, attachStacktrace);\n  addExceptionMechanism(event); // defaults to { type: 'generic', handled: true }\n  event.level = 'error';\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nfunction eventFromMessage(\n  stackParser,\n  message,\n  // eslint-disable-next-line deprecation/deprecation\n  level = 'info',\n  hint,\n  attachStacktrace,\n) {\n  var syntheticException = (hint && hint.syntheticException) || undefined;\n  var event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n  event.level = level;\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * @hidden\n */\nfunction eventFromUnknownInput(\n  stackParser,\n  exception,\n  syntheticException,\n  attachStacktrace,\n  isUnhandledRejection,\n) {\n  let event;\n\n  if (isErrorEvent(exception ) && (exception ).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    var errorEvent = exception ;\n    return eventFromError(stackParser, errorEvent.error );\n  }\n\n  // If it is a `DOMError` (which is a legacy API, but still supported in some browsers) then we just extract the name\n  // and message, as it doesn't provide anything else. According to the spec, all `DOMExceptions` should also be\n  // `Error`s, but that's not the case in IE11, so in that case we treat it the same as we do a `DOMError`.\n  //\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n  // https://webidl.spec.whatwg.org/#es-DOMException-specialness\n  if (isDOMError(exception ) || isDOMException(exception )) {\n    var domException = exception ;\n\n    if ('stack' in (exception )) {\n      event = eventFromError(stackParser, exception );\n    } else {\n      var name = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n      var message = domException.message ? `${name}: ${domException.message}` : name;\n      event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n      addExceptionTypeValue(event, message);\n    }\n    if ('code' in domException) {\n      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };\n    }\n\n    return event;\n  }\n  if (isError(exception)) {\n    // we have a real Error object, do nothing\n    return eventFromError(stackParser, exception);\n  }\n  if (isPlainObject(exception) || isEvent(exception)) {\n    // If it's a plain object or an instance of `Event` (the built-in JS kind, not this SDK's `Event` type), serialize\n    // it manually. This will allow us to group events based on top-level keys which is much better than creating a new\n    // group on any key/value change.\n    var objectException = exception ;\n    event = eventFromPlainObject(stackParser, objectException, syntheticException, isUnhandledRejection);\n    addExceptionMechanism(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(stackParser, exception , syntheticException, attachStacktrace);\n  addExceptionTypeValue(event, `${exception}`, undefined);\n  addExceptionMechanism(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\n/**\n * @hidden\n */\nfunction eventFromString(\n  stackParser,\n  input,\n  syntheticException,\n  attachStacktrace,\n) {\n  var event = {\n    message: input,\n  };\n\n  if (attachStacktrace && syntheticException) {\n    var frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [{ value: input, stacktrace: { frames } }],\n      };\n    }\n  }\n\n  return event;\n}\n\nexport { eventFromError, eventFromException, eventFromMessage, eventFromPlainObject, eventFromString, eventFromUnknownInput, exceptionFromError, parseStackFrames };\n//# sourceMappingURL=eventbuilder.js.map\n","import { getCurrentHub } from '@sentry/core';\nimport { addInstrumentationHandler, htmlTreeAsString, severityLevelFromString, safeJoin, getGlobalObject, parseUrl } from '@sentry/utils';\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n\n/** JSDoc */\n\nvar BREADCRUMB_INTEGRATION_ID = 'Breadcrumbs';\n\n/**\n * Default Breadcrumbs instrumentations\n * TODO: Deprecated - with v6, this will be renamed to `Instrument`\n */\nclass Breadcrumbs  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = BREADCRUMB_INTEGRATION_ID;}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Breadcrumbs.id;}\n\n  /**\n   * Options of the breadcrumbs integration.\n   */\n  // This field is public, because we use it in the browser client to check if the `sentry` option is enabled.\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options) {;Breadcrumbs.prototype.__init.call(this);\n    this.options = {\n      console: true,\n      dom: true,\n      fetch: true,\n      history: true,\n      sentry: true,\n      xhr: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Instrument browser built-ins w/ breadcrumb capturing\n   *  - Console API\n   *  - DOM API (click/typing)\n   *  - XMLHttpRequest API\n   *  - Fetch API\n   *  - History API\n   */\n   setupOnce() {\n    if (this.options.console) {\n      addInstrumentationHandler('console', _consoleBreadcrumb);\n    }\n    if (this.options.dom) {\n      addInstrumentationHandler('dom', _domBreadcrumb(this.options.dom));\n    }\n    if (this.options.xhr) {\n      addInstrumentationHandler('xhr', _xhrBreadcrumb);\n    }\n    if (this.options.fetch) {\n      addInstrumentationHandler('fetch', _fetchBreadcrumb);\n    }\n    if (this.options.history) {\n      addInstrumentationHandler('history', _historyBreadcrumb);\n    }\n  }\n} Breadcrumbs.__initStatic();\n\n/**\n * A HOC that creaes a function that creates breadcrumbs from DOM API calls.\n * This is a HOC so that we get access to dom options in the closure.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _domBreadcrumb(dom) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function _innerDomBreadcrumb(handlerData) {\n    let target;\n    let keyAttrs = typeof dom === 'object' ? dom.serializeAttribute : undefined;\n\n    if (typeof keyAttrs === 'string') {\n      keyAttrs = [keyAttrs];\n    }\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      target = handlerData.event.target\n        ? htmlTreeAsString(handlerData.event.target , keyAttrs)\n        : htmlTreeAsString(handlerData.event , keyAttrs);\n    } catch (e) {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    getCurrentHub().addBreadcrumb(\n      {\n        category: `ui.${handlerData.name}`,\n        message: target,\n      },\n      {\n        event: handlerData.event,\n        name: handlerData.name,\n        global: handlerData.global,\n      },\n    );\n  }\n\n  return _innerDomBreadcrumb;\n}\n\n/**\n * Creates breadcrumbs from console API calls\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _consoleBreadcrumb(handlerData) {\n  var breadcrumb = {\n    category: 'console',\n    data: {\n      arguments: handlerData.args,\n      logger: 'console',\n    },\n    level: severityLevelFromString(handlerData.level),\n    message: safeJoin(handlerData.args, ' '),\n  };\n\n  if (handlerData.level === 'assert') {\n    if (handlerData.args[0] === false) {\n      breadcrumb.message = `Assertion failed: ${safeJoin(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n      breadcrumb.data.arguments = handlerData.args.slice(1);\n    } else {\n      // Don't capture a breadcrumb for passed assertions\n      return;\n    }\n  }\n\n  getCurrentHub().addBreadcrumb(breadcrumb, {\n    input: handlerData.args,\n    level: handlerData.level,\n  });\n}\n\n/**\n * Creates breadcrumbs from XHR API calls\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _xhrBreadcrumb(handlerData) {\n  if (handlerData.endTimestamp) {\n    // We only capture complete, non-sentry requests\n    if (handlerData.xhr.__sentry_own_request__) {\n      return;\n    }\n\n    const { method, url, status_code, body } = handlerData.xhr.__sentry_xhr__ || {};\n\n    getCurrentHub().addBreadcrumb(\n      {\n        category: 'xhr',\n        data: {\n          method,\n          url,\n          status_code,\n        },\n        type: 'http',\n      },\n      {\n        xhr: handlerData.xhr,\n        input: body,\n      },\n    );\n\n    return;\n  }\n}\n\n/**\n * Creates breadcrumbs from fetch API calls\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _fetchBreadcrumb(handlerData) {\n  // We only capture complete fetch requests\n  if (!handlerData.endTimestamp) {\n    return;\n  }\n\n  if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n    // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n    return;\n  }\n\n  if (handlerData.error) {\n    getCurrentHub().addBreadcrumb(\n      {\n        category: 'fetch',\n        data: handlerData.fetchData,\n        level: 'error',\n        type: 'http',\n      },\n      {\n        data: handlerData.error,\n        input: handlerData.args,\n      },\n    );\n  } else {\n    getCurrentHub().addBreadcrumb(\n      {\n        category: 'fetch',\n        data: {\n          ...handlerData.fetchData,\n          status_code: handlerData.response.status,\n        },\n        type: 'http',\n      },\n      {\n        input: handlerData.args,\n        response: handlerData.response,\n      },\n    );\n  }\n}\n\n/**\n * Creates breadcrumbs from history API calls\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _historyBreadcrumb(handlerData) {\n  var global = getGlobalObject();\n  let from = handlerData.from;\n  let to = handlerData.to;\n  var parsedLoc = parseUrl(global.location.href);\n  let parsedFrom = parseUrl(from);\n  var parsedTo = parseUrl(to);\n\n  // Initial pushState doesn't provide `from` information\n  if (!parsedFrom.path) {\n    parsedFrom = parsedLoc;\n  }\n\n  // Use only the path component of the URL if the URL matches the current\n  // document (almost all the time when using pushState)\n  if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n    to = parsedTo.relative;\n  }\n  if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n    from = parsedFrom.relative;\n  }\n\n  getCurrentHub().addBreadcrumb({\n    category: 'navigation',\n    data: {\n      from,\n      to,\n    },\n  });\n}\n\nexport { BREADCRUMB_INTEGRATION_ID, Breadcrumbs };\n//# sourceMappingURL=breadcrumbs.js.map\n","import { BaseClient, SDK_VERSION, getCurrentHub, getEnvelopeEndpointWithUrlEncodedAuth } from '@sentry/core';\nimport { getGlobalObject, getEventDescription, logger, createClientReportEnvelope, dsnToString, serializeEnvelope } from '@sentry/utils';\nimport { eventFromException, eventFromMessage } from './eventbuilder.js';\nimport { BREADCRUMB_INTEGRATION_ID } from './integrations/breadcrumbs.js';\n\nvar globalObject = getGlobalObject();\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nclass BrowserClient extends BaseClient {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n   constructor(options) {\n    options._metadata = options._metadata || {};\n    options._metadata.sdk = options._metadata.sdk || {\n      name: 'sentry.javascript.browser',\n      packages: [\n        {\n          name: 'npm:@sentry/browser',\n          version: SDK_VERSION,\n        },\n      ],\n      version: SDK_VERSION,\n    };\n\n    super(options);\n\n    if (options.sendClientReports && globalObject.document) {\n      globalObject.document.addEventListener('visibilitychange', () => {\n        if (globalObject.document.visibilityState === 'hidden') {\n          this._flushOutcomes();\n        }\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromException(exception, hint) {\n    return eventFromException(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level = 'info',\n    hint,\n  ) {\n    return eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendEvent(event, hint) {\n    // We only want to add the sentry event breadcrumb when the user has the breadcrumb integration installed and\n    // activated its `sentry` option.\n    // We also do not want to use the `Breadcrumbs` class here directly, because we do not want it to be included in\n    // bundles, if it is not used by the SDK.\n    // This all sadly is a bit ugly, but we currently don't have a \"pre-send\" hook on the integrations so we do it this\n    // way for now.\n    var breadcrumbIntegration = this.getIntegrationById(BREADCRUMB_INTEGRATION_ID) ;\n    if (\n      breadcrumbIntegration &&\n      // We check for definedness of `options`, even though it is not strictly necessary, because that access to\n      // `.sentry` below does not throw, in case users provided their own integration with id \"Breadcrumbs\" that does\n      // not have an`options` field\n      breadcrumbIntegration.options &&\n      breadcrumbIntegration.options.sentry\n    ) {\n      getCurrentHub().addBreadcrumb(\n        {\n          category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n          event_id: event.event_id,\n          level: event.level,\n          message: getEventDescription(event),\n        },\n        {\n          event,\n        },\n      );\n    }\n\n    super.sendEvent(event, hint);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   _prepareEvent(event, hint, scope) {\n    event.platform = event.platform || 'javascript';\n    return super._prepareEvent(event, hint, scope);\n  }\n\n  /**\n   * Sends client reports as an envelope.\n   */\n   _flushOutcomes() {\n    var outcomes = this._clearOutcomes();\n\n    if (outcomes.length === 0) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('No outcomes to send');\n      return;\n    }\n\n    if (!this._dsn) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('No dsn provided, will not send outcomes');\n      return;\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('Sending outcomes:', outcomes);\n\n    var url = getEnvelopeEndpointWithUrlEncodedAuth(this._dsn, this._options);\n    var envelope = createClientReportEnvelope(outcomes, this._options.tunnel && dsnToString(this._dsn));\n\n    try {\n      var global = getGlobalObject();\n      var isRealNavigator = Object.prototype.toString.call(global && global.navigator) === '[object Navigator]';\n      var hasSendBeacon = isRealNavigator && typeof global.navigator.sendBeacon === 'function';\n      // Make sure beacon is not used if user configures custom transport options\n      if (hasSendBeacon && !this._options.transportOptions) {\n        // Prevent illegal invocations - https://xgwang.me/posts/you-may-not-know-beacon/#it-may-throw-error%2C-be-sure-to-catch\n        var sendBeacon = global.navigator.sendBeacon.bind(global.navigator);\n        sendBeacon(url, serializeEnvelope(envelope));\n      } else {\n        // If beacon is not supported or if they are using the tunnel option\n        // use our regular transport to send client reports to Sentry.\n        this._sendEnvelope(envelope);\n      }\n    } catch (e) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error(e);\n    }\n  }\n}\n\nexport { BrowserClient };\n//# sourceMappingURL=client.js.map\n","import { getGlobalObject, isNativeFetch, logger } from '@sentry/utils';\n\nvar global = getGlobalObject();\nlet cachedFetchImpl;\n\n/**\n * A special usecase for incorrectly wrapped Fetch APIs in conjunction with ad-blockers.\n * Whenever someone wraps the Fetch API and returns the wrong promise chain,\n * this chain becomes orphaned and there is no possible way to capture it's rejections\n * other than allowing it bubble up to this very handler. eg.\n *\n * var f = window.fetch;\n * window.fetch = function () {\n *   var p = f.apply(this, arguments);\n *\n *   p.then(function() {\n *     console.log('hi.');\n *   });\n *\n *   return p;\n * }\n *\n * `p.then(function () { ... })` is producing a completely separate promise chain,\n * however, what's returned is `p` - the result of original `fetch` call.\n *\n * This mean, that whenever we use the Fetch API to send our own requests, _and_\n * some ad-blocker blocks it, this orphaned chain will _always_ reject,\n * effectively causing another event to be captured.\n * This makes a whole process become an infinite loop, which we need to somehow\n * deal with, and break it in one way or another.\n *\n * To deal with this issue, we are making sure that we _always_ use the real\n * browser Fetch API, instead of relying on what `window.fetch` exposes.\n * The only downside to this would be missing our own requests as breadcrumbs,\n * but because we are already not doing this, it should be just fine.\n *\n * Possible failed fetch error messages per-browser:\n *\n * Chrome:  Failed to fetch\n * Edge:    Failed to Fetch\n * Firefox: NetworkError when attempting to fetch resource\n * Safari:  resource blocked by content blocker\n */\nfunction getNativeFetchImplementation() {\n  if (cachedFetchImpl) {\n    return cachedFetchImpl;\n  }\n\n  /* eslint-disable @typescript-eslint/unbound-method */\n\n  // Fast path to avoid DOM I/O\n  if (isNativeFetch(global.fetch)) {\n    return (cachedFetchImpl = global.fetch.bind(global));\n  }\n\n  var document = global.document;\n  let fetchImpl = global.fetch;\n  // eslint-disable-next-line deprecation/deprecation\n  if (document && typeof document.createElement === 'function') {\n    try {\n      var sandbox = document.createElement('iframe');\n      sandbox.hidden = true;\n      document.head.appendChild(sandbox);\n      var contentWindow = sandbox.contentWindow;\n      if (contentWindow && contentWindow.fetch) {\n        fetchImpl = contentWindow.fetch;\n      }\n      document.head.removeChild(sandbox);\n    } catch (e) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', e);\n    }\n  }\n\n  return (cachedFetchImpl = fetchImpl.bind(global));\n  /* eslint-enable @typescript-eslint/unbound-method */\n}\n\nexport { getNativeFetchImplementation };\n//# sourceMappingURL=utils.js.map\n","import { createTransport } from '@sentry/core';\nimport { getNativeFetchImplementation } from './utils.js';\n\n/**\n * Creates a Transport that uses the Fetch API to send events to Sentry.\n */\nfunction makeFetchTransport(\n  options,\n  nativeFetch = getNativeFetchImplementation(),\n) {\n  function makeRequest(request) {\n    var requestOptions = {\n      body: request.body,\n      method: 'POST',\n      referrerPolicy: 'origin',\n      headers: options.headers,\n      // Outgoing requests are usually cancelled when navigating to a different page, causing a \"TypeError: Failed to\n      // fetch\" error and sending a \"network_error\" client-outcome - in Chrome, the request status shows \"(cancelled)\".\n      // The `keepalive` flag keeps outgoing requests alive, even when switching pages. We want this since we're\n      // frequently sending events right before the user is switching pages (eg. whenfinishing navigation transactions).\n      // Gotchas:\n      // - `keepalive` isn't supported by Firefox\n      // - As per spec (https://fetch.spec.whatwg.org/#http-network-or-cache-fetch), a request with `keepalive: true`\n      //   and a content length of > 64 kibibytes returns a network error. We will therefore only activate the flag when\n      //   we're below that limit.\n      keepalive: request.body.length <= 65536,\n      ...options.fetchOptions,\n    };\n\n    return nativeFetch(options.url, requestOptions).then(response => ({\n      statusCode: response.status,\n      headers: {\n        'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n        'retry-after': response.headers.get('Retry-After'),\n      },\n    }));\n  }\n\n  return createTransport(options, makeRequest);\n}\n\nexport { makeFetchTransport };\n//# sourceMappingURL=fetch.js.map\n","import { createTransport } from '@sentry/core';\nimport { SyncPromise } from '@sentry/utils';\n\n/**\n * The DONE ready state for XmlHttpRequest\n *\n * Defining it here as a constant b/c XMLHttpRequest.DONE is not always defined\n * (e.g. during testing, it is `undefined`)\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState}\n */\nvar XHR_READYSTATE_DONE = 4;\n\n/**\n * Creates a Transport that uses the XMLHttpRequest API to send events to Sentry.\n */\nfunction makeXHRTransport(options) {\n  function makeRequest(request) {\n    return new SyncPromise((resolve, reject) => {\n      var xhr = new XMLHttpRequest();\n\n      xhr.onerror = reject;\n\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === XHR_READYSTATE_DONE) {\n          resolve({\n            statusCode: xhr.status,\n            headers: {\n              'x-sentry-rate-limits': xhr.getResponseHeader('X-Sentry-Rate-Limits'),\n              'retry-after': xhr.getResponseHeader('Retry-After'),\n            },\n          });\n        }\n      };\n\n      xhr.open('POST', options.url);\n\n      for (var header in options.headers) {\n        if (Object.prototype.hasOwnProperty.call(options.headers, header)) {\n          xhr.setRequestHeader(header, options.headers[header]);\n        }\n      }\n\n      xhr.send(request.body);\n    });\n  }\n\n  return createTransport(options, makeRequest);\n}\n\nexport { makeXHRTransport };\n//# sourceMappingURL=xhr.js.map\n","import { createStackParser } from '@sentry/utils';\n\n// global reference to slice\nvar UNKNOWN_FUNCTION = '?';\n\nvar OPERA10_PRIORITY = 10;\nvar OPERA11_PRIORITY = 20;\nvar CHROME_PRIORITY = 30;\nvar WINJS_PRIORITY = 40;\nvar GECKO_PRIORITY = 50;\n\nfunction createFrame(filename, func, lineno, colno) {\n  var frame = {\n    filename,\n    function: func,\n    // All browser frames are considered in_app\n    in_app: true,\n  };\n\n  if (lineno !== undefined) {\n    frame.lineno = lineno;\n  }\n\n  if (colno !== undefined) {\n    frame.colno = colno;\n  }\n\n  return frame;\n}\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nvar chromeRegex =\n  /^\\s*at (?:(.*\\).*?|.*?) ?\\((?:address at )?)?((?:file|https?|blob|chrome-extension|address|native|eval|webpack|<anonymous>|[-a-z]+:|.*bundle|\\/)?.*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nvar chromeEvalRegex = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\nvar chrome = line => {\n  var parts = chromeRegex.exec(line);\n\n  if (parts) {\n    var isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n    if (isEval) {\n      var subMatch = chromeEvalRegex.exec(parts[2]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = subMatch[1]; // url\n        parts[3] = subMatch[2]; // line\n        parts[4] = subMatch[3]; // column\n      }\n    }\n\n    // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now\n    // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)\n    const [func, filename] = extractSafariExtensionDetails(parts[1] || UNKNOWN_FUNCTION, parts[2]);\n\n    return createFrame(filename, func, parts[3] ? +parts[3] : undefined, parts[4] ? +parts[4] : undefined);\n  }\n\n  return;\n};\n\nvar chromeStackLineParser = [CHROME_PRIORITY, chrome];\n\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nvar geckoREgex =\n  /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension|safari-extension|safari-web-extension|capacitor)?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nvar geckoEvalRegex = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nvar gecko = line => {\n  var parts = geckoREgex.exec(line);\n\n  if (parts) {\n    var isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n    if (isEval) {\n      var subMatch = geckoEvalRegex.exec(parts[3]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || 'eval';\n        parts[3] = subMatch[1];\n        parts[4] = subMatch[2];\n        parts[5] = ''; // no column when eval\n      }\n    }\n\n    let filename = parts[3];\n    let func = parts[1] || UNKNOWN_FUNCTION;\n    [func, filename] = extractSafariExtensionDetails(func, filename);\n\n    return createFrame(filename, func, parts[4] ? +parts[4] : undefined, parts[5] ? +parts[5] : undefined);\n  }\n\n  return;\n};\n\nvar geckoStackLineParser = [GECKO_PRIORITY, gecko];\n\nvar winjsRegex =\n  /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nvar winjs = line => {\n  var parts = winjsRegex.exec(line);\n\n  return parts\n    ? createFrame(parts[2], parts[1] || UNKNOWN_FUNCTION, +parts[3], parts[4] ? +parts[4] : undefined)\n    : undefined;\n};\n\nvar winjsStackLineParser = [WINJS_PRIORITY, winjs];\n\nvar opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n\nvar opera10 = line => {\n  var parts = opera10Regex.exec(line);\n  return parts ? createFrame(parts[2], parts[3] || UNKNOWN_FUNCTION, +parts[1]) : undefined;\n};\n\nvar opera10StackLineParser = [OPERA10_PRIORITY, opera10];\n\nvar opera11Regex =\n  / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\(.*\\))? in (.*):\\s*$/i;\n\nvar opera11 = line => {\n  var parts = opera11Regex.exec(line);\n  return parts ? createFrame(parts[5], parts[3] || parts[4] || UNKNOWN_FUNCTION, +parts[1], +parts[2]) : undefined;\n};\n\nvar opera11StackLineParser = [OPERA11_PRIORITY, opera11];\n\nvar defaultStackLineParsers = [chromeStackLineParser, geckoStackLineParser, winjsStackLineParser];\n\nvar defaultStackParser = createStackParser(...defaultStackLineParsers);\n\n/**\n * Safari web extensions, starting version unknown, can produce \"frames-only\" stacktraces.\n * What it means, is that instead of format like:\n *\n * Error: wat\n *   at function@url:row:col\n *   at function@url:row:col\n *   at function@url:row:col\n *\n * it produces something like:\n *\n *   function@url:row:col\n *   function@url:row:col\n *   function@url:row:col\n *\n * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.\n * This function is extracted so that we can use it in both places without duplicating the logic.\n * Unfortunately \"just\" changing RegExp is too complicated now and making it pass all tests\n * and fix this case seems like an impossible, or at least way too time-consuming task.\n */\nvar extractSafariExtensionDetails = (func, filename) => {\n  var isSafariExtension = func.indexOf('safari-extension') !== -1;\n  var isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;\n\n  return isSafariExtension || isSafariWebExtension\n    ? [\n        func.indexOf('@') !== -1 ? func.split('@')[0] : UNKNOWN_FUNCTION,\n        isSafariExtension ? `safari-extension:${filename}` : `safari-web-extension:${filename}`,\n      ]\n    : [func, filename];\n};\n\nexport { chromeStackLineParser, defaultStackLineParsers, defaultStackParser, geckoStackLineParser, opera10StackLineParser, opera11StackLineParser, winjsStackLineParser };\n//# sourceMappingURL=stack-parsers.js.map\n","import { withScope, captureException } from '@sentry/core';\nimport { getOriginalFunction, addExceptionTypeValue, addExceptionMechanism, markFunctionWrapped, addNonEnumerableProperty } from '@sentry/utils';\n\nlet ignoreOnError = 0;\n\n/**\n * @hidden\n */\nfunction shouldIgnoreOnError() {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nfunction ignoreNextOnError() {\n  // onerror should trigger before setTimeout\n  ignoreOnError += 1;\n  setTimeout(() => {\n    ignoreOnError -= 1;\n  });\n}\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap. It is generally safe to pass an unbound function, because the returned wrapper always\n * has a correct `this` context.\n * @returns The wrapped function.\n * @hidden\n */\nfunction wrap(\n  fn,\n  options\n\n = {},\n  before,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n  // for future readers what this does is wrap a function and then create\n  // a bi-directional wrapping between them.\n  //\n  // example: wrapped = wrap(original);\n  //  original.__sentry_wrapped__ -> wrapped\n  //  wrapped.__sentry_original__ -> original\n\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // if we're dealing with a function that was previously wrapped, return\n    // the original wrapper.\n    var wrapper = fn.__sentry_wrapped__;\n    if (wrapper) {\n      return wrapper;\n    }\n\n    // We don't wanna wrap it twice\n    if (getOriginalFunction(fn)) {\n      return fn;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  /* eslint-disable prefer-rest-params */\n  // It is important that `sentryWrapped` is not an arrow function to preserve the context of `this`\n  var sentryWrapped = function () {\n    var args = Array.prototype.slice.call(arguments);\n\n    try {\n      if (before && typeof before === 'function') {\n        before.apply(this, arguments);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      var wrappedArguments = args.map((arg) => wrap(arg, options));\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope((scope) => {\n        scope.addEventProcessor((event) => {\n          if (options.mechanism) {\n            addExceptionTypeValue(event, undefined, undefined);\n            addExceptionMechanism(event, options.mechanism);\n          }\n\n          event.extra = {\n            ...event.extra,\n            arguments: args,\n          };\n\n          return event;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  };\n  /* eslint-enable prefer-rest-params */\n\n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (var property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} // eslint-disable-line no-empty\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  markFunctionWrapped(sentryWrapped, fn);\n\n  addNonEnumerableProperty(fn, '__sentry_wrapped__', sentryWrapped);\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    var descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name') ;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get() {\n          return fn.name;\n        },\n      });\n    }\n    // eslint-disable-next-line no-empty\n  } catch (_oO) {}\n\n  return sentryWrapped;\n}\n\n/**\n * All properties the report dialog supports\n */\n\nexport { ignoreNextOnError, shouldIgnoreOnError, wrap };\n//# sourceMappingURL=helpers.js.map\n","import { getCurrentHub } from '@sentry/core';\nimport { addInstrumentationHandler, isString, isPrimitive, isErrorEvent, getLocationHref, logger, addExceptionMechanism } from '@sentry/utils';\nimport { eventFromUnknownInput } from '../eventbuilder.js';\nimport { shouldIgnoreOnError } from '../helpers.js';\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n\n/** Global handlers */\nclass GlobalHandlers  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'GlobalHandlers';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = GlobalHandlers.id;}\n\n  /** JSDoc */\n\n  /**\n   * Stores references functions to installing handlers. Will set to undefined\n   * after they have been run so that they are not used twice.\n   */\n   __init2() {this._installFunc = {\n    onerror: _installGlobalOnErrorHandler,\n    onunhandledrejection: _installGlobalOnUnhandledRejectionHandler,\n  };}\n\n  /** JSDoc */\n   constructor(options) {;GlobalHandlers.prototype.__init.call(this);GlobalHandlers.prototype.__init2.call(this);\n    this._options = {\n      onerror: true,\n      onunhandledrejection: true,\n      ...options,\n    };\n  }\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    Error.stackTraceLimit = 50;\n    var options = this._options;\n\n    // We can disable guard-for-in as we construct the options object above + do checks against\n    // `this._installFunc` for the property.\n    // eslint-disable-next-line guard-for-in\n    for (var key in options) {\n      var installFunc = this._installFunc[key ];\n      if (installFunc && options[key ]) {\n        globalHandlerLog(key);\n        installFunc();\n        this._installFunc[key ] = undefined;\n      }\n    }\n  }\n} GlobalHandlers.__initStatic();\n\n/** JSDoc */\nfunction _installGlobalOnErrorHandler() {\n  addInstrumentationHandler(\n    'error',\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (data) => {\n      const [hub, stackParser, attachStacktrace] = getHubAndOptions();\n      if (!hub.getIntegration(GlobalHandlers)) {\n        return;\n      }\n      const { msg, url, line, column, error } = data;\n      if (shouldIgnoreOnError() || (error && error.__sentry_own_request__)) {\n        return;\n      }\n\n      var event =\n        error === undefined && isString(msg)\n          ? _eventFromIncompleteOnError(msg, url, line, column)\n          : _enhanceEventWithInitialFrame(\n              eventFromUnknownInput(stackParser, error || msg, undefined, attachStacktrace, false),\n              url,\n              line,\n              column,\n            );\n\n      event.level = 'error';\n\n      addMechanismAndCapture(hub, error, event, 'onerror');\n    },\n  );\n}\n\n/** JSDoc */\nfunction _installGlobalOnUnhandledRejectionHandler() {\n  addInstrumentationHandler(\n    'unhandledrejection',\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (e) => {\n      const [hub, stackParser, attachStacktrace] = getHubAndOptions();\n      if (!hub.getIntegration(GlobalHandlers)) {\n        return;\n      }\n      let error = e;\n\n      // dig the object of the rejection out of known event types\n      try {\n        // PromiseRejectionEvents store the object of the rejection under 'reason'\n        // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n        if ('reason' in e) {\n          error = e.reason;\n        }\n        // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n        // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n        // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n        // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n        // https://github.com/getsentry/sentry-javascript/issues/2380\n        else if ('detail' in e && 'reason' in e.detail) {\n          error = e.detail.reason;\n        }\n      } catch (_oO) {\n        // no-empty\n      }\n\n      if (shouldIgnoreOnError() || (error && error.__sentry_own_request__)) {\n        return true;\n      }\n\n      var event = isPrimitive(error)\n        ? _eventFromRejectionWithPrimitive(error)\n        : eventFromUnknownInput(stackParser, error, undefined, attachStacktrace, true);\n\n      event.level = 'error';\n\n      addMechanismAndCapture(hub, error, event, 'onunhandledrejection');\n      return;\n    },\n  );\n}\n\n/**\n * Create an event from a promise rejection where the `reason` is a primitive.\n *\n * @param reason: The `reason` property of the promise rejection\n * @returns An Event object with an appropriate `exception` value\n */\nfunction _eventFromRejectionWithPrimitive(reason) {\n  return {\n    exception: {\n      values: [\n        {\n          type: 'UnhandledRejection',\n          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n          value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n        },\n      ],\n    },\n  };\n}\n\n/**\n * This function creates a stack from an old, error-less onerror handler.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _eventFromIncompleteOnError(msg, url, line, column) {\n  var ERROR_TYPES_RE =\n    /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n\n  // If 'message' is ErrorEvent, get real message from inside\n  let message = isErrorEvent(msg) ? msg.message : msg;\n  let name = 'Error';\n\n  var groups = message.match(ERROR_TYPES_RE);\n  if (groups) {\n    name = groups[1];\n    message = groups[2];\n  }\n\n  var event = {\n    exception: {\n      values: [\n        {\n          type: name,\n          value: message,\n        },\n      ],\n    },\n  };\n\n  return _enhanceEventWithInitialFrame(event, url, line, column);\n}\n\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _enhanceEventWithInitialFrame(event, url, line, column) {\n  // event.exception\n  var e = (event.exception = event.exception || {});\n  // event.exception.values\n  var ev = (e.values = e.values || []);\n  // event.exception.values[0]\n  var ev0 = (ev[0] = ev[0] || {});\n  // event.exception.values[0].stacktrace\n  var ev0s = (ev0.stacktrace = ev0.stacktrace || {});\n  // event.exception.values[0].stacktrace.frames\n  var ev0sf = (ev0s.frames = ev0s.frames || []);\n\n  var colno = isNaN(parseInt(column, 10)) ? undefined : column;\n  var lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n  var filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n  // event.exception.values[0].stacktrace.frames\n  if (ev0sf.length === 0) {\n    ev0sf.push({\n      colno,\n      filename,\n      function: '?',\n      in_app: true,\n      lineno,\n    });\n  }\n\n  return event;\n}\n\nfunction globalHandlerLog(type) {\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`Global Handler attached: ${type}`);\n}\n\nfunction addMechanismAndCapture(hub, error, event, type) {\n  addExceptionMechanism(event, {\n    handled: false,\n    type,\n  });\n  hub.captureEvent(event, {\n    originalException: error,\n  });\n}\n\nfunction getHubAndOptions() {\n  var hub = getCurrentHub();\n  var client = hub.getClient();\n  var options = (client && client.getOptions()) || {\n    stackParser: () => [],\n    attachStacktrace: false,\n  };\n  return [hub, options.stackParser, options.attachStacktrace];\n}\n\nexport { GlobalHandlers };\n//# sourceMappingURL=globalhandlers.js.map\n","import { getGlobalObject, fill, getFunctionName, getOriginalFunction } from '@sentry/utils';\nimport { wrap } from '../helpers.js';\n\nvar DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\n/** Wrap timer functions and event targets to catch errors and provide better meta data */\nclass TryCatch  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'TryCatch';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = TryCatch.id;}\n\n  /** JSDoc */\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options) {;TryCatch.prototype.__init.call(this);\n    this._options = {\n      XMLHttpRequest: true,\n      eventTarget: true,\n      requestAnimationFrame: true,\n      setInterval: true,\n      setTimeout: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Wrap timer functions and event targets to catch errors\n   * and provide better metadata.\n   */\n   setupOnce() {\n    var global = getGlobalObject();\n\n    if (this._options.setTimeout) {\n      fill(global, 'setTimeout', _wrapTimeFunction);\n    }\n\n    if (this._options.setInterval) {\n      fill(global, 'setInterval', _wrapTimeFunction);\n    }\n\n    if (this._options.requestAnimationFrame) {\n      fill(global, 'requestAnimationFrame', _wrapRAF);\n    }\n\n    if (this._options.XMLHttpRequest && 'XMLHttpRequest' in global) {\n      fill(XMLHttpRequest.prototype, 'send', _wrapXHR);\n    }\n\n    var eventTargetOption = this._options.eventTarget;\n    if (eventTargetOption) {\n      var eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;\n      eventTarget.forEach(_wrapEventTarget);\n    }\n  }\n} TryCatch.__initStatic();\n\n/** JSDoc */\nfunction _wrapTimeFunction(original) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function ( ...args) {\n    var originalCallback = args[0];\n    args[0] = wrap(originalCallback, {\n      mechanism: {\n        data: { function: getFunctionName(original) },\n        handled: true,\n        type: 'instrument',\n      },\n    });\n    return original.apply(this, args);\n  };\n}\n\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _wrapRAF(original) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function ( callback) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return original.apply(this, [\n      wrap(callback, {\n        mechanism: {\n          data: {\n            function: 'requestAnimationFrame',\n            handler: getFunctionName(original),\n          },\n          handled: true,\n          type: 'instrument',\n        },\n      }),\n    ]);\n  };\n}\n\n/** JSDoc */\nfunction _wrapXHR(originalSend) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function ( ...args) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    var xhr = this;\n    var xmlHttpRequestProps = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n    xmlHttpRequestProps.forEach(prop => {\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        fill(xhr, prop, function (original) {\n          var wrapOptions = {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: getFunctionName(original),\n              },\n              handled: true,\n              type: 'instrument',\n            },\n          };\n\n          // If Instrument integration has been called before TryCatch, get the name of original function\n          var originalFunction = getOriginalFunction(original);\n          if (originalFunction) {\n            wrapOptions.mechanism.data.handler = getFunctionName(originalFunction);\n          }\n\n          // Otherwise wrap directly\n          return wrap(original, wrapOptions);\n        });\n      }\n    });\n\n    return originalSend.apply(this, args);\n  };\n}\n\n/** JSDoc */\nfunction _wrapEventTarget(target) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  var global = getGlobalObject() ;\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  var proto = global[target] && global[target].prototype;\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n  if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n    return;\n  }\n\n  fill(proto, 'addEventListener', function (original)\n\n {\n    return function (\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      eventName,\n      fn,\n      options,\n    ) {\n      try {\n        if (typeof fn.handleEvent === 'function') {\n          // ESlint disable explanation:\n          //  First, it is generally safe to call `wrap` with an unbound function. Furthermore, using `.bind()` would\n          //  introduce a bug here, because bind returns a new function that doesn't have our\n          //  flags(like __sentry_original__) attached. `wrap` checks for those flags to avoid unnecessary wrapping.\n          //  Without those flags, every call to addEventListener wraps the function again, causing a memory leak.\n          // eslint-disable-next-line @typescript-eslint/unbound-method\n          fn.handleEvent = wrap(fn.handleEvent, {\n            mechanism: {\n              data: {\n                function: 'handleEvent',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: true,\n              type: 'instrument',\n            },\n          });\n        }\n      } catch (err) {\n        // can sometimes get 'Permission denied to access property \"handle Event'\n      }\n\n      return original.apply(this, [\n        eventName,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        wrap(fn , {\n          mechanism: {\n            data: {\n              function: 'addEventListener',\n              handler: getFunctionName(fn),\n              target,\n            },\n            handled: true,\n            type: 'instrument',\n          },\n        }),\n        options,\n      ]);\n    };\n  });\n\n  fill(\n    proto,\n    'removeEventListener',\n    function (\n      originalRemoveEventListener,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ) {\n      return function (\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n        eventName,\n        fn,\n        options,\n      ) {\n        /**\n         * There are 2 possible scenarios here:\n         *\n         * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n         * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n         * as a pass-through, and call original `removeEventListener` with it.\n         *\n         * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n         * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n         * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n         * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n         * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n         *\n         * When someone adds a handler prior to initialization, and then do it again, but after,\n         * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n         * to get rid of the initial handler and it'd stick there forever.\n         */\n        var wrappedEventHandler = fn ;\n        try {\n          var originalEventHandler = wrappedEventHandler && wrappedEventHandler.__sentry_wrapped__;\n          if (originalEventHandler) {\n            originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n          }\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return originalRemoveEventListener.call(this, eventName, wrappedEventHandler, options);\n      };\n    },\n  );\n}\n\nexport { TryCatch };\n//# sourceMappingURL=trycatch.js.map\n","import { getCurrentHub, addGlobalEventProcessor } from '@sentry/core';\nimport { isInstanceOf } from '@sentry/utils';\nimport { exceptionFromError } from '../eventbuilder.js';\n\nvar DEFAULT_KEY = 'cause';\nvar DEFAULT_LIMIT = 5;\n\n/** Adds SDK info to an event. */\nclass LinkedErrors  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'LinkedErrors';}\n\n  /**\n   * @inheritDoc\n   */\n    __init() {this.name = LinkedErrors.id;}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options = {}) {;LinkedErrors.prototype.__init.call(this);\n    this._key = options.key || DEFAULT_KEY;\n    this._limit = options.limit || DEFAULT_LIMIT;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    var client = getCurrentHub().getClient();\n    if (!client) {\n      return;\n    }\n    addGlobalEventProcessor((event, hint) => {\n      var self = getCurrentHub().getIntegration(LinkedErrors);\n      return self ? _handler(client.getOptions().stackParser, self._key, self._limit, event, hint) : event;\n    });\n  }\n} LinkedErrors.__initStatic();\n\n/**\n * @inheritDoc\n */\nfunction _handler(\n  parser,\n  key,\n  limit,\n  event,\n  hint,\n) {\n  if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n    return event;\n  }\n  var linkedErrors = _walkErrorTree(parser, limit, hint.originalException , key);\n  event.exception.values = [...linkedErrors, ...event.exception.values];\n  return event;\n}\n\n/**\n * JSDOC\n */\nfunction _walkErrorTree(\n  parser,\n  limit,\n  error,\n  key,\n  stack = [],\n) {\n  if (!isInstanceOf(error[key], Error) || stack.length + 1 >= limit) {\n    return stack;\n  }\n  var exception = exceptionFromError(parser, error[key]);\n  return _walkErrorTree(parser, limit, error[key], key, [exception, ...stack]);\n}\n\nexport { LinkedErrors, _handler, _walkErrorTree };\n//# sourceMappingURL=linkederrors.js.map\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\n\nvar global = getGlobalObject();\n\n/** HttpContext integration collects information about HTTP request headers */\nclass HttpContext  {constructor() { HttpContext.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'HttpContext';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = HttpContext.id;}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    addGlobalEventProcessor((event) => {\n      if (getCurrentHub().getIntegration(HttpContext)) {\n        // if none of the information we want exists, don't bother\n        if (!global.navigator && !global.location && !global.document) {\n          return event;\n        }\n\n        // grab as much info as exists and add it to the event\n        var url = (event.request && event.request.url) || (global.location && global.location.href);\n        const { referrer } = global.document || {};\n        const { userAgent } = global.navigator || {};\n\n        var headers = {\n          ...(event.request && event.request.headers),\n          ...(referrer && { Referer: referrer }),\n          ...(userAgent && { 'User-Agent': userAgent }),\n        };\n        var request = { ...(url && { url }), headers };\n\n        return { ...event, request };\n      }\n      return event;\n    });\n  }\n} HttpContext.__initStatic();\n\nexport { HttpContext };\n//# sourceMappingURL=httpcontext.js.map\n","import { logger } from '@sentry/utils';\n\n/** Deduplication filter */\nclass Dedupe  {constructor() { Dedupe.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Dedupe';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Dedupe.id;}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    var eventProcessor = currentEvent => {\n      var self = getCurrentHub().getIntegration(Dedupe);\n      if (self) {\n        // Juuust in case something goes wrong\n        try {\n          if (_shouldDropEvent(currentEvent, self._previousEvent)) {\n            (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Event dropped due to being a duplicate of previously captured event.');\n            return null;\n          }\n        } catch (_oO) {\n          return (self._previousEvent = currentEvent);\n        }\n\n        return (self._previousEvent = currentEvent);\n      }\n      return currentEvent;\n    };\n\n    eventProcessor.id = this.name;\n    addGlobalEventProcessor(eventProcessor);\n  }\n} Dedupe.__initStatic();\n\n/** JSDoc */\nfunction _shouldDropEvent(currentEvent, previousEvent) {\n  if (!previousEvent) {\n    return false;\n  }\n\n  if (_isSameMessageEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  if (_isSameExceptionEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  return false;\n}\n\n/** JSDoc */\nfunction _isSameMessageEvent(currentEvent, previousEvent) {\n  var currentMessage = currentEvent.message;\n  var previousMessage = previousEvent.message;\n\n  // If neither event has a message property, they were both exceptions, so bail out\n  if (!currentMessage && !previousMessage) {\n    return false;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n    return false;\n  }\n\n  if (currentMessage !== previousMessage) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameExceptionEvent(currentEvent, previousEvent) {\n  var previousException = _getExceptionFromEvent(previousEvent);\n  var currentException = _getExceptionFromEvent(currentEvent);\n\n  if (!previousException || !currentException) {\n    return false;\n  }\n\n  if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameStacktrace(currentEvent, previousEvent) {\n  let currentFrames = _getFramesFromEvent(currentEvent);\n  let previousFrames = _getFramesFromEvent(previousEvent);\n\n  // If neither event has a stacktrace, they are assumed to be the same\n  if (!currentFrames && !previousFrames) {\n    return true;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n    return false;\n  }\n\n  currentFrames = currentFrames ;\n  previousFrames = previousFrames ;\n\n  // If number of frames differ, they are not the same\n  if (previousFrames.length !== currentFrames.length) {\n    return false;\n  }\n\n  // Otherwise, compare the two\n  for (let i = 0; i < previousFrames.length; i++) {\n    var frameA = previousFrames[i];\n    var frameB = currentFrames[i];\n\n    if (\n      frameA.filename !== frameB.filename ||\n      frameA.lineno !== frameB.lineno ||\n      frameA.colno !== frameB.colno ||\n      frameA.function !== frameB.function\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameFingerprint(currentEvent, previousEvent) {\n  let currentFingerprint = currentEvent.fingerprint;\n  let previousFingerprint = previousEvent.fingerprint;\n\n  // If neither event has a fingerprint, they are assumed to be the same\n  if (!currentFingerprint && !previousFingerprint) {\n    return true;\n  }\n\n  // If only one event has a fingerprint, but not the other one, they are not the same\n  if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n    return false;\n  }\n\n  currentFingerprint = currentFingerprint ;\n  previousFingerprint = previousFingerprint ;\n\n  // Otherwise, compare the two\n  try {\n    return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n  } catch (_oO) {\n    return false;\n  }\n}\n\n/** JSDoc */\nfunction _getExceptionFromEvent(event) {\n  return event.exception && event.exception.values && event.exception.values[0];\n}\n\n/** JSDoc */\nfunction _getFramesFromEvent(event) {\n  var exception = event.exception;\n\n  if (exception) {\n    try {\n      // @ts-ignore Object could be undefined\n      return exception.values[0].stacktrace.frames;\n    } catch (_oO) {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n\nexport { Dedupe };\n//# sourceMappingURL=dedupe.js.map\n","import { Integrations, getIntegrationsToSetup, initAndBind, getCurrentHub, getReportDialogEndpoint } from '@sentry/core';\nimport { getGlobalObject, stackParserFromStackParserOptions, supportsFetch, logger, resolvedSyncPromise, addInstrumentationHandler } from '@sentry/utils';\nimport { BrowserClient } from './client.js';\nimport { wrap as wrap$1 } from './helpers.js';\nimport './integrations/index.js';\nimport { defaultStackParser } from './stack-parsers.js';\nimport './transports/index.js';\nimport { TryCatch } from './integrations/trycatch.js';\nimport { Breadcrumbs } from './integrations/breadcrumbs.js';\nimport { GlobalHandlers } from './integrations/globalhandlers.js';\nimport { LinkedErrors } from './integrations/linkederrors.js';\nimport { Dedupe } from './integrations/dedupe.js';\nimport { HttpContext } from './integrations/httpcontext.js';\nimport { makeFetchTransport } from './transports/fetch.js';\nimport { makeXHRTransport } from './transports/xhr.js';\n\nvar defaultIntegrations = [\n  new Integrations.InboundFilters(),\n  new Integrations.FunctionToString(),\n  new TryCatch(),\n  new Breadcrumbs(),\n  new GlobalHandlers(),\n  new LinkedErrors(),\n  new Dedupe(),\n  new HttpContext(),\n];\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nfunction init(options = {}) {\n  if (options.defaultIntegrations === undefined) {\n    options.defaultIntegrations = defaultIntegrations;\n  }\n  if (options.release === undefined) {\n    var window = getGlobalObject();\n    // This supports the variable that sentry-webpack-plugin injects\n    if (window.SENTRY_RELEASE && window.SENTRY_RELEASE.id) {\n      options.release = window.SENTRY_RELEASE.id;\n    }\n  }\n  if (options.autoSessionTracking === undefined) {\n    options.autoSessionTracking = true;\n  }\n  if (options.sendClientReports === undefined) {\n    options.sendClientReports = true;\n  }\n\n  var clientOptions = {\n    ...options,\n    stackParser: stackParserFromStackParserOptions(options.stackParser || defaultStackParser),\n    integrations: getIntegrationsToSetup(options),\n    transport: options.transport || (supportsFetch() ? makeFetchTransport : makeXHRTransport),\n  };\n\n  initAndBind(BrowserClient, clientOptions);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n}\n\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nfunction showReportDialog(options = {}, hub = getCurrentHub()) {\n  // doesn't work without a document (React Native)\n  var global = getGlobalObject();\n  if (!global.document) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Global document not defined in showReportDialog call');\n    return;\n  }\n\n  const { client, scope } = hub.getStackTop();\n  var dsn = options.dsn || (client && client.getDsn());\n  if (!dsn) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('DSN not configured for showReportDialog call');\n    return;\n  }\n\n  if (scope) {\n    options.user = {\n      ...scope.getUser(),\n      ...options.user,\n    };\n  }\n\n  if (!options.eventId) {\n    options.eventId = hub.lastEventId();\n  }\n\n  var script = global.document.createElement('script');\n  script.async = true;\n  script.src = getReportDialogEndpoint(dsn, options);\n\n  if (options.onLoad) {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    script.onload = options.onLoad;\n  }\n\n  var injectionPoint = global.document.head || global.document.body;\n  if (injectionPoint) {\n    injectionPoint.appendChild(script);\n  } else {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Not injecting report dialog. No injection point found in HTML');\n  }\n}\n\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nfunction lastEventId() {\n  return getCurrentHub().lastEventId();\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction forceLoad() {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction onLoad(callback) {\n  callback();\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nfunction flush(timeout) {\n  var client = getCurrentHub().getClient();\n  if (client) {\n    return client.flush(timeout);\n  }\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Cannot flush events. No client defined.');\n  return resolvedSyncPromise(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nfunction close(timeout) {\n  var client = getCurrentHub().getClient();\n  if (client) {\n    return client.close(timeout);\n  }\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Cannot flush events and disable SDK. No client defined.');\n  return resolvedSyncPromise(false);\n}\n\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction wrap(fn) {\n  return wrap$1(fn)();\n}\n\nfunction startSessionOnHub(hub) {\n  hub.startSession({ ignoreDuration: true });\n  hub.captureSession();\n}\n\n/**\n * Enable automatic Session Tracking for the initial page load.\n */\nfunction startSessionTracking() {\n  var window = getGlobalObject();\n  var document = window.document;\n\n  if (typeof document === 'undefined') {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn('Session tracking in non-browser environment with @sentry/browser is not supported.');\n    return;\n  }\n\n  var hub = getCurrentHub();\n\n  // The only way for this to be false is for there to be a version mismatch between @sentry/browser (>= 6.0.0) and\n  // @sentry/hub (< 5.27.0). In the simple case, there won't ever be such a mismatch, because the two packages are\n  // pinned at the same version in package.json, but there are edge cases where it's possible. See\n  // https://github.com/getsentry/sentry-javascript/issues/3207 and\n  // https://github.com/getsentry/sentry-javascript/issues/3234 and\n  // https://github.com/getsentry/sentry-javascript/issues/3278.\n  if (!hub.captureSession) {\n    return;\n  }\n\n  // The session duration for browser sessions does not track a meaningful\n  // concept that can be used as a metric.\n  // Automatically captured sessions are akin to page views, and thus we\n  // discard their duration.\n  startSessionOnHub(hub);\n\n  // We want to create a session for every navigation as well\n  addInstrumentationHandler('history', ({ from, to }) => {\n    // Don't create an additional session for the initial route or if the location did not change\n    if (!(from === undefined || from === to)) {\n      startSessionOnHub(getCurrentHub());\n    }\n  });\n}\n\nexport { close, defaultIntegrations, flush, forceLoad, init, lastEventId, onLoad, showReportDialog, wrap };\n//# sourceMappingURL=sdk.js.map\n","import './exports.js';\nimport { Integrations } from '@sentry/core';\nexport { FunctionToString, Hub, InboundFilters, SDK_VERSION, Scope, addBreadcrumb, addGlobalEventProcessor, captureEvent, captureException, captureMessage, configureScope, createTransport, getCurrentHub, getHubFromCarrier, makeMain, setContext, setExtra, setExtras, setTag, setTags, setUser, startTransaction, withScope } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\nimport * as index from './integrations/index.js';\nexport { BrowserClient } from './client.js';\nexport { makeFetchTransport } from './transports/fetch.js';\nexport { makeXHRTransport } from './transports/xhr.js';\nexport { chromeStackLineParser, defaultStackLineParsers, defaultStackParser, geckoStackLineParser, opera10StackLineParser, opera11StackLineParser, winjsStackLineParser } from './stack-parsers.js';\nexport { close, defaultIntegrations, flush, forceLoad, init, lastEventId, onLoad, showReportDialog, wrap } from './sdk.js';\nexport { GlobalHandlers } from './integrations/globalhandlers.js';\nexport { TryCatch } from './integrations/trycatch.js';\nexport { Breadcrumbs } from './integrations/breadcrumbs.js';\nexport { LinkedErrors } from './integrations/linkederrors.js';\nexport { HttpContext } from './integrations/httpcontext.js';\nexport { Dedupe } from './integrations/dedupe.js';\n\nlet windowIntegrations = {};\n\n// This block is needed to add compatibility with the integrations packages when used with a CDN\nvar _window = getGlobalObject();\nif (_window.Sentry && _window.Sentry.Integrations) {\n  windowIntegrations = _window.Sentry.Integrations;\n}\n\nvar INTEGRATIONS = {\n  ...windowIntegrations,\n  ...Integrations,\n  ...index,\n};\n\nexport { INTEGRATIONS as Integrations };\n//# sourceMappingURL=index.js.map\n","import { getCurrentHub } from '@sentry/hub';\nexport { TRACEPARENT_REGEXP, extractTraceparentData, stripUrlQueryAndFragment } from '@sentry/utils';\n\n/**\n * Determines if tracing is currently enabled.\n *\n * Tracing is enabled when at least one of `tracesSampleRate` and `tracesSampler` is defined in the SDK config.\n */\nfunction hasTracingEnabled(\n  maybeOptions,\n) {\n  var client = getCurrentHub().getClient();\n  var options = maybeOptions || (client && client.getOptions());\n  return !!options && ('tracesSampleRate' in options || 'tracesSampler' in options);\n}\n\n/** Grabs active transaction off scope, if any */\nfunction getActiveTransaction(maybeHub) {\n  var hub = maybeHub || getCurrentHub();\n  var scope = hub.getScope();\n  return scope && (scope.getTransaction() );\n}\n\n/**\n * Converts from milliseconds to seconds\n * @param time time in ms\n */\nfunction msToSec(time) {\n  return time / 1000;\n}\n\n/**\n * Converts from seconds to milliseconds\n * @param time time in seconds\n */\nfunction secToMs(time) {\n  return time * 1000;\n}\n\nexport { getActiveTransaction, hasTracingEnabled, msToSec, secToMs };\n//# sourceMappingURL=utils.js.map\n","import { addInstrumentationHandler, logger } from '@sentry/utils';\nimport { getActiveTransaction } from './utils.js';\n\n/**\n * Configures global error listeners\n */\nfunction registerErrorInstrumentation() {\n  addInstrumentationHandler('error', errorCallback);\n  addInstrumentationHandler('unhandledrejection', errorCallback);\n}\n\n/**\n * If an error or unhandled promise occurs, we mark the active transaction as failed\n */\nfunction errorCallback() {\n  var activeTransaction = getActiveTransaction();\n  if (activeTransaction) {\n    var status = 'internal_error';\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] Transaction: ${status} -> Global error occured`);\n    activeTransaction.setStatus(status);\n  }\n}\n\nexport { registerErrorInstrumentation };\n//# sourceMappingURL=errors.js.map\n","import { _nullishCoalesce } from '@sentry/utils/esm/buildPolyfills';\nimport { uuid4, timestampWithMs, logger, dropUndefinedKeys } from '@sentry/utils';\n\n/**\n * Keeps track of finished spans for a given transaction\n * @internal\n * @hideconstructor\n * @hidden\n */\nclass SpanRecorder {\n   __init() {this.spans = [];}\n\n   constructor(maxlen = 1000) {;SpanRecorder.prototype.__init.call(this);\n    this._maxlen = maxlen;\n  }\n\n  /**\n   * This is just so that we don't run out of memory while recording a lot\n   * of spans. At some point we just stop and flush out the start of the\n   * trace tree (i.e.the first n spans with the smallest\n   * start_timestamp).\n   */\n   add(span) {\n    if (this.spans.length > this._maxlen) {\n      span.spanRecorder = undefined;\n    } else {\n      this.spans.push(span);\n    }\n  }\n}\n\n/**\n * Span contains all data about a span\n */\nclass Span  {\n  /**\n   * @inheritDoc\n   */\n   __init2() {this.traceId = uuid4();}\n\n  /**\n   * @inheritDoc\n   */\n   __init3() {this.spanId = uuid4().substring(16);}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * Internal keeper of the status\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * Timestamp in seconds when the span was created.\n   */\n   __init4() {this.startTimestamp = timestampWithMs();}\n\n  /**\n   * Timestamp in seconds when the span ended.\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n   __init5() {this.tags = {};}\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   __init6() {this.data = {};}\n\n  /**\n   * List of spans that were finalized\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * You should never call the constructor manually, always use `Sentry.startTransaction()`\n   * or call `startChild()` on an existing span.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n   constructor(spanContext) {;Span.prototype.__init2.call(this);Span.prototype.__init3.call(this);Span.prototype.__init4.call(this);Span.prototype.__init5.call(this);Span.prototype.__init6.call(this);\n    if (!spanContext) {\n      return this;\n    }\n    if (spanContext.traceId) {\n      this.traceId = spanContext.traceId;\n    }\n    if (spanContext.spanId) {\n      this.spanId = spanContext.spanId;\n    }\n    if (spanContext.parentSpanId) {\n      this.parentSpanId = spanContext.parentSpanId;\n    }\n    // We want to include booleans as well here\n    if ('sampled' in spanContext) {\n      this.sampled = spanContext.sampled;\n    }\n    if (spanContext.op) {\n      this.op = spanContext.op;\n    }\n    if (spanContext.description) {\n      this.description = spanContext.description;\n    }\n    if (spanContext.data) {\n      this.data = spanContext.data;\n    }\n    if (spanContext.tags) {\n      this.tags = spanContext.tags;\n    }\n    if (spanContext.status) {\n      this.status = spanContext.status;\n    }\n    if (spanContext.startTimestamp) {\n      this.startTimestamp = spanContext.startTimestamp;\n    }\n    if (spanContext.endTimestamp) {\n      this.endTimestamp = spanContext.endTimestamp;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startChild(\n    spanContext,\n  ) {\n    var childSpan = new Span({\n      ...spanContext,\n      parentSpanId: this.spanId,\n      sampled: this.sampled,\n      traceId: this.traceId,\n    });\n\n    childSpan.spanRecorder = this.spanRecorder;\n    if (childSpan.spanRecorder) {\n      childSpan.spanRecorder.add(childSpan);\n    }\n\n    childSpan.transaction = this.transaction;\n\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && childSpan.transaction) {\n      var opStr = (spanContext && spanContext.op) || '< unknown op >';\n      var nameStr = childSpan.transaction.name || '< unknown name >';\n      var idStr = childSpan.transaction.spanId;\n\n      var logMessage = `[Tracing] Starting '${opStr}' span on transaction '${nameStr}' (${idStr}).`;\n      childSpan.transaction.metadata.spanMetadata[childSpan.spanId] = { logMessage };\n      logger.log(logMessage);\n    }\n\n    return childSpan;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this.tags = { ...this.tags, [key]: value };\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n   setData(key, value) {\n    this.data = { ...this.data, [key]: value };\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setStatus(value) {\n    this.status = value;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setHttpStatus(httpStatus) {\n    this.setTag('http.status_code', String(httpStatus));\n    var spanStatus = spanStatusfromHttpCode(httpStatus);\n    if (spanStatus !== 'unknown_error') {\n      this.setStatus(spanStatus);\n    }\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   isSuccess() {\n    return this.status === 'ok';\n  }\n\n  /**\n   * @inheritDoc\n   */\n   finish(endTimestamp) {\n    if (\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      // Don't call this for transactions\n      this.transaction &&\n      this.transaction.spanId !== this.spanId\n    ) {\n      const { logMessage } = this.transaction.metadata.spanMetadata[this.spanId];\n      if (logMessage) {\n        logger.log((logMessage ).replace('Starting', 'Finishing'));\n      }\n    }\n\n    this.endTimestamp = typeof endTimestamp === 'number' ? endTimestamp : timestampWithMs();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toTraceparent() {\n    let sampledString = '';\n    if (this.sampled !== undefined) {\n      sampledString = this.sampled ? '-1' : '-0';\n    }\n    return `${this.traceId}-${this.spanId}${sampledString}`;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toContext() {\n    return dropUndefinedKeys({\n      data: this.data,\n      description: this.description,\n      endTimestamp: this.endTimestamp,\n      op: this.op,\n      parentSpanId: this.parentSpanId,\n      sampled: this.sampled,\n      spanId: this.spanId,\n      startTimestamp: this.startTimestamp,\n      status: this.status,\n      tags: this.tags,\n      traceId: this.traceId,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n   updateWithContext(spanContext) {\n    this.data = _nullishCoalesce(spanContext.data, () => ( {}));\n    this.description = spanContext.description;\n    this.endTimestamp = spanContext.endTimestamp;\n    this.op = spanContext.op;\n    this.parentSpanId = spanContext.parentSpanId;\n    this.sampled = spanContext.sampled;\n    this.spanId = _nullishCoalesce(spanContext.spanId, () => ( this.spanId));\n    this.startTimestamp = _nullishCoalesce(spanContext.startTimestamp, () => ( this.startTimestamp));\n    this.status = spanContext.status;\n    this.tags = _nullishCoalesce(spanContext.tags, () => ( {}));\n    this.traceId = _nullishCoalesce(spanContext.traceId, () => ( this.traceId));\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTraceContext()\n\n {\n    return dropUndefinedKeys({\n      data: Object.keys(this.data).length > 0 ? this.data : undefined,\n      description: this.description,\n      op: this.op,\n      parent_span_id: this.parentSpanId,\n      span_id: this.spanId,\n      status: this.status,\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      trace_id: this.traceId,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toJSON()\n\n {\n    return dropUndefinedKeys({\n      data: Object.keys(this.data).length > 0 ? this.data : undefined,\n      description: this.description,\n      op: this.op,\n      parent_span_id: this.parentSpanId,\n      span_id: this.spanId,\n      start_timestamp: this.startTimestamp,\n      status: this.status,\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      timestamp: this.endTimestamp,\n      trace_id: this.traceId,\n    });\n  }\n}\n\n/**\n * Converts a HTTP status code into a {@link SpanStatusType}.\n *\n * @param httpStatus The HTTP response status code.\n * @returns The span status or unknown_error.\n */\nfunction spanStatusfromHttpCode(httpStatus) {\n  if (httpStatus < 400 && httpStatus >= 100) {\n    return 'ok';\n  }\n\n  if (httpStatus >= 400 && httpStatus < 500) {\n    switch (httpStatus) {\n      case 401:\n        return 'unauthenticated';\n      case 403:\n        return 'permission_denied';\n      case 404:\n        return 'not_found';\n      case 409:\n        return 'already_exists';\n      case 413:\n        return 'failed_precondition';\n      case 429:\n        return 'resource_exhausted';\n      default:\n        return 'invalid_argument';\n    }\n  }\n\n  if (httpStatus >= 500 && httpStatus < 600) {\n    switch (httpStatus) {\n      case 501:\n        return 'unimplemented';\n      case 503:\n        return 'unavailable';\n      case 504:\n        return 'deadline_exceeded';\n      default:\n        return 'internal_error';\n    }\n  }\n\n  return 'unknown_error';\n}\n\nexport { Span, SpanRecorder, spanStatusfromHttpCode };\n//# sourceMappingURL=span.js.map\n","import { _nullishCoalesce } from '@sentry/utils/esm/buildPolyfills';\nimport { getCurrentHub } from '@sentry/hub';\nimport { timestampInSeconds, logger, dropUndefinedKeys } from '@sentry/utils';\nimport { Span, SpanRecorder } from './span.js';\n\n/** JSDoc */\nclass Transaction extends Span  {\n\n  /**\n   * The reference to the current hub.\n   */\n\n   __init() {this._measurements = {};}\n\n   __init2() {this._frozenDynamicSamplingContext = undefined;}\n\n  /**\n   * This constructor should never be called manually. Those instrumenting tracing should use\n   * `Sentry.startTransaction()`, and internal methods should use `hub.startTransaction()`.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n   constructor(transactionContext, hub) {\n    super(transactionContext);Transaction.prototype.__init.call(this);Transaction.prototype.__init2.call(this);;\n\n    this._hub = hub || getCurrentHub();\n\n    this._name = transactionContext.name || '';\n\n    this.metadata = {\n      source: 'custom',\n      ...transactionContext.metadata,\n      spanMetadata: {},\n      changes: [],\n      propagations: 0,\n    };\n\n    this._trimEnd = transactionContext.trimEnd;\n\n    // this is because transactions are also spans, and spans have a transaction pointer\n    this.transaction = this;\n\n    // If Dynamic Sampling Context is provided during the creation of the transaction, we freeze it as it usually means\n    // there is incoming Dynamic Sampling Context. (Either through an incoming request, a baggage meta-tag, or other means)\n    var incomingDynamicSamplingContext = this.metadata.dynamicSamplingContext;\n    if (incomingDynamicSamplingContext) {\n      // We shallow copy this in case anything writes to the original reference of the passed in `dynamicSamplingContext`\n      this._frozenDynamicSamplingContext = { ...incomingDynamicSamplingContext };\n    }\n  }\n\n  /** Getter for `name` property */\n   get name() {\n    return this._name;\n  }\n\n  /** Setter for `name` property, which also sets `source` as custom */\n   set name(newName) {\n    this.setName(newName);\n  }\n\n  /**\n   * JSDoc\n   */\n   setName(name, source = 'custom') {\n    // `source` could change without the name changing if we discover that an unparameterized route is actually\n    // parameterized by virtue of having no parameters in its path\n    if (name !== this.name || source !== this.metadata.source) {\n      this.metadata.changes.push({\n        // log previous source\n        source: this.metadata.source,\n        timestamp: timestampInSeconds(),\n        propagations: this.metadata.propagations,\n      });\n    }\n\n    this._name = name;\n    this.metadata.source = source;\n  }\n\n  /**\n   * Attaches SpanRecorder to the span itself\n   * @param maxlen maximum number of spans that can be recorded\n   */\n   initSpanRecorder(maxlen = 1000) {\n    if (!this.spanRecorder) {\n      this.spanRecorder = new SpanRecorder(maxlen);\n    }\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setMeasurement(name, value, unit = '') {\n    this._measurements[name] = { value, unit };\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setMetadata(newMetadata) {\n    this.metadata = { ...this.metadata, ...newMetadata };\n  }\n\n  /**\n   * @inheritDoc\n   */\n   finish(endTimestamp) {\n    // This transaction is already finished, so we should not flush it again.\n    if (this.endTimestamp !== undefined) {\n      return undefined;\n    }\n\n    if (!this.name) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Transaction has no name, falling back to `<unlabeled transaction>`.');\n      this.name = '<unlabeled transaction>';\n    }\n\n    // just sets the end timestamp\n    super.finish(endTimestamp);\n\n    if (this.sampled !== true) {\n      // At this point if `sampled !== true` we want to discard the transaction.\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] Discarding transaction because its trace was not chosen to be sampled.');\n\n      var client = this._hub.getClient();\n      if (client) {\n        client.recordDroppedEvent('sample_rate', 'transaction');\n      }\n\n      return undefined;\n    }\n\n    var finishedSpans = this.spanRecorder ? this.spanRecorder.spans.filter(s => s !== this && s.endTimestamp) : [];\n\n    if (this._trimEnd && finishedSpans.length > 0) {\n      this.endTimestamp = finishedSpans.reduce((prev, current) => {\n        if (prev.endTimestamp && current.endTimestamp) {\n          return prev.endTimestamp > current.endTimestamp ? prev : current;\n        }\n        return prev;\n      }).endTimestamp;\n    }\n\n    var metadata = this.metadata;\n\n    var transaction = {\n      contexts: {\n        trace: this.getTraceContext(),\n      },\n      spans: finishedSpans,\n      start_timestamp: this.startTimestamp,\n      tags: this.tags,\n      timestamp: this.endTimestamp,\n      transaction: this.name,\n      type: 'transaction',\n      sdkProcessingMetadata: {\n        ...metadata,\n        dynamicSamplingContext: this.getDynamicSamplingContext(),\n      },\n      ...(metadata.source && {\n        transaction_info: {\n          source: metadata.source,\n          changes: metadata.changes,\n          propagations: metadata.propagations,\n        },\n      }),\n    };\n\n    var hasMeasurements = Object.keys(this._measurements).length > 0;\n\n    if (hasMeasurements) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.log(\n          '[Measurements] Adding measurements to transaction',\n          JSON.stringify(this._measurements, undefined, 2),\n        );\n      transaction.measurements = this._measurements;\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] Finishing ${this.op} transaction: ${this.name}.`);\n\n    return this._hub.captureEvent(transaction);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toContext() {\n    var spanContext = super.toContext();\n\n    return dropUndefinedKeys({\n      ...spanContext,\n      name: this.name,\n      trimEnd: this._trimEnd,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n   updateWithContext(transactionContext) {\n    super.updateWithContext(transactionContext);\n\n    this.name = _nullishCoalesce(transactionContext.name, () => ( ''));\n\n    this._trimEnd = transactionContext.trimEnd;\n\n    return this;\n  }\n\n  /**\n   * @inheritdoc\n   *\n   * @experimental\n   */\n   getDynamicSamplingContext() {\n    if (this._frozenDynamicSamplingContext) {\n      return this._frozenDynamicSamplingContext;\n    }\n\n    var hub = this._hub || getCurrentHub();\n    var client = hub && hub.getClient();\n\n    if (!client) return {};\n\n    const { environment, release } = client.getOptions() || {};\n    const { publicKey: public_key } = client.getDsn() || {};\n\n    var maybeSampleRate = this.metadata.sampleRate;\n    var sample_rate = maybeSampleRate !== undefined ? maybeSampleRate.toString() : undefined;\n\n    var scope = hub.getScope();\n    const { segment: user_segment } = (scope && scope.getUser()) || {};\n\n    var source = this.metadata.source;\n\n    // We don't want to have a transaction name in the DSC if the source is \"url\" because URLs might contain PII\n    var transaction = source && source !== 'url' ? this.name : undefined;\n\n    var dsc = dropUndefinedKeys({\n      environment,\n      release,\n      transaction,\n      user_segment,\n      public_key,\n      trace_id: this.traceId,\n      sample_rate,\n    });\n\n    // Uncomment if we want to make DSC immutable\n    // this._frozenDynamicSamplingContext = dsc;\n\n    return dsc;\n  }\n}\n\nexport { Transaction };\n//# sourceMappingURL=transaction.js.map\n","import { timestampWithMs, logger } from '@sentry/utils';\nimport { SpanRecorder } from './span.js';\nimport { Transaction } from './transaction.js';\n\nvar DEFAULT_IDLE_TIMEOUT = 1000;\nvar DEFAULT_FINAL_TIMEOUT = 30000;\nvar HEARTBEAT_INTERVAL = 5000;\n\n/**\n * @inheritDoc\n */\nclass IdleTransactionSpanRecorder extends SpanRecorder {\n   constructor(\n      _pushActivity,\n      _popActivity,\n     transactionSpanId,\n    maxlen,\n  ) {\n    super(maxlen);this._pushActivity = _pushActivity;this._popActivity = _popActivity;this.transactionSpanId = transactionSpanId;;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   add(span) {\n    // We should make sure we do not push and pop activities for\n    // the transaction that this span recorder belongs to.\n    if (span.spanId !== this.transactionSpanId) {\n      // We patch span.finish() to pop an activity after setting an endTimestamp.\n      span.finish = (endTimestamp) => {\n        span.endTimestamp = typeof endTimestamp === 'number' ? endTimestamp : timestampWithMs();\n        this._popActivity(span.spanId);\n      };\n\n      // We should only push new activities if the span does not have an end timestamp.\n      if (span.endTimestamp === undefined) {\n        this._pushActivity(span.spanId);\n      }\n    }\n\n    super.add(span);\n  }\n}\n\n/**\n * An IdleTransaction is a transaction that automatically finishes. It does this by tracking child spans as activities.\n * You can have multiple IdleTransactions active, but if the `onScope` option is specified, the idle transaction will\n * put itself on the scope on creation.\n */\nclass IdleTransaction extends Transaction {\n  // Activities store a list of active spans\n   __init() {this.activities = {};}\n\n  // Track state of activities in previous heartbeat\n\n  // Amount of times heartbeat has counted. Will cause transaction to finish after 3 beats.\n   __init2() {this._heartbeatCounter = 0;}\n\n  // We should not use heartbeat if we finished a transaction\n   __init3() {this._finished = false;}\n\n    __init4() {this._beforeFinishCallbacks = [];}\n\n  /**\n   * Timer that tracks Transaction idleTimeout\n   */\n\n   constructor(\n    transactionContext,\n      _idleHub,\n    /**\n     * The time to wait in ms until the idle transaction will be finished. This timer is started each time\n     * there are no active spans on this transaction.\n     */\n      _idleTimeout = DEFAULT_IDLE_TIMEOUT,\n    /**\n     * The final value in ms that a transaction cannot exceed\n     */\n      _finalTimeout = DEFAULT_FINAL_TIMEOUT,\n    // Whether or not the transaction should put itself on the scope when it starts and pop itself off when it ends\n      _onScope = false,\n  ) {\n    super(transactionContext, _idleHub);this._idleHub = _idleHub;this._idleTimeout = _idleTimeout;this._finalTimeout = _finalTimeout;this._onScope = _onScope;IdleTransaction.prototype.__init.call(this);IdleTransaction.prototype.__init2.call(this);IdleTransaction.prototype.__init3.call(this);IdleTransaction.prototype.__init4.call(this);;\n\n    if (_onScope) {\n      // There should only be one active transaction on the scope\n      clearActiveTransaction(_idleHub);\n\n      // We set the transaction here on the scope so error events pick up the trace\n      // context and attach it to the error.\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`Setting idle transaction on scope. Span ID: ${this.spanId}`);\n      _idleHub.configureScope(scope => scope.setSpan(this));\n    }\n\n    this._startIdleTimeout();\n    setTimeout(() => {\n      if (!this._finished) {\n        this.setStatus('deadline_exceeded');\n        this.finish();\n      }\n    }, this._finalTimeout);\n  }\n\n  /** {@inheritDoc} */\n   finish(endTimestamp = timestampWithMs()) {\n    this._finished = true;\n    this.activities = {};\n\n    if (this.spanRecorder) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.log('[Tracing] finishing IdleTransaction', new Date(endTimestamp * 1000).toISOString(), this.op);\n\n      for (var callback of this._beforeFinishCallbacks) {\n        callback(this, endTimestamp);\n      }\n\n      this.spanRecorder.spans = this.spanRecorder.spans.filter((span) => {\n        // If we are dealing with the transaction itself, we just return it\n        if (span.spanId === this.spanId) {\n          return true;\n        }\n\n        // We cancel all pending spans with status \"cancelled\" to indicate the idle transaction was finished early\n        if (!span.endTimestamp) {\n          span.endTimestamp = endTimestamp;\n          span.setStatus('cancelled');\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n            logger.log('[Tracing] cancelling span since transaction ended early', JSON.stringify(span, undefined, 2));\n        }\n\n        var keepSpan = span.startTimestamp < endTimestamp;\n        if (!keepSpan) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n            logger.log(\n              '[Tracing] discarding Span since it happened after Transaction was finished',\n              JSON.stringify(span, undefined, 2),\n            );\n        }\n        return keepSpan;\n      });\n\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] flushing IdleTransaction');\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] No active IdleTransaction');\n    }\n\n    // if `this._onScope` is `true`, the transaction put itself on the scope when it started\n    if (this._onScope) {\n      clearActiveTransaction(this._idleHub);\n    }\n\n    return super.finish(endTimestamp);\n  }\n\n  /**\n   * Register a callback function that gets excecuted before the transaction finishes.\n   * Useful for cleanup or if you want to add any additional spans based on current context.\n   *\n   * This is exposed because users have no other way of running something before an idle transaction\n   * finishes.\n   */\n   registerBeforeFinishCallback(callback) {\n    this._beforeFinishCallbacks.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   initSpanRecorder(maxlen) {\n    if (!this.spanRecorder) {\n      var pushActivity = (id) => {\n        if (this._finished) {\n          return;\n        }\n        this._pushActivity(id);\n      };\n      var popActivity = (id) => {\n        if (this._finished) {\n          return;\n        }\n        this._popActivity(id);\n      };\n\n      this.spanRecorder = new IdleTransactionSpanRecorder(pushActivity, popActivity, this.spanId, maxlen);\n\n      // Start heartbeat so that transactions do not run forever.\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('Starting heartbeat');\n      this._pingHeartbeat();\n    }\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * Cancels the existing idletimeout, if there is one\n   */\n   _cancelIdleTimeout() {\n    if (this._idleTimeoutID) {\n      clearTimeout(this._idleTimeoutID);\n      this._idleTimeoutID = undefined;\n    }\n  }\n\n  /**\n   * Creates an idletimeout\n   */\n   _startIdleTimeout(endTimestamp) {\n    this._cancelIdleTimeout();\n    this._idleTimeoutID = setTimeout(() => {\n      if (!this._finished && Object.keys(this.activities).length === 0) {\n        this.finish(endTimestamp);\n      }\n    }, this._idleTimeout);\n  }\n\n  /**\n   * Start tracking a specific activity.\n   * @param spanId The span id that represents the activity\n   */\n   _pushActivity(spanId) {\n    this._cancelIdleTimeout();\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] pushActivity: ${spanId}`);\n    this.activities[spanId] = true;\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n  }\n\n  /**\n   * Remove an activity from usage\n   * @param spanId The span id that represents the activity\n   */\n   _popActivity(spanId) {\n    if (this.activities[spanId]) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] popActivity ${spanId}`);\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this.activities[spanId];\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n    }\n\n    if (Object.keys(this.activities).length === 0) {\n      // We need to add the timeout here to have the real endtimestamp of the transaction\n      // Remember timestampWithMs is in seconds, timeout is in ms\n      var endTimestamp = timestampWithMs() + this._idleTimeout / 1000;\n      this._startIdleTimeout(endTimestamp);\n    }\n  }\n\n  /**\n   * Checks when entries of this.activities are not changing for 3 beats.\n   * If this occurs we finish the transaction.\n   */\n   _beat() {\n    // We should not be running heartbeat if the idle transaction is finished.\n    if (this._finished) {\n      return;\n    }\n\n    var heartbeatString = Object.keys(this.activities).join('');\n\n    if (heartbeatString === this._prevHeartbeatString) {\n      this._heartbeatCounter += 1;\n    } else {\n      this._heartbeatCounter = 1;\n    }\n\n    this._prevHeartbeatString = heartbeatString;\n\n    if (this._heartbeatCounter >= 3) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] Transaction finished because of no change for 3 heart beats');\n      this.setStatus('deadline_exceeded');\n      this.finish();\n    } else {\n      this._pingHeartbeat();\n    }\n  }\n\n  /**\n   * Pings the heartbeat\n   */\n   _pingHeartbeat() {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`pinging Heartbeat -> current counter: ${this._heartbeatCounter}`);\n    setTimeout(() => {\n      this._beat();\n    }, HEARTBEAT_INTERVAL);\n  }\n}\n\n/**\n * Reset transaction on scope to `undefined`\n */\nfunction clearActiveTransaction(hub) {\n  var scope = hub.getScope();\n  if (scope) {\n    var transaction = scope.getTransaction();\n    if (transaction) {\n      scope.setSpan(undefined);\n    }\n  }\n}\n\nexport { DEFAULT_FINAL_TIMEOUT, DEFAULT_IDLE_TIMEOUT, HEARTBEAT_INTERVAL, IdleTransaction, IdleTransactionSpanRecorder };\n//# sourceMappingURL=idletransaction.js.map\n","import { getMainCarrier } from '@sentry/hub';\nimport { logger, isNaN, dynamicRequire, loadModule, isNodeEnv } from '@sentry/utils';\nimport { registerErrorInstrumentation } from './errors.js';\nimport { IdleTransaction } from './idletransaction.js';\nimport { Transaction } from './transaction.js';\nimport { hasTracingEnabled } from './utils.js';\n\n/** Returns all trace headers that are currently on the top scope. */\nfunction traceHeaders() {\n  var scope = this.getScope();\n  if (scope) {\n    var span = scope.getSpan();\n    if (span) {\n      return {\n        'sentry-trace': span.toTraceparent(),\n      };\n    }\n  }\n  return {};\n}\n\n/**\n * Makes a sampling decision for the given transaction and stores it on the transaction.\n *\n * Called every time a transaction is created. Only transactions which emerge with a `sampled` value of `true` will be\n * sent to Sentry.\n *\n * @param transaction: The transaction needing a sampling decision\n * @param options: The current client's options, so we can access `tracesSampleRate` and/or `tracesSampler`\n * @param samplingContext: Default and user-provided data which may be used to help make the decision\n *\n * @returns The given transaction with its `sampled` value set\n */\nfunction sample(\n  transaction,\n  options,\n  samplingContext,\n) {\n  // nothing to do if tracing is not enabled\n  if (!hasTracingEnabled(options)) {\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the user has forced a sampling decision by passing a `sampled` value in their transaction context, go with that\n  if (transaction.sampled !== undefined) {\n    transaction.setMetadata({\n      sampleRate: Number(transaction.sampled),\n    });\n    return transaction;\n  }\n\n  // we would have bailed already if neither `tracesSampler` nor `tracesSampleRate` were defined, so one of these should\n  // work; prefer the hook if so\n  let sampleRate;\n  if (typeof options.tracesSampler === 'function') {\n    sampleRate = options.tracesSampler(samplingContext);\n    transaction.setMetadata({\n      sampleRate: Number(sampleRate),\n    });\n  } else if (samplingContext.parentSampled !== undefined) {\n    sampleRate = samplingContext.parentSampled;\n  } else {\n    sampleRate = options.tracesSampleRate;\n    transaction.setMetadata({\n      sampleRate: Number(sampleRate),\n    });\n  }\n\n  // Since this is coming from the user (or from a function provided by the user), who knows what we might get. (The\n  // only valid values are booleans or numbers between 0 and 1.)\n  if (!isValidSampleRate(sampleRate)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('[Tracing] Discarding transaction because of invalid sample rate.');\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the function returned 0 (or false), or if `tracesSampleRate` is 0, it's a sign the transaction should be dropped\n  if (!sampleRate) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.log(\n        `[Tracing] Discarding transaction because ${\n          typeof options.tracesSampler === 'function'\n            ? 'tracesSampler returned 0 or false'\n            : 'a negative sampling decision was inherited or tracesSampleRate is set to 0'\n        }`,\n      );\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n  // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n  transaction.sampled = Math.random() < (sampleRate );\n\n  // if we're not going to keep it, we're done\n  if (!transaction.sampled) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.log(\n        `[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = ${Number(\n          sampleRate,\n        )})`,\n      );\n    return transaction;\n  }\n\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] starting ${transaction.op} transaction - ${transaction.name}`);\n  return transaction;\n}\n\n/**\n * Checks the given sample rate to make sure it is valid type and value (a boolean, or a number between 0 and 1).\n */\nfunction isValidSampleRate(rate) {\n  // we need to check NaN explicitly because it's of type 'number' and therefore wouldn't get caught by this typecheck\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  if (isNaN(rate) || !(typeof rate === 'number' || typeof rate === 'boolean')) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(\n        `[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(\n          rate,\n        )} of type ${JSON.stringify(typeof rate)}.`,\n      );\n    return false;\n  }\n\n  // in case sampleRate is a boolean, it will get automatically cast to 1 if it's true and 0 if it's false\n  if (rate < 0 || rate > 1) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(`[Tracing] Given sample rate is invalid. Sample rate must be between 0 and 1. Got ${rate}.`);\n    return false;\n  }\n  return true;\n}\n\n/**\n * Creates a new transaction and adds a sampling decision if it doesn't yet have one.\n *\n * The Hub.startTransaction method delegates to this method to do its work, passing the Hub instance in as `this`, as if\n * it had been called on the hub directly. Exists as a separate function so that it can be injected into the class as an\n * \"extension method.\"\n *\n * @param this: The Hub starting the transaction\n * @param transactionContext: Data used to configure the transaction\n * @param CustomSamplingContext: Optional data to be provided to the `tracesSampler` function (if any)\n *\n * @returns The new transaction\n *\n * @see {@link Hub.startTransaction}\n */\nfunction _startTransaction(\n\n  transactionContext,\n  customSamplingContext,\n) {\n  var client = this.getClient();\n  var options = (client && client.getOptions()) || {};\n\n  let transaction = new Transaction(transactionContext, this);\n  transaction = sample(transaction, options, {\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    ...customSamplingContext,\n  });\n  if (transaction.sampled) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans ));\n  }\n  return transaction;\n}\n\n/**\n * Create new idle transaction.\n */\nfunction startIdleTransaction(\n  hub,\n  transactionContext,\n  idleTimeout,\n  finalTimeout,\n  onScope,\n  customSamplingContext,\n) {\n  var client = hub.getClient();\n  var options = (client && client.getOptions()) || {};\n\n  let transaction = new IdleTransaction(transactionContext, hub, idleTimeout, finalTimeout, onScope);\n  transaction = sample(transaction, options, {\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    ...customSamplingContext,\n  });\n  if (transaction.sampled) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans ));\n  }\n  return transaction;\n}\n\n/**\n * @private\n */\nfunction _addTracingExtensions() {\n  var carrier = getMainCarrier();\n  if (!carrier.__SENTRY__) {\n    return;\n  }\n  carrier.__SENTRY__.extensions = carrier.__SENTRY__.extensions || {};\n  if (!carrier.__SENTRY__.extensions.startTransaction) {\n    carrier.__SENTRY__.extensions.startTransaction = _startTransaction;\n  }\n  if (!carrier.__SENTRY__.extensions.traceHeaders) {\n    carrier.__SENTRY__.extensions.traceHeaders = traceHeaders;\n  }\n}\n\n/**\n * @private\n */\nfunction _autoloadDatabaseIntegrations() {\n  var carrier = getMainCarrier();\n  if (!carrier.__SENTRY__) {\n    return;\n  }\n\n  var packageToIntegrationMapping = {\n    mongodb() {\n      var integration = dynamicRequire(module, './integrations/node/mongo')\n\n;\n      return new integration.Mongo();\n    },\n    mongoose() {\n      var integration = dynamicRequire(module, './integrations/node/mongo')\n\n;\n      return new integration.Mongo({ mongoose: true });\n    },\n    mysql() {\n      var integration = dynamicRequire(module, './integrations/node/mysql')\n\n;\n      return new integration.Mysql();\n    },\n    pg() {\n      var integration = dynamicRequire(module, './integrations/node/postgres')\n\n;\n      return new integration.Postgres();\n    },\n  };\n\n  var mappedPackages = Object.keys(packageToIntegrationMapping)\n    .filter(moduleName => !!loadModule(moduleName))\n    .map(pkg => {\n      try {\n        return packageToIntegrationMapping[pkg]();\n      } catch (e) {\n        return undefined;\n      }\n    })\n    .filter(p => p) ;\n\n  if (mappedPackages.length > 0) {\n    carrier.__SENTRY__.integrations = [...(carrier.__SENTRY__.integrations || []), ...mappedPackages];\n  }\n}\n\n/**\n * This patches the global object and injects the Tracing extensions methods\n */\nfunction addExtensionMethods() {\n  _addTracingExtensions();\n\n  // Detect and automatically load specified integrations.\n  if (isNodeEnv()) {\n    _autoloadDatabaseIntegrations();\n  }\n\n  // If an error happens globally, we should make sure transaction status is set to error.\n  registerErrorInstrumentation();\n}\n\nexport { _addTracingExtensions, addExtensionMethods, startIdleTransaction };\n//# sourceMappingURL=hubextensions.js.map\n","import { getGlobalObject, logger } from '@sentry/utils';\nimport { getActiveTransaction } from '../utils.js';\n\nvar global = getGlobalObject();\n\n/**\n * Add a listener that cancels and finishes a transaction when the global\n * document is hidden.\n */\nfunction registerBackgroundTabDetection() {\n  if (global && global.document) {\n    global.document.addEventListener('visibilitychange', () => {\n      var activeTransaction = getActiveTransaction() ;\n      if (global.document.hidden && activeTransaction) {\n        var statusType = 'cancelled';\n\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n          logger.log(\n            `[Tracing] Transaction: ${statusType} -> since tab moved to the background, op: ${activeTransaction.op}`,\n          );\n        // We should not set status if it is already set, this prevent important statuses like\n        // error or data loss from being overwritten on transaction.\n        if (!activeTransaction.status) {\n          activeTransaction.setStatus(statusType);\n        }\n        activeTransaction.setTag('visibilitychange', 'document.hidden');\n        activeTransaction.finish();\n      }\n    });\n  } else {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn('[Tracing] Could not set up background tab detection due to lack of global document');\n  }\n}\n\nexport { registerBackgroundTabDetection };\n//# sourceMappingURL=backgroundtab.js.map\n","var bindReporter = (\n  callback,\n  metric,\n  reportAllChanges,\n) => {\n  let prevValue;\n  return (forceReport) => {\n    if (metric.value >= 0) {\n      if (forceReport || reportAllChanges) {\n        metric.delta = metric.value - (prevValue || 0);\n\n        // Report the metric if there's a non-zero delta or if no previous\n        // value exists (which can happen in the case of the document becoming\n        // hidden when the metric value is 0).\n        // See: https://github.com/GoogleChrome/web-vitals/issues/14\n        if (metric.delta || prevValue === undefined) {\n          prevValue = metric.value;\n          callback(metric);\n        }\n      }\n    }\n  };\n};\n\nexport { bindReporter };\n//# sourceMappingURL=bindReporter.js.map\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Performantly generate a unique, 30-char string by combining a version\n * number, the current timestamp with a 13-digit number integer.\n * @return {string}\n */\nvar generateUniqueID = () => {\n  return `v2-${Date.now()}-${Math.floor(Math.random() * (9e12 - 1)) + 1e12}`;\n};\n\nexport { generateUniqueID };\n//# sourceMappingURL=generateUniqueID.js.map\n","import { _nullishCoalesce } from '@sentry/utils/esm/buildPolyfills';\nimport { generateUniqueID } from './generateUniqueID.js';\n\nvar initMetric = (name, value) => {\n  return {\n    name,\n    value: _nullishCoalesce(value, () => ( -1)),\n    delta: 0,\n    entries: [],\n    id: generateUniqueID(),\n  };\n};\n\nexport { initMetric };\n//# sourceMappingURL=initMetric.js.map\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Takes a performance entry type and a callback function, and creates a\n * `PerformanceObserver` instance that will observe the specified entry type\n * with buffering enabled and call the callback _for each entry_.\n *\n * This function also feature-detects entry support and wraps the logic in a\n * try/catch to avoid errors in unsupporting browsers.\n */\nvar observe = (type, callback) => {\n  try {\n    if (PerformanceObserver.supportedEntryTypes.includes(type)) {\n      // More extensive feature detect needed for Firefox due to:\n      // https://github.com/GoogleChrome/web-vitals/issues/142\n      if (type === 'first-input' && !('PerformanceEventTiming' in self)) {\n        return;\n      }\n\n      var po = new PerformanceObserver(l => l.getEntries().map(callback));\n\n      po.observe({ type, buffered: true });\n      return po;\n    }\n  } catch (e) {\n    // Do nothing.\n  }\n  return;\n};\n\nexport { observe };\n//# sourceMappingURL=observe.js.map\n","import { getGlobalObject } from '@sentry/utils';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar onHidden = (cb, once) => {\n  var onHiddenOrPageHide = (event) => {\n    if (event.type === 'pagehide' || getGlobalObject().document.visibilityState === 'hidden') {\n      cb(event);\n      if (once) {\n        removeEventListener('visibilitychange', onHiddenOrPageHide, true);\n        removeEventListener('pagehide', onHiddenOrPageHide, true);\n      }\n    }\n  };\n  addEventListener('visibilitychange', onHiddenOrPageHide, true);\n  // Some browsers have buggy implementations of visibilitychange,\n  // so we use pagehide in addition, just to be safe.\n  addEventListener('pagehide', onHiddenOrPageHide, true);\n};\n\nexport { onHidden };\n//# sourceMappingURL=onHidden.js.map\n","import { bindReporter } from './lib/bindReporter.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { onHidden } from './lib/onHidden.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// https://wicg.github.io/layout-instability/#sec-layout-shift\n\nvar getCLS = (onReport, reportAllChanges) => {\n  var metric = initMetric('CLS', 0);\n  let report;\n\n  let sessionValue = 0;\n  let sessionEntries = [];\n\n  var entryHandler = (entry) => {\n    // Only count layout shifts without recent user input.\n    // TODO: Figure out why entry can be undefined\n    if (entry && !entry.hadRecentInput) {\n      var firstSessionEntry = sessionEntries[0];\n      var lastSessionEntry = sessionEntries[sessionEntries.length - 1];\n\n      // If the entry occurred less than 1 second after the previous entry and\n      // less than 5 seconds after the first entry in the session, include the\n      // entry in the current session. Otherwise, start a new session.\n      if (\n        sessionValue &&\n        sessionEntries.length !== 0 &&\n        entry.startTime - lastSessionEntry.startTime < 1000 &&\n        entry.startTime - firstSessionEntry.startTime < 5000\n      ) {\n        sessionValue += entry.value;\n        sessionEntries.push(entry);\n      } else {\n        sessionValue = entry.value;\n        sessionEntries = [entry];\n      }\n\n      // If the current session value is larger than the current CLS value,\n      // update CLS and the entries contributing to it.\n      if (sessionValue > metric.value) {\n        metric.value = sessionValue;\n        metric.entries = sessionEntries;\n        if (report) {\n          report();\n        }\n      }\n    }\n  };\n\n  var po = observe('layout-shift', entryHandler );\n  if (po) {\n    report = bindReporter(onReport, metric, reportAllChanges);\n\n    onHidden(() => {\n      po.takeRecords().map(entryHandler );\n      report(true);\n    });\n  }\n};\n\nexport { getCLS };\n//# sourceMappingURL=getCLS.js.map\n","import { getGlobalObject } from '@sentry/utils';\nimport { onHidden } from './onHidden.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet firstHiddenTime = -1;\n\nvar initHiddenTime = () => {\n  return getGlobalObject().document.visibilityState === 'hidden' ? 0 : Infinity;\n};\n\nvar trackChanges = () => {\n  // Update the time if/when the document becomes hidden.\n  onHidden(({ timeStamp }) => {\n    firstHiddenTime = timeStamp;\n  }, true);\n};\n\nvar getVisibilityWatcher = (\n\n) => {\n  if (firstHiddenTime < 0) {\n    // If the document is hidden when this code runs, assume it was hidden\n    // since navigation start. This isn't a perfect heuristic, but it's the\n    // best we can do until an API is available to support querying past\n    // visibilityState.\n    firstHiddenTime = initHiddenTime();\n    trackChanges();\n  }\n  return {\n    get firstHiddenTime() {\n      return firstHiddenTime;\n    },\n  };\n};\n\nexport { getVisibilityWatcher };\n//# sourceMappingURL=getVisibilityWatcher.js.map\n","import { bindReporter } from './lib/bindReporter.js';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { onHidden } from './lib/onHidden.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar getFID = (onReport, reportAllChanges) => {\n  var visibilityWatcher = getVisibilityWatcher();\n  var metric = initMetric('FID');\n  let report;\n\n  var entryHandler = (entry) => {\n    // Only report if the page wasn't hidden prior to the first input.\n    if (report && entry.startTime < visibilityWatcher.firstHiddenTime) {\n      metric.value = entry.processingStart - entry.startTime;\n      metric.entries.push(entry);\n      report(true);\n    }\n  };\n\n  var po = observe('first-input', entryHandler );\n  if (po) {\n    report = bindReporter(onReport, metric, reportAllChanges);\n    onHidden(() => {\n      po.takeRecords().map(entryHandler );\n      po.disconnect();\n    }, true);\n  }\n};\n\nexport { getFID };\n//# sourceMappingURL=getFID.js.map\n","import { bindReporter } from './lib/bindReporter.js';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { onHidden } from './lib/onHidden.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// https://wicg.github.io/largest-contentful-paint/#sec-largest-contentful-paint-interface\n\nvar reportedMetricIDs = {};\n\nvar getLCP = (onReport, reportAllChanges) => {\n  var visibilityWatcher = getVisibilityWatcher();\n  var metric = initMetric('LCP');\n  let report;\n\n  var entryHandler = (entry) => {\n    // The startTime attribute returns the value of the renderTime if it is not 0,\n    // and the value of the loadTime otherwise.\n    var value = entry.startTime;\n\n    // If the page was hidden prior to paint time of the entry,\n    // ignore it and mark the metric as final, otherwise add the entry.\n    if (value < visibilityWatcher.firstHiddenTime) {\n      metric.value = value;\n      metric.entries.push(entry);\n    }\n\n    if (report) {\n      report();\n    }\n  };\n\n  var po = observe('largest-contentful-paint', entryHandler);\n\n  if (po) {\n    report = bindReporter(onReport, metric, reportAllChanges);\n\n    var stopListening = () => {\n      if (!reportedMetricIDs[metric.id]) {\n        po.takeRecords().map(entryHandler );\n        po.disconnect();\n        reportedMetricIDs[metric.id] = true;\n        report(true);\n      }\n    };\n\n    // Stop listening after input. Note: while scrolling is an input that\n    // stop LCP observation, it's unreliable since it can be programmatically\n    // generated. See: https://github.com/GoogleChrome/web-vitals/issues/75\n    ['keydown', 'click'].forEach(type => {\n      addEventListener(type, stopListening, { once: true, capture: true });\n    });\n\n    onHidden(stopListening, true);\n  }\n};\n\nexport { getLCP };\n//# sourceMappingURL=getLCP.js.map\n","/**\n * Checks if a given value is a valid measurement value.\n */\nfunction isMeasurementValue(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n\n/**\n * Helper function to start child on transactions. This function will make sure that the transaction will\n * use the start timestamp of the created child span if it is earlier than the transactions actual\n * start timestamp.\n */\nfunction _startChild(transaction, { startTimestamp, ...ctx }) {\n  if (startTimestamp && transaction.startTimestamp > startTimestamp) {\n    transaction.startTimestamp = startTimestamp;\n  }\n\n  return transaction.startChild({\n    startTimestamp,\n    ...ctx,\n  });\n}\n\nexport { _startChild, isMeasurementValue };\n//# sourceMappingURL=utils.js.map\n","import { _nullishCoalesce } from '@sentry/utils/esm/buildPolyfills';\nimport { getGlobalObject, browserPerformanceTimeOrigin, logger, htmlTreeAsString } from '@sentry/utils';\nimport { getActiveTransaction, msToSec } from '../../utils.js';\nimport { getCLS } from '../web-vitals/getCLS.js';\nimport { getFID } from '../web-vitals/getFID.js';\nimport { getLCP } from '../web-vitals/getLCP.js';\nimport { getVisibilityWatcher } from '../web-vitals/lib/getVisibilityWatcher.js';\nimport { observe } from '../web-vitals/lib/observe.js';\nimport { _startChild, isMeasurementValue } from './utils.js';\n\nvar global = getGlobalObject();\n\nfunction getBrowserPerformanceAPI() {\n  return global && global.addEventListener && global.performance;\n}\n\nlet _performanceCursor = 0;\n\nlet _measurements = {};\nlet _lcpEntry;\nlet _clsEntry;\n\n/**\n * Start tracking web vitals\n */\nfunction startTrackingWebVitals(reportAllChanges = false) {\n  var performance = getBrowserPerformanceAPI();\n  if (performance && browserPerformanceTimeOrigin) {\n    if (performance.mark) {\n      global.performance.mark('sentry-tracing-init');\n    }\n    _trackCLS();\n    _trackLCP(reportAllChanges);\n    _trackFID();\n  }\n}\n\n/**\n * Start tracking long tasks.\n */\nfunction startTrackingLongTasks() {\n  var entryHandler = (entry) => {\n    var transaction = getActiveTransaction() ;\n    if (!transaction) {\n      return;\n    }\n    var startTime = msToSec((browserPerformanceTimeOrigin ) + entry.startTime);\n    var duration = msToSec(entry.duration);\n    transaction.startChild({\n      description: 'Main UI thread blocked',\n      op: 'ui.long-task',\n      startTimestamp: startTime,\n      endTimestamp: startTime + duration,\n    });\n  };\n\n  observe('longtask', entryHandler);\n}\n\n/** Starts tracking the Cumulative Layout Shift on the current page. */\nfunction _trackCLS() {\n  // See:\n  // https://web.dev/evolving-cls/\n  // https://web.dev/cls-web-tooling/\n  getCLS(metric => {\n    var entry = metric.entries.pop();\n    if (!entry) {\n      return;\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding CLS');\n    _measurements['cls'] = { value: metric.value, unit: '' };\n    _clsEntry = entry ;\n  });\n}\n\n/** Starts tracking the Largest Contentful Paint on the current page. */\nfunction _trackLCP(reportAllChanges) {\n  getLCP(metric => {\n    var entry = metric.entries.pop();\n    if (!entry) {\n      return;\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding LCP');\n    _measurements['lcp'] = { value: metric.value, unit: 'millisecond' };\n    _lcpEntry = entry ;\n  }, reportAllChanges);\n}\n\n/** Starts tracking the First Input Delay on the current page. */\nfunction _trackFID() {\n  getFID(metric => {\n    var entry = metric.entries.pop();\n    if (!entry) {\n      return;\n    }\n\n    var timeOrigin = msToSec(browserPerformanceTimeOrigin );\n    var startTime = msToSec(entry.startTime);\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding FID');\n    _measurements['fid'] = { value: metric.value, unit: 'millisecond' };\n    _measurements['mark.fid'] = { value: timeOrigin + startTime, unit: 'second' };\n  });\n}\n\n/** Add performance related spans to a transaction */\nfunction addPerformanceEntries(transaction) {\n  var performance = getBrowserPerformanceAPI();\n  if (!performance || !global.performance.getEntries || !browserPerformanceTimeOrigin) {\n    // Gatekeeper if performance API not available\n    return;\n  }\n\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] Adding & adjusting spans using Performance API');\n  var timeOrigin = msToSec(browserPerformanceTimeOrigin);\n\n  var performanceEntries = performance.getEntries();\n\n  let responseStartTimestamp;\n  let requestStartTimestamp;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  performanceEntries.slice(_performanceCursor).forEach((entry) => {\n    var startTime = msToSec(entry.startTime);\n    var duration = msToSec(entry.duration);\n\n    if (transaction.op === 'navigation' && timeOrigin + startTime < transaction.startTimestamp) {\n      return;\n    }\n\n    switch (entry.entryType) {\n      case 'navigation': {\n        _addNavigationSpans(transaction, entry, timeOrigin);\n        responseStartTimestamp = timeOrigin + msToSec(entry.responseStart);\n        requestStartTimestamp = timeOrigin + msToSec(entry.requestStart);\n        break;\n      }\n      case 'mark':\n      case 'paint':\n      case 'measure': {\n        _addMeasureSpans(transaction, entry, startTime, duration, timeOrigin);\n\n        // capture web vitals\n        var firstHidden = getVisibilityWatcher();\n        // Only report if the page wasn't hidden prior to the web vital.\n        var shouldRecord = entry.startTime < firstHidden.firstHiddenTime;\n\n        if (entry.name === 'first-paint' && shouldRecord) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding FP');\n          _measurements['fp'] = { value: entry.startTime, unit: 'millisecond' };\n        }\n        if (entry.name === 'first-contentful-paint' && shouldRecord) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding FCP');\n          _measurements['fcp'] = { value: entry.startTime, unit: 'millisecond' };\n        }\n        break;\n      }\n      case 'resource': {\n        var resourceName = (entry.name ).replace(global.location.origin, '');\n        _addResourceSpans(transaction, entry, resourceName, startTime, duration, timeOrigin);\n        break;\n      }\n      default:\n      // Ignore other entry types.\n    }\n  });\n\n  _performanceCursor = Math.max(performanceEntries.length - 1, 0);\n\n  _trackNavigator(transaction);\n\n  // Measurements are only available for pageload transactions\n  if (transaction.op === 'pageload') {\n    // Generate TTFB (Time to First Byte), which measured as the time between the beginning of the transaction and the\n    // start of the response in milliseconds\n    if (typeof responseStartTimestamp === 'number') {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding TTFB');\n      _measurements['ttfb'] = {\n        value: (responseStartTimestamp - transaction.startTimestamp) * 1000,\n        unit: 'millisecond',\n      };\n\n      if (typeof requestStartTimestamp === 'number' && requestStartTimestamp <= responseStartTimestamp) {\n        // Capture the time spent making the request and receiving the first byte of the response.\n        // This is the time between the start of the request and the start of the response in milliseconds.\n        _measurements['ttfb.requestTime'] = {\n          value: (responseStartTimestamp - requestStartTimestamp) * 1000,\n          unit: 'millisecond',\n        };\n      }\n    }\n\n    ['fcp', 'fp', 'lcp'].forEach(name => {\n      if (!_measurements[name] || timeOrigin >= transaction.startTimestamp) {\n        return;\n      }\n      // The web vitals, fcp, fp, lcp, and ttfb, all measure relative to timeOrigin.\n      // Unfortunately, timeOrigin is not captured within the transaction span data, so these web vitals will need\n      // to be adjusted to be relative to transaction.startTimestamp.\n      var oldValue = _measurements[name].value;\n      var measurementTimestamp = timeOrigin + msToSec(oldValue);\n\n      // normalizedValue should be in milliseconds\n      var normalizedValue = Math.abs((measurementTimestamp - transaction.startTimestamp) * 1000);\n      var delta = normalizedValue - oldValue;\n\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.log(`[Measurements] Normalized ${name} from ${oldValue} to ${normalizedValue} (${delta})`);\n      _measurements[name].value = normalizedValue;\n    });\n\n    var fidMark = _measurements['mark.fid'];\n    if (fidMark && _measurements['fid']) {\n      // create span for FID\n      _startChild(transaction, {\n        description: 'first input delay',\n        endTimestamp: fidMark.value + msToSec(_measurements['fid'].value),\n        op: 'web.vitals',\n        startTimestamp: fidMark.value,\n      });\n\n      // Delete mark.fid as we don't want it to be part of final payload\n      delete _measurements['mark.fid'];\n    }\n\n    // If FCP is not recorded we should not record the cls value\n    // according to the new definition of CLS.\n    if (!('fcp' in _measurements)) {\n      delete _measurements.cls;\n    }\n\n    Object.keys(_measurements).forEach(measurementName => {\n      transaction.setMeasurement(\n        measurementName,\n        _measurements[measurementName].value,\n        _measurements[measurementName].unit,\n      );\n    });\n\n    _tagMetricInfo(transaction);\n  }\n\n  _lcpEntry = undefined;\n  _clsEntry = undefined;\n  _measurements = {};\n}\n\n/** Create measure related spans */\nfunction _addMeasureSpans(\n  transaction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  entry,\n  startTime,\n  duration,\n  timeOrigin,\n) {\n  var measureStartTimestamp = timeOrigin + startTime;\n  var measureEndTimestamp = measureStartTimestamp + duration;\n\n  _startChild(transaction, {\n    description: entry.name ,\n    endTimestamp: measureEndTimestamp,\n    op: entry.entryType ,\n    startTimestamp: measureStartTimestamp,\n  });\n\n  return measureStartTimestamp;\n}\n\n/** Instrument navigation entries */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _addNavigationSpans(transaction, entry, timeOrigin) {\n  ['unloadEvent', 'redirect', 'domContentLoadedEvent', 'loadEvent', 'connect'].forEach(event => {\n    _addPerformanceNavigationTiming(transaction, entry, event, timeOrigin);\n  });\n  _addPerformanceNavigationTiming(transaction, entry, 'secureConnection', timeOrigin, 'TLS/SSL', 'connectEnd');\n  _addPerformanceNavigationTiming(transaction, entry, 'fetch', timeOrigin, 'cache', 'domainLookupStart');\n  _addPerformanceNavigationTiming(transaction, entry, 'domainLookup', timeOrigin, 'DNS');\n  _addRequest(transaction, entry, timeOrigin);\n}\n\n/** Create performance navigation related spans */\nfunction _addPerformanceNavigationTiming(\n  transaction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  entry,\n  event,\n  timeOrigin,\n  description,\n  eventEnd,\n) {\n  var end = eventEnd ? (entry[eventEnd] ) : (entry[`${event}End`] );\n  var start = entry[`${event}Start`] ;\n  if (!start || !end) {\n    return;\n  }\n  _startChild(transaction, {\n    op: 'browser',\n    description: _nullishCoalesce(description, () => ( event)),\n    startTimestamp: timeOrigin + msToSec(start),\n    endTimestamp: timeOrigin + msToSec(end),\n  });\n}\n\n/** Create request and response related spans */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _addRequest(transaction, entry, timeOrigin) {\n  _startChild(transaction, {\n    op: 'browser',\n    description: 'request',\n    startTimestamp: timeOrigin + msToSec(entry.requestStart ),\n    endTimestamp: timeOrigin + msToSec(entry.responseEnd ),\n  });\n\n  _startChild(transaction, {\n    op: 'browser',\n    description: 'response',\n    startTimestamp: timeOrigin + msToSec(entry.responseStart ),\n    endTimestamp: timeOrigin + msToSec(entry.responseEnd ),\n  });\n}\n\n/** Create resource-related spans */\nfunction _addResourceSpans(\n  transaction,\n  entry,\n  resourceName,\n  startTime,\n  duration,\n  timeOrigin,\n) {\n  // we already instrument based on fetch and xhr, so we don't need to\n  // duplicate spans here.\n  if (entry.initiatorType === 'xmlhttprequest' || entry.initiatorType === 'fetch') {\n    return;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  var data = {};\n  if ('transferSize' in entry) {\n    data['Transfer Size'] = entry.transferSize;\n  }\n  if ('encodedBodySize' in entry) {\n    data['Encoded Body Size'] = entry.encodedBodySize;\n  }\n  if ('decodedBodySize' in entry) {\n    data['Decoded Body Size'] = entry.decodedBodySize;\n  }\n\n  var startTimestamp = timeOrigin + startTime;\n  var endTimestamp = startTimestamp + duration;\n\n  _startChild(transaction, {\n    description: resourceName,\n    endTimestamp,\n    op: entry.initiatorType ? `resource.${entry.initiatorType}` : 'resource',\n    startTimestamp,\n    data,\n  });\n}\n\n/**\n * Capture the information of the user agent.\n */\nfunction _trackNavigator(transaction) {\n  var navigator = global.navigator ;\n  if (!navigator) {\n    return;\n  }\n\n  // track network connectivity\n  var connection = navigator.connection;\n  if (connection) {\n    if (connection.effectiveType) {\n      transaction.setTag('effectiveConnectionType', connection.effectiveType);\n    }\n\n    if (connection.type) {\n      transaction.setTag('connectionType', connection.type);\n    }\n\n    if (isMeasurementValue(connection.rtt)) {\n      _measurements['connection.rtt'] = { value: connection.rtt, unit: 'millisecond' };\n    }\n  }\n\n  if (isMeasurementValue(navigator.deviceMemory)) {\n    transaction.setTag('deviceMemory', `${navigator.deviceMemory} GB`);\n  }\n\n  if (isMeasurementValue(navigator.hardwareConcurrency)) {\n    transaction.setTag('hardwareConcurrency', String(navigator.hardwareConcurrency));\n  }\n}\n\n/** Add LCP / CLS data to transaction to allow debugging */\nfunction _tagMetricInfo(transaction) {\n  if (_lcpEntry) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding LCP Data');\n\n    // Capture Properties of the LCP element that contributes to the LCP.\n\n    if (_lcpEntry.element) {\n      transaction.setTag('lcp.element', htmlTreeAsString(_lcpEntry.element));\n    }\n\n    if (_lcpEntry.id) {\n      transaction.setTag('lcp.id', _lcpEntry.id);\n    }\n\n    if (_lcpEntry.url) {\n      // Trim URL to the first 200 characters.\n      transaction.setTag('lcp.url', _lcpEntry.url.trim().slice(0, 200));\n    }\n\n    transaction.setTag('lcp.size', _lcpEntry.size);\n  }\n\n  // See: https://developer.mozilla.org/en-US/docs/Web/API/LayoutShift\n  if (_clsEntry && _clsEntry.sources) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding CLS Data');\n    _clsEntry.sources.forEach((source, index) =>\n      transaction.setTag(`cls.source.${index + 1}`, htmlTreeAsString(source.node)),\n    );\n  }\n}\n\nexport { _addMeasureSpans, _addResourceSpans, addPerformanceEntries, startTrackingLongTasks, startTrackingWebVitals };\n//# sourceMappingURL=index.js.map\n","import { isMatchingPattern, addInstrumentationHandler, dynamicSamplingContextToSentryBaggageHeader, isInstanceOf, BAGGAGE_HEADER_NAME } from '@sentry/utils';\nimport { hasTracingEnabled, getActiveTransaction } from '../utils.js';\n\nvar DEFAULT_TRACING_ORIGINS = ['localhost', /^\\//];\n\n/** Options for Request Instrumentation */\n\nvar defaultRequestInstrumentationOptions = {\n  traceFetch: true,\n  traceXHR: true,\n  tracingOrigins: DEFAULT_TRACING_ORIGINS,\n};\n\n/** Registers span creators for xhr and fetch requests  */\nfunction instrumentOutgoingRequests(_options) {\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  const { traceFetch, traceXHR, tracingOrigins, shouldCreateSpanForRequest } = {\n    ...defaultRequestInstrumentationOptions,\n    ..._options,\n  };\n\n  // We should cache url -> decision so that we don't have to compute\n  // regexp everytime we create a request.\n  var urlMap = {};\n\n  var defaultShouldCreateSpan = (url) => {\n    if (urlMap[url]) {\n      return urlMap[url];\n    }\n    var origins = tracingOrigins;\n    urlMap[url] =\n      origins.some((origin) => isMatchingPattern(url, origin)) &&\n      !isMatchingPattern(url, 'sentry_key');\n    return urlMap[url];\n  };\n\n  // We want that our users don't have to re-implement shouldCreateSpanForRequest themselves\n  // That's why we filter out already unwanted Spans from tracingOrigins\n  let shouldCreateSpan = defaultShouldCreateSpan;\n  if (typeof shouldCreateSpanForRequest === 'function') {\n    shouldCreateSpan = (url) => {\n      return defaultShouldCreateSpan(url) && shouldCreateSpanForRequest(url);\n    };\n  }\n\n  var spans = {};\n\n  if (traceFetch) {\n    addInstrumentationHandler('fetch', (handlerData) => {\n      fetchCallback(handlerData, shouldCreateSpan, spans);\n    });\n  }\n\n  if (traceXHR) {\n    addInstrumentationHandler('xhr', (handlerData) => {\n      xhrCallback(handlerData, shouldCreateSpan, spans);\n    });\n  }\n}\n\n/**\n * Create and track fetch request spans\n */\nfunction fetchCallback(\n  handlerData,\n  shouldCreateSpan,\n  spans,\n) {\n  if (!hasTracingEnabled() || !(handlerData.fetchData && shouldCreateSpan(handlerData.fetchData.url))) {\n    return;\n  }\n\n  if (handlerData.endTimestamp) {\n    var spanId = handlerData.fetchData.__span;\n    if (!spanId) return;\n\n    var span = spans[spanId];\n    if (span) {\n      if (handlerData.response) {\n        // TODO (kmclb) remove this once types PR goes through\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        span.setHttpStatus(handlerData.response.status);\n      } else if (handlerData.error) {\n        span.setStatus('internal_error');\n      }\n      span.finish();\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[spanId];\n    }\n    return;\n  }\n\n  var activeTransaction = getActiveTransaction();\n  if (activeTransaction) {\n    var span = activeTransaction.startChild({\n      data: {\n        ...handlerData.fetchData,\n        type: 'fetch',\n      },\n      description: `${handlerData.fetchData.method} ${handlerData.fetchData.url}`,\n      op: 'http.client',\n    });\n\n    handlerData.fetchData.__span = span.spanId;\n    spans[span.spanId] = span;\n\n    var request = handlerData.args[0];\n\n    // In case the user hasn't set the second argument of a fetch call we default it to `{}`.\n    handlerData.args[1] = handlerData.args[1] || {};\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var options = handlerData.args[1];\n\n    options.headers = addTracingHeadersToFetchRequest(\n      request,\n      activeTransaction.getDynamicSamplingContext(),\n      span,\n      options,\n    );\n\n    activeTransaction.metadata.propagations += 1;\n  }\n}\n\nfunction addTracingHeadersToFetchRequest(\n  request,\n  dynamicSamplingContext,\n  span,\n  options\n\n,\n) {\n  var sentryBaggageHeader = dynamicSamplingContextToSentryBaggageHeader(dynamicSamplingContext);\n  var sentryTraceHeader = span.toTraceparent();\n\n  var headers =\n    typeof Request !== 'undefined' && isInstanceOf(request, Request) ? (request ).headers : options.headers;\n\n  if (!headers) {\n    return { 'sentry-trace': sentryTraceHeader, baggage: sentryBaggageHeader };\n  } else if (typeof Headers !== 'undefined' && isInstanceOf(headers, Headers)) {\n    var newHeaders = new Headers(headers );\n\n    newHeaders.append('sentry-trace', sentryTraceHeader);\n\n    if (sentryBaggageHeader) {\n      // If the same header is appended miultiple times the browser will merge the values into a single request header.\n      // Its therefore safe to simply push a \"baggage\" entry, even though there might already be another baggage header.\n      newHeaders.append(BAGGAGE_HEADER_NAME, sentryBaggageHeader);\n    }\n\n    return newHeaders ;\n  } else if (Array.isArray(headers)) {\n    var newHeaders = [...headers, ['sentry-trace', sentryTraceHeader]];\n\n    if (sentryBaggageHeader) {\n      // If there are multiple entries with the same key, the browser will merge the values into a single request header.\n      // Its therefore safe to simply push a \"baggage\" entry, even though there might already be another baggage header.\n      newHeaders.push([BAGGAGE_HEADER_NAME, sentryBaggageHeader]);\n    }\n\n    return newHeaders;\n  } else {\n    var existingBaggageHeader = 'baggage' in headers ? headers.baggage : undefined;\n    var newBaggageHeaders = [];\n\n    if (Array.isArray(existingBaggageHeader)) {\n      newBaggageHeaders.push(...existingBaggageHeader);\n    } else if (existingBaggageHeader) {\n      newBaggageHeaders.push(existingBaggageHeader);\n    }\n\n    if (sentryBaggageHeader) {\n      newBaggageHeaders.push(sentryBaggageHeader);\n    }\n\n    return {\n      ...(headers ),\n      'sentry-trace': sentryTraceHeader,\n      baggage: newBaggageHeaders.length > 0 ? newBaggageHeaders.join(',') : undefined,\n    };\n  }\n}\n\n/**\n * Create and track xhr request spans\n */\nfunction xhrCallback(\n  handlerData,\n  shouldCreateSpan,\n  spans,\n) {\n  if (\n    !hasTracingEnabled() ||\n    (handlerData.xhr && handlerData.xhr.__sentry_own_request__) ||\n    !(handlerData.xhr && handlerData.xhr.__sentry_xhr__ && shouldCreateSpan(handlerData.xhr.__sentry_xhr__.url))\n  ) {\n    return;\n  }\n\n  var xhr = handlerData.xhr.__sentry_xhr__;\n\n  // check first if the request has finished and is tracked by an existing span which should now end\n  if (handlerData.endTimestamp) {\n    var spanId = handlerData.xhr.__sentry_xhr_span_id__;\n    if (!spanId) return;\n\n    var span = spans[spanId];\n    if (span) {\n      span.setHttpStatus(xhr.status_code);\n      span.finish();\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[spanId];\n    }\n    return;\n  }\n\n  // if not, create a new span to track it\n  var activeTransaction = getActiveTransaction();\n  if (activeTransaction) {\n    var span = activeTransaction.startChild({\n      data: {\n        ...xhr.data,\n        type: 'xhr',\n        method: xhr.method,\n        url: xhr.url,\n      },\n      description: `${xhr.method} ${xhr.url}`,\n      op: 'http.client',\n    });\n\n    handlerData.xhr.__sentry_xhr_span_id__ = span.spanId;\n    spans[handlerData.xhr.__sentry_xhr_span_id__] = span;\n\n    if (handlerData.xhr.setRequestHeader) {\n      try {\n        handlerData.xhr.setRequestHeader('sentry-trace', span.toTraceparent());\n\n        var dynamicSamplingContext = activeTransaction.getDynamicSamplingContext();\n        var sentryBaggageHeader = dynamicSamplingContextToSentryBaggageHeader(dynamicSamplingContext);\n\n        if (sentryBaggageHeader) {\n          // From MDN: \"If this method is called several times with the same header, the values are merged into one single request header.\"\n          // We can therefore simply set a baggage header without checking what was there before\n          // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/setRequestHeader\n          handlerData.xhr.setRequestHeader(BAGGAGE_HEADER_NAME, sentryBaggageHeader);\n        }\n\n        activeTransaction.metadata.propagations += 1;\n      } catch (_) {\n        // Error: InvalidStateError: Failed to execute 'setRequestHeader' on 'XMLHttpRequest': The object's state must be OPENED.\n      }\n    }\n  }\n}\n\nexport { DEFAULT_TRACING_ORIGINS, defaultRequestInstrumentationOptions, fetchCallback, instrumentOutgoingRequests, xhrCallback };\n//# sourceMappingURL=request.js.map\n","import { getGlobalObject, logger, addInstrumentationHandler } from '@sentry/utils';\n\nvar global = getGlobalObject();\n\n/**\n * Default function implementing pageload and navigation transactions\n */\nfunction instrumentRoutingWithDefaults(\n  customStartTransaction,\n  startTransactionOnPageLoad = true,\n  startTransactionOnLocationChange = true,\n) {\n  if (!global || !global.location) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Could not initialize routing instrumentation due to invalid location');\n    return;\n  }\n\n  let startingUrl = global.location.href;\n\n  let activeTransaction;\n  if (startTransactionOnPageLoad) {\n    activeTransaction = customStartTransaction({\n      name: global.location.pathname,\n      op: 'pageload',\n      metadata: { source: 'url' },\n    });\n  }\n\n  if (startTransactionOnLocationChange) {\n    addInstrumentationHandler('history', ({ to, from }) => {\n      /**\n       * This early return is there to account for some cases where a navigation transaction starts right after\n       * long-running pageload. We make sure that if `from` is undefined and a valid `startingURL` exists, we don't\n       * create an uneccessary navigation transaction.\n       *\n       * This was hard to duplicate, but this behavior stopped as soon as this fix was applied. This issue might also\n       * only be caused in certain development environments where the usage of a hot module reloader is causing\n       * errors.\n       */\n      if (from === undefined && startingUrl && startingUrl.indexOf(to) !== -1) {\n        startingUrl = undefined;\n        return;\n      }\n\n      if (from !== to) {\n        startingUrl = undefined;\n        if (activeTransaction) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] Finishing current transaction with op: ${activeTransaction.op}`);\n          // If there's an open transaction on the scope, we need to finish it before creating an new one.\n          activeTransaction.finish();\n        }\n        activeTransaction = customStartTransaction({\n          name: global.location.pathname,\n          op: 'navigation',\n          metadata: { source: 'url' },\n        });\n      }\n    });\n  }\n}\n\nexport { instrumentRoutingWithDefaults };\n//# sourceMappingURL=router.js.map\n","import { _optionalChain } from '@sentry/utils/esm/buildPolyfills';\nimport { logger, extractTraceparentData, baggageHeaderToDynamicSamplingContext, getGlobalObject, getDomElement } from '@sentry/utils';\nimport { startIdleTransaction } from '../hubextensions.js';\nimport { DEFAULT_IDLE_TIMEOUT, DEFAULT_FINAL_TIMEOUT } from '../idletransaction.js';\nimport '../utils.js';\nimport { registerBackgroundTabDetection } from './backgroundtab.js';\nimport { startTrackingWebVitals, startTrackingLongTasks, addPerformanceEntries } from './metrics/index.js';\nimport { defaultRequestInstrumentationOptions, instrumentOutgoingRequests } from './request.js';\nimport { instrumentRoutingWithDefaults } from './router.js';\n\nvar BROWSER_TRACING_INTEGRATION_ID = 'BrowserTracing';\n\n/** Options for Browser Tracing integration */\n\nvar DEFAULT_BROWSER_TRACING_OPTIONS = {\n  idleTimeout: DEFAULT_IDLE_TIMEOUT,\n  finalTimeout: DEFAULT_FINAL_TIMEOUT,\n  markBackgroundTransactions: true,\n  routingInstrumentation: instrumentRoutingWithDefaults,\n  startTransactionOnLocationChange: true,\n  startTransactionOnPageLoad: true,\n  _experiments: { enableLongTask: true },\n  ...defaultRequestInstrumentationOptions,\n};\n\n/**\n * The Browser Tracing integration automatically instruments browser pageload/navigation\n * actions as transactions, and captures requests, metrics and errors as spans.\n *\n * The integration can be configured with a variety of options, and can be extended to use\n * any routing library. This integration uses {@see IdleTransaction} to create transactions.\n */\nclass BrowserTracing  {\n  // This class currently doesn't have a static `id` field like the other integration classes, because it prevented\n  // @sentry/tracing from being treeshaken. Tree shakers do not like static fields, because they behave like side effects.\n  // TODO: Come up with a better plan, than using static fields on integration classes, and use that plan on all\n  // integrations.\n\n  /** Browser Tracing integration options */\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = BROWSER_TRACING_INTEGRATION_ID;}\n\n   constructor(_options) {;BrowserTracing.prototype.__init.call(this);\n    let tracingOrigins = defaultRequestInstrumentationOptions.tracingOrigins;\n    // NOTE: Logger doesn't work in constructors, as it's initialized after integrations instances\n    if (_options) {\n      if (_options.tracingOrigins && Array.isArray(_options.tracingOrigins)) {\n        tracingOrigins = _options.tracingOrigins;\n      } else {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && (this._emitOptionsWarning = true);\n      }\n    }\n\n    this.options = {\n      ...DEFAULT_BROWSER_TRACING_OPTIONS,\n      ..._options,\n      tracingOrigins,\n    };\n\n    const { _metricOptions } = this.options;\n    startTrackingWebVitals(_metricOptions && _metricOptions._reportAllChanges);\n    if (_optionalChain([this, 'access', _2 => _2.options, 'access', _3 => _3._experiments, 'optionalAccess', _4 => _4.enableLongTask])) {\n      startTrackingLongTasks();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    this._getCurrentHub = getCurrentHub;\n\n    if (this._emitOptionsWarning) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn(\n          '[Tracing] You need to define `tracingOrigins` in the options. Set an array of urls or patterns to trace.',\n        );\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn(\n          `[Tracing] We added a reasonable default for you: ${defaultRequestInstrumentationOptions.tracingOrigins}`,\n        );\n    }\n\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const {\n      routingInstrumentation: instrumentRouting,\n      startTransactionOnLocationChange,\n      startTransactionOnPageLoad,\n      markBackgroundTransactions,\n      traceFetch,\n      traceXHR,\n      tracingOrigins,\n      shouldCreateSpanForRequest,\n    } = this.options;\n\n    instrumentRouting(\n      (context) => this._createRouteTransaction(context),\n      startTransactionOnPageLoad,\n      startTransactionOnLocationChange,\n    );\n\n    if (markBackgroundTransactions) {\n      registerBackgroundTabDetection();\n    }\n\n    instrumentOutgoingRequests({ traceFetch, traceXHR, tracingOrigins, shouldCreateSpanForRequest });\n  }\n\n  /** Create routing idle transaction. */\n   _createRouteTransaction(context) {\n    if (!this._getCurrentHub) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn(`[Tracing] Did not create ${context.op} transaction because _getCurrentHub is invalid.`);\n      return undefined;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const { beforeNavigate, idleTimeout, finalTimeout } = this.options;\n\n    var isPageloadTransaction = context.op === 'pageload';\n\n    var sentryTraceMetaTagValue = isPageloadTransaction ? getMetaContent('sentry-trace') : null;\n    var baggageMetaTagValue = isPageloadTransaction ? getMetaContent('baggage') : null;\n\n    var traceParentData = sentryTraceMetaTagValue ? extractTraceparentData(sentryTraceMetaTagValue) : undefined;\n    var dynamicSamplingContext = baggageMetaTagValue\n      ? baggageHeaderToDynamicSamplingContext(baggageMetaTagValue)\n      : undefined;\n\n    var expandedContext = {\n      ...context,\n      ...traceParentData,\n      metadata: {\n        ...context.metadata,\n        dynamicSamplingContext: traceParentData && !dynamicSamplingContext ? {} : dynamicSamplingContext,\n      },\n      trimEnd: true,\n    };\n\n    var modifiedContext = typeof beforeNavigate === 'function' ? beforeNavigate(expandedContext) : expandedContext;\n\n    // For backwards compatibility reasons, beforeNavigate can return undefined to \"drop\" the transaction (prevent it\n    // from being sent to Sentry).\n    var finalContext = modifiedContext === undefined ? { ...expandedContext, sampled: false } : modifiedContext;\n\n    // If `beforeNavigate` set a custom name, record that fact\n    finalContext.metadata =\n      finalContext.name !== expandedContext.name\n        ? { ...finalContext.metadata, source: 'custom' }\n        : finalContext.metadata;\n\n    if (finalContext.sampled === false) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.log(`[Tracing] Will not send ${finalContext.op} transaction because of beforeNavigate.`);\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] Starting ${finalContext.op} transaction on scope`);\n\n    var hub = this._getCurrentHub();\n    const { location } = getGlobalObject() ;\n\n    var idleTransaction = startIdleTransaction(\n      hub,\n      finalContext,\n      idleTimeout,\n      finalTimeout,\n      true,\n      { location }, // for use in the tracesSampler\n    );\n    idleTransaction.registerBeforeFinishCallback(transaction => {\n      addPerformanceEntries(transaction);\n      transaction.setTag(\n        'sentry_reportAllChanges',\n        Boolean(this.options._metricOptions && this.options._metricOptions._reportAllChanges),\n      );\n    });\n\n    return idleTransaction ;\n  }\n}\n\n/** Returns the value of a meta tag */\nfunction getMetaContent(metaName) {\n  // Can't specify generic to `getDomElement` because tracing can be used\n  // in a variety of environments, have to disable `no-unsafe-member-access`\n  // as a result.\n  var metaTag = getDomElement(`meta[name=${metaName}]`);\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return metaTag ? metaTag.getAttribute('content') : null;\n}\n\nexport { BROWSER_TRACING_INTEGRATION_ID, BrowserTracing, getMetaContent };\n//# sourceMappingURL=browsertracing.js.map\n","import { addExtensionMethods } from './hubextensions.js';\nexport { addExtensionMethods, startIdleTransaction } from './hubextensions.js';\nimport * as index from './integrations/index.js';\nexport { index as Integrations };\nimport './browser/index.js';\nexport { Span, spanStatusfromHttpCode } from './span.js';\nexport { SpanStatus } from './spanstatus.js';\nexport { Transaction } from './transaction.js';\nexport { IdleTransaction } from './idletransaction.js';\nexport { getActiveTransaction, hasTracingEnabled } from './utils.js';\nexport { BROWSER_TRACING_INTEGRATION_ID, BrowserTracing } from './browser/browsertracing.js';\nexport { defaultRequestInstrumentationOptions, instrumentOutgoingRequests } from './browser/request.js';\nexport { TRACEPARENT_REGEXP, extractTraceparentData, stripUrlQueryAndFragment } from '@sentry/utils';\n\n;\n;\n\n// Treeshakable guard to remove all code related to tracing\n\n// Guard for tree\nif (typeof __SENTRY_TRACING__ === 'undefined' || __SENTRY_TRACING__) {\n  // We are patching the global object with our hub extension methods\n  addExtensionMethods();\n}\n//# sourceMappingURL=index.js.map\n","import * as Sentry from \"@sentry/browser\"\nimport { BrowserTracing } from \"@sentry/tracing\"\nimport { RELEASE } from \"../config\"\nimport { assert } from \"../lib/assert\"\n\nwindow.sentry = Sentry\n\nexport function setupSentry({ dsn, Vue } = {}) {\n  assert(dsn)\n  assert(Vue)\n\n  Sentry.init({\n    dsn,\n    release: RELEASE,\n    integrations: [new BrowserTracing()],\n\n    // beforeBreadcrumb(breadcrumb) {\n    //   // console.log(\"bc\", breadcrumb)\n    //   return breadcrumb.category === \"console\" ? null : breadcrumb\n    // },\n    // async beforeSend(event) {\n    //   // console.log(\"ev\", event)\n    //   return event\n    // },\n  })\n}\n"],"names":["isGlobalObj","obj","GLOBAL","getGlobalObject","getGlobalSingleton","name","creator","global","__SENTRY__","singleton","objectToString","isError","wat","isInstanceOf","isBuiltin","className","isErrorEvent","isDOMError","isDOMException","isString","isPrimitive","isPlainObject","isEvent","isElement","isRegExp","isThenable","isSyntheticEvent","isNaN","base","_e","htmlTreeAsString","elem","keyAttrs","currentElem","MAX_TRAVERSE_HEIGHT","MAX_OUTPUT_LEN","out","height","len","separator","sepLength","nextStr","_htmlElementAsString","_oO","el","classes","key","attr","i","keyAttrPairs","keyAttr","keyAttrPair","allowedAttrs","getLocationHref","oO","getDomElement","selector","SentryError","message","logLevel","DSN_REGEX","isValidProtocol","protocol","dsnToString","dsn","withPassword","host","path","pass","port","projectId","publicKey","dsnFromString","str","match","lastPath","split","projectMatch","dsnFromComponents","components","validateDsn","requiredComponents","component","makeDsn","from","PREFIX","CONSOLE_LEVELS","consoleSandbox","callback","originalConsole","wrappedLevels","level","originalWrappedFunc","makeLogger","enabled","logger","args","truncate","max","safeJoin","input","delimiter","output","value","e","isMatchingPattern","pattern","fill","source","replacementFactory","original","wrapped","markFunctionWrapped","_Oo","addNonEnumerableProperty","proto","getOriginalFunction","func","urlEncode","object","convertToPlainObject","__spreadValues","getOwnProperties","newObj","serializeEventTarget","target","extractedProps","property","extractExceptionKeysForMessage","exception","maxLength","keys","includedKeys","serialized","dropUndefinedKeys","inputValue","memoizationMap","_dropUndefinedKeys","memoVal","returnValue","item","_nullishCoalesce","lhs","rhsFn","_optionalChain","ops","lastAccessLHS","op","fn","STACKTRACE_LIMIT","createStackParser","parsers","sortedParsers","a","b","p","stack","skipFirst","frames","line","cleanedLine","parser","frame","stripSentryFramesAndReverse","stackParserFromStackParserOptions","stackParser","localStack","firstFrameFunction","lastFrameFunction","__spreadProps","defaultFunctionName","getFunctionName","supportsFetch","isNativeFetch","supportsNativeFetch","result","doc","sandbox","err","supportsHistory","chrome","isChromePackagedApp","hasHistoryApi","handlers","instrumented","instrument","type","instrumentConsole","instrumentDOM","instrumentXHR","instrumentFetch","instrumentHistory","instrumentError","instrumentUnhandledRejection","addInstrumentationHandler","triggerHandlers","data","handler","originalConsoleMethod","originalFetch","handlerData","getFetchMethod","getFetchUrl","response","error","fetchArgs","xhrproto","originalOpen","xhr","url","xhrInfo","onreadystatechangeHandler","readyStateArgs","originalSend","lastHref","oldOnPopState","to","historyReplacementFunction","originalHistoryFunction","debounceDuration","debounceTimerID","lastCapturedEvent","shouldShortcircuitPreviousDebounce","previous","current","shouldSkipDOMEvent","event","makeDOMEventHandler","globalListener","triggerDOMHandler","globalDOMEventHandler","originalAddEventListener","listener","options","handlerForType","originalRemoveEventListener","_oldOnErrorHandler","msg","column","_oldOnUnhandledRejectionHandler","memoBuilder","hasWeakSet","inner","memoize","unmemoize","uuid4","crypto","getRandomByte","c","getFirstException","getEventDescription","eventId","firstException","addExceptionTypeValue","values","addExceptionMechanism","newMechanism","defaultMechanism","currentMechanism","mergedData","checkOrSetAlreadyCaught","arrayify","maybeArray","isBrowserBundle","isNodeEnv","dynamicRequire","mod","request","loadModule","moduleName","cwd","normalize","depth","maxProperties","visit","normalizeToSize","maxSize","normalized","jsonSize","memo","stringified","stringifyValue","valueWithToJSON","jsonValue","numAdded","visitable","visitKey","visitValue","utf8Length","States","PENDING","RESOLVED","REJECTED","resolvedSyncPromise","SyncPromise","resolve","rejectedSyncPromise","reason","_","reject","executor","onfulfilled","onrejected","val","onfinally","isRejected","state","cachedHandlers","makePromiseBuffer","limit","buffer","isReady","remove","task","add","taskProducer","drain","timeout","counter","capturedSetTimeout","parseUrl","query","fragment","validSeverityLevels","severityLevelFromString","dateTimestampSource","getBrowserPerformance","performance","timeOrigin","getNodePerformance","perfHooks","platformPerformance","timestampSource","dateTimestampInSeconds","timestampInSeconds","timestampWithMs","browserPerformanceTimeOrigin","threshold","performanceNow","dateNow","timeOriginDelta","timeOriginIsReliable","navigationStart","hasNavigationStart","navigationStartDelta","navigationStartIsReliable","TRACEPARENT_REGEXP","extractTraceparentData","traceparent","matches","parentSampled","createEnvelope","headers","items","addItemToEnvelope","envelope","newItem","forEachEnvelopeItem","envelopeItems","envelopeItem","envelopeItemType","encodeUTF8","textEncoder","utf8","serializeEnvelope","envHeaders","parts","append","next","itemHeaders","payload","concatBuffers","buffers","totalLength","acc","buf","merged","offset","createAttachmentEnvelopeItem","attachment","ITEM_TYPE_TO_DATA_CATEGORY_MAP","envelopeItemTypeToDataCategory","createClientReportEnvelope","discarded_events","timestamp","clientReportItem","DEFAULT_RETRY_AFTER","parseRetryAfterHeader","header","now","headerDelay","headerDate","disabledUntil","limits","category","isRateLimited","updateRateLimits","statusCode","updatedRateLimits","rateLimitHeader","retryAfterHeader","retryAfter","categories","delay","BAGGAGE_HEADER_NAME","SENTRY_BAGGAGE_KEY_PREFIX","SENTRY_BAGGAGE_KEY_PREFIX_REGEX","MAX_BAGGAGE_STRING_LENGTH","baggageHeaderToDynamicSamplingContext","baggageHeader","baggageObject","curr","currBaggageObject","baggageHeaderToObject","dynamicSamplingContext","nonPrefixedKey","dynamicSamplingContextToSentryBaggageHeader","sentryPrefixedDSC","dscKey","dscValue","objectToBaggageHeader","baggageEntry","keyOrValue","objectKey","objectValue","currentIndex","newBaggageHeader","makeSession","context","startingTime","session","sessionToJSON","updateSession","duration","closeSession","status","MAX_BREADCRUMBS","Scope","scope","newScope","user","requestSession","tags","extras","extra","fingerprint","span","captureContext","updatedScope","breadcrumb","maxBreadcrumbs","maxCrumbs","mergedBreadcrumb","hint","transactionName","getGlobalEventProcessors","newData","processors","index","processor","final","addGlobalEventProcessor","API_VERSION","DEFAULT_BREADCRUMBS","Hub","client","_version","version","top","syntheticException","beforeBreadcrumb","finalBreadcrumb","oldHub","makeMain","integration","customSamplingContext","endSession","layer","release","environment","userAgent","currentSession","method","carrier","getMainCarrier","sentry","hub","registry","getHubFromCarrier","setHubOnCarrier","getCurrentHub","hasHubOnCarrier","getHubFromActiveDomain","activeDomain","registryHubTopStack","captureException","captureMessage","captureEvent","configureScope","addBreadcrumb","setContext","setExtras","setExtra","setTags","setTag","setUser","withScope","startTransaction","SENTRY_API_VERSION","getBaseApiEndpoint","_getIngestEndpoint","_encodedAuth","sdkInfo","getEnvelopeEndpointWithUrlEncodedAuth","tunnelOrOptions","tunnel","getReportDialogEndpoint","dsnLike","dialogOptions","endpoint","encodedOptions","getSdkMetadataForEnvelopeHeader","metadata","enhanceEventWithSdkInfo","createSessionEnvelope","envelopeHeaders","createEventEnvelope","eventType","createEventEnvelopeHeaders","eventItem","installedIntegrations","filterDuplicates","integrations","integrationsByName","currentInstance","existingInstance","getIntegrationsToSetup","defaultIntegrations","userIntegrations","finalIntegrations","debugIndex","debugInstance","setupIntegrations","integrationIndex","ALREADY_SEEN_ERROR","BaseClient","promisedEvent","transport","clientFinished","transportFlushed","integrationId","env","crashed","errored","exceptions","ex","mechanism","sessionNonTerminal","shouldUpdateAndSend","ticked","tick","interval","normalizeDepth","normalizeMaxBreadth","prepared","finalScope","attachments","evt","maxBreadth","dist","maxValueLength","integrationsArray","finalEvent","sentryError","beforeSend","sampleRate","isTransaction","isInternalException","beforeSendResult","_ensureBeforeSendRv","processedEvent","transactionInfo","promise","outcomes","rv","nullErr","initAndBind","clientClass","DEFAULT_TRANSPORT_BUFFER_SIZE","createTransport","makeRequest","rateLimits","flush","send","filteredEnvelopeItems","envelopeItemDataCategory","filteredEnvelope","recordEnvelopeLoss","requestTask","SDK_VERSION","originalFunctionToString","FunctionToString","DEFAULT_IGNORE_ERRORS","InboundFilters","_options","eventProcess","self","clientOptions","_mergeOptions","_shouldDropEvent","internalOptions","_isSentryError","_isIgnoredError","_isDeniedUrl","_getEventFilterUrl","_isAllowedUrl","ignoreErrors","_getPossibleEventMessages","denyUrls","allowUrls","_getLastValidUrl","exceptionFromError","parseStackFrames","extractMessage","eventFromPlainObject","isUnhandledRejection","eventFromError","stacktrace","popSize","getPopSize","reactMinifiedRegexp","eventFromException","attachStacktrace","eventFromUnknownInput","eventFromMessage","eventFromString","errorEvent","domException","objectException","BREADCRUMB_INTEGRATION_ID","Breadcrumbs","_consoleBreadcrumb","_domBreadcrumb","_xhrBreadcrumb","_fetchBreadcrumb","_historyBreadcrumb","dom","_innerDomBreadcrumb","status_code","body","parsedLoc","parsedFrom","parsedTo","globalObject","BrowserClient","breadcrumbIntegration","isRealNavigator","hasSendBeacon","sendBeacon","cachedFetchImpl","getNativeFetchImplementation","document","fetchImpl","contentWindow","makeFetchTransport","nativeFetch","requestOptions","XHR_READYSTATE_DONE","makeXHRTransport","UNKNOWN_FUNCTION","OPERA10_PRIORITY","OPERA11_PRIORITY","CHROME_PRIORITY","WINJS_PRIORITY","GECKO_PRIORITY","createFrame","filename","lineno","colno","chromeRegex","chromeEvalRegex","isEval","subMatch","extractSafariExtensionDetails","chromeStackLineParser","geckoREgex","geckoEvalRegex","gecko","geckoStackLineParser","winjsRegex","winjs","winjsStackLineParser","opera10Regex","opera10","opera10StackLineParser","opera11Regex","opera11","opera11StackLineParser","defaultStackLineParsers","defaultStackParser","isSafariExtension","isSafariWebExtension","ignoreOnError","shouldIgnoreOnError","ignoreNextOnError","wrap","before","wrapper","sentryWrapped","wrappedArguments","arg","descriptor","GlobalHandlers","_installGlobalOnErrorHandler","_installGlobalOnUnhandledRejectionHandler","installFunc","globalHandlerLog","getHubAndOptions","_eventFromIncompleteOnError","_enhanceEventWithInitialFrame","addMechanismAndCapture","_eventFromRejectionWithPrimitive","ERROR_TYPES_RE","groups","ev","ev0","ev0s","ev0sf","DEFAULT_EVENT_TARGET","TryCatch","_wrapTimeFunction","_wrapRAF","_wrapXHR","eventTargetOption","eventTarget","_wrapEventTarget","originalCallback","xmlHttpRequestProps","prop","wrapOptions","originalFunction","eventName","wrappedEventHandler","originalEventHandler","DEFAULT_KEY","DEFAULT_LIMIT","LinkedErrors","_handler","linkedErrors","_walkErrorTree","HttpContext","referrer","Dedupe","eventProcessor","currentEvent","previousEvent","_isSameMessageEvent","_isSameExceptionEvent","currentMessage","previousMessage","_isSameFingerprint","_isSameStacktrace","previousException","_getExceptionFromEvent","currentException","currentFrames","_getFramesFromEvent","previousFrames","frameA","frameB","currentFingerprint","previousFingerprint","Integrations.InboundFilters","Integrations.FunctionToString","init","window","startSessionTracking","showReportDialog","script","injectionPoint","lastEventId","forceLoad","onLoad","close","wrap$1","startSessionOnHub","windowIntegrations","_window","INTEGRATIONS","Integrations","hasTracingEnabled","maybeOptions","getActiveTransaction","maybeHub","msToSec","time","registerErrorInstrumentation","errorCallback","activeTransaction","SpanRecorder","maxlen","Span","spanContext","childSpan","opStr","nameStr","idStr","logMessage","httpStatus","spanStatus","spanStatusfromHttpCode","endTimestamp","sampledString","Transaction","transactionContext","incomingDynamicSamplingContext","newName","unit","newMetadata","finishedSpans","s","prev","transaction","hasMeasurements","public_key","maybeSampleRate","sample_rate","user_segment","dsc","DEFAULT_IDLE_TIMEOUT","DEFAULT_FINAL_TIMEOUT","HEARTBEAT_INTERVAL","IdleTransactionSpanRecorder","_pushActivity","_popActivity","transactionSpanId","IdleTransaction","_idleHub","_idleTimeout","_finalTimeout","_onScope","clearActiveTransaction","keepSpan","pushActivity","id","popActivity","spanId","heartbeatString","traceHeaders","sample","samplingContext","isValidSampleRate","rate","_startTransaction","startIdleTransaction","idleTimeout","finalTimeout","onScope","_addTracingExtensions","_autoloadDatabaseIntegrations","packageToIntegrationMapping","mappedPackages","pkg","addExtensionMethods","registerBackgroundTabDetection","statusType","bindReporter","metric","reportAllChanges","prevValue","forceReport","generateUniqueID","initMetric","observe","po","l","onHidden","cb","once","onHiddenOrPageHide","getCLS","onReport","report","sessionValue","sessionEntries","entryHandler","entry","firstSessionEntry","lastSessionEntry","firstHiddenTime","initHiddenTime","trackChanges","timeStamp","getVisibilityWatcher","getFID","visibilityWatcher","reportedMetricIDs","getLCP","stopListening","isMeasurementValue","_startChild","_a","_b","startTimestamp","ctx","__objRest","getBrowserPerformanceAPI","_performanceCursor","_measurements","_lcpEntry","_clsEntry","startTrackingWebVitals","_trackCLS","_trackLCP","_trackFID","startTrackingLongTasks","startTime","addPerformanceEntries","performanceEntries","responseStartTimestamp","requestStartTimestamp","_addNavigationSpans","_addMeasureSpans","firstHidden","shouldRecord","resourceName","_addResourceSpans","_trackNavigator","oldValue","measurementTimestamp","normalizedValue","delta","fidMark","measurementName","_tagMetricInfo","measureStartTimestamp","measureEndTimestamp","_addPerformanceNavigationTiming","_addRequest","description","eventEnd","end","start","navigator","connection","DEFAULT_TRACING_ORIGINS","defaultRequestInstrumentationOptions","instrumentOutgoingRequests","traceFetch","traceXHR","tracingOrigins","shouldCreateSpanForRequest","urlMap","defaultShouldCreateSpan","origins","origin","shouldCreateSpan","spans","fetchCallback","xhrCallback","addTracingHeadersToFetchRequest","sentryBaggageHeader","sentryTraceHeader","newHeaders","existingBaggageHeader","newBaggageHeaders","instrumentRoutingWithDefaults","customStartTransaction","startTransactionOnPageLoad","startTransactionOnLocationChange","startingUrl","BROWSER_TRACING_INTEGRATION_ID","DEFAULT_BROWSER_TRACING_OPTIONS","BrowserTracing","_metricOptions","_2","_3","_4","instrumentRouting","markBackgroundTransactions","beforeNavigate","isPageloadTransaction","sentryTraceMetaTagValue","getMetaContent","baggageMetaTagValue","traceParentData","expandedContext","modifiedContext","finalContext","location","idleTransaction","metaName","metaTag","Sentry","setupSentry","Vue","assert","Sentry.init","RELEASE"],"mappings":"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"}